# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 00:56+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid ":mod:`code` --- Interpreter base classes"
msgstr ":mod:`code` --- Базові класи інтерпретатора"

msgid "**Source code:** :source:`Lib/code.py`"
msgstr "**Вихідний код:** :source:`Lib/code.py`"

msgid ""
"The ``code`` module provides facilities to implement read-eval-print loops "
"in Python.  Two classes and convenience functions are included which can be "
"used to build applications which provide an interactive interpreter prompt."
msgstr ""
"Модуль ``code`` надає засоби для реалізації циклів читання-оцінки-друку в "
"Python. Включено два класи та додаткові функції, які можна використовувати "
"для створення програм, які надають інтерактивну підказку інтерпретатора."

msgid ""
"This class deals with parsing and interpreter state (the user's namespace); "
"it does not deal with input buffering or prompting or input file naming (the "
"filename is always passed in explicitly). The optional *locals* argument "
"specifies the dictionary in which code will be executed; it defaults to a "
"newly created dictionary with key ``'__name__'`` set to ``'__console__'`` "
"and key ``'__doc__'`` set to ``None``."
msgstr ""
"Цей клас займається аналізом та станом інтерпретатора (простір імен "
"користувача); він не стосується буферизації вхідних даних, підказок або "
"іменування вхідних файлів (назва файлу завжди передається явно). "
"Необов'язковий аргумент *locals* визначає словник, у якому виконуватиметься "
"код; за замовчуванням він використовує щойно створений словник із ключем "
"``'__name__''``, встановленим на ``'__console__''``, і ключем "
"``'__doc__''``, встановленим на ``None``."

msgid ""
"Closely emulate the behavior of the interactive Python interpreter. This "
"class builds on :class:`InteractiveInterpreter` and adds prompting using the "
"familiar ``sys.ps1`` and ``sys.ps2``, and input buffering."
msgstr ""
"Наслідуйте поведінку інтерактивного інтерпретатора Python. Цей клас "
"базується на :class:`InteractiveInterpreter` і додає підказки за допомогою "
"знайомих ``sys.ps1`` і ``sys.ps2``, а також буферизацію введення."

msgid ""
"Convenience function to run a read-eval-print loop.  This creates a new "
"instance of :class:`InteractiveConsole` and sets *readfunc* to be used as "
"the :meth:`InteractiveConsole.raw_input` method, if provided.  If *local* is "
"provided, it is passed to the :class:`InteractiveConsole` constructor for "
"use as the default namespace for the interpreter loop.  The :meth:`interact` "
"method of the instance is then run with *banner* and *exitmsg* passed as the "
"banner and exit message to use, if provided.  The console object is "
"discarded after use."
msgstr ""
"Зручна функція для запуску циклу читання-оцінка-друк. Це створює новий "
"екземпляр :class:`InteractiveConsole` і встановлює *readfunc* для "
"використання як метод :meth:`InteractiveConsole.raw_input`, якщо він "
"надається. Якщо вказано *local*, воно передається конструктору :class:"
"`InteractiveConsole` для використання як простору імен за замовчуванням для "
"циклу інтерпретатора. Потім запускається метод :meth:`interact` екземпляра з "
"*banner* і *exitmsg*, які передаються як банер і повідомлення про вихід, "
"якщо воно надається. Після використання об’єкт консолі викидається."

msgid "Added *exitmsg* parameter."
msgstr "Додано параметр *exitmsg*."

msgid ""
"This function is useful for programs that want to emulate Python's "
"interpreter main loop (a.k.a. the read-eval-print loop).  The tricky part is "
"to determine when the user has entered an incomplete command that can be "
"completed by entering more text (as opposed to a complete command or a "
"syntax error).  This function *almost* always makes the same decision as the "
"real interpreter main loop."
msgstr ""
"Ця функція корисна для програм, які хочуть емулювати основний цикл "
"інтерпретатора Python (він же цикл читання-оцінки-друку). Складна частина "
"полягає в тому, щоб визначити, коли користувач ввів неповну команду, яку "
"можна завершити введенням додаткового тексту (на відміну від повної команди "
"чи синтаксичної помилки). Ця функція *майже* завжди приймає те саме рішення, "
"що й основний цикл реального інтерпретатора."

msgid ""
"*source* is the source string; *filename* is the optional filename from "
"which source was read, defaulting to ``'<input>'``; and *symbol* is the "
"optional grammar start symbol, which should be ``'single'`` (the default), "
"``'eval'`` or ``'exec'``."
msgstr ""
"*джерело* - вихідний рядок; *ім’я файлу* — необов’язкове ім’я файлу, з якого "
"було прочитано джерело, за умовчанням ``' <input> ''``; і *symbol* є "
"необов’язковим символом початку граматики, який має бути ``'single'`` (за "
"замовчуванням), ``'eval'`` або ``'exec'``."

msgid ""
"Returns a code object (the same as ``compile(source, filename, symbol)``) if "
"the command is complete and valid; ``None`` if the command is incomplete; "
"raises :exc:`SyntaxError` if the command is complete and contains a syntax "
"error, or raises :exc:`OverflowError` or :exc:`ValueError` if the command "
"contains an invalid literal."
msgstr ""
"Повертає об’єкт коду (те саме, що ``compile(source, filename, symbol)``), "
"якщо команда повна та дійсна; ``None``, якщо команда неповна; викликає :exc:"
"`SyntaxError`, якщо команда завершена та містить синтаксичну помилку, або "
"викликає :exc:`OverflowError` або :exc:`ValueError`, якщо команда містить "
"недійсний літерал."

msgid "Interactive Interpreter Objects"
msgstr "Об'єкти інтерактивного інтерпретатора"

msgid ""
"Compile and run some source in the interpreter. Arguments are the same as "
"for :func:`compile_command`; the default for *filename* is ``'<input>'``, "
"and for *symbol* is ``'single'``.  One of several things can happen:"
msgstr ""
"Скомпілюйте та запустіть деяке джерело в інтерпретаторі. Аргументи такі "
"самі, як і для :func:`compile_command`; за замовчуванням для *ім’я файлу* є "
"``' <input> ''``, а для *symbol* — ``'single'``. Може статися одне з кількох:"

msgid ""
"The input is incorrect; :func:`compile_command` raised an exception (:exc:"
"`SyntaxError` or :exc:`OverflowError`).  A syntax traceback will be printed "
"by calling the :meth:`showsyntaxerror` method.  :meth:`runsource` returns "
"``False``."
msgstr ""
"Введено неправильно; :func:`compile_command` викликала виняток (:exc:"
"`SyntaxError` або :exc:`OverflowError`). Відстеження синтаксису буде "
"надруковано викликом методу :meth:`showsyntaxerror`. :meth:`runsource` "
"повертає ``False``."

msgid ""
"The input is incomplete, and more input is required; :func:`compile_command` "
"returned ``None``. :meth:`runsource` returns ``True``."
msgstr ""
"Вхідні дані неповні, потрібні додаткові дані; :func:`compile_command` "
"повернула ``None``. :meth:`runsource` повертає ``True``."

msgid ""
"The input is complete; :func:`compile_command` returned a code object.  The "
"code is executed by calling the :meth:`runcode` (which also handles run-time "
"exceptions, except for :exc:`SystemExit`). :meth:`runsource` returns "
"``False``."
msgstr ""
"Введення завершено; :func:`compile_command` повернув об’єкт коду. Код "
"виконується шляхом виклику :meth:`runcode` (який також обробляє винятки під "
"час виконання, за винятком :exc:`SystemExit`). :meth:`runsource` повертає "
"``False``."

msgid ""
"The return value can be used to decide whether to use ``sys.ps1`` or ``sys."
"ps2`` to prompt the next line."
msgstr ""
"Значення, що повертається, можна використовувати, щоб вирішити, чи "
"використовувати ``sys.ps1`` або ``sys.ps2`` для підказки наступного рядка."

msgid ""
"Execute a code object. When an exception occurs, :meth:`showtraceback` is "
"called to display a traceback.  All exceptions are caught except :exc:"
"`SystemExit`, which is allowed to propagate."
msgstr ""
"Виконати об’єкт коду. Коли виникає виняткова ситуація, :meth:`showtraceback` "
"викликається для відображення зворотного відстеження. Перехоплюються всі "
"винятки, крім :exc:`SystemExit`, якому дозволено поширюватися."

msgid ""
"A note about :exc:`KeyboardInterrupt`: this exception may occur elsewhere in "
"this code, and may not always be caught.  The caller should be prepared to "
"deal with it."
msgstr ""
"Примітка про :exc:`KeyboardInterrupt`: цей виняток може виникнути в іншому "
"місці цього коду та не завжди може бути перехоплений. Той, хто дзвонить, "
"повинен бути готовим до цього."

msgid ""
"Display the syntax error that just occurred.  This does not display a stack "
"trace because there isn't one for syntax errors. If *filename* is given, it "
"is stuffed into the exception instead of the default filename provided by "
"Python's parser, because it always uses ``'<string>'`` when reading from a "
"string. The output is written by the :meth:`write` method."
msgstr ""
"Відобразити синтаксичну помилку, яка щойно сталася. Це не відображає "
"трасування стека, оскільки немає трасування синтаксичних помилок. Якщо "
"вказано *filename*, воно вставляється у виняток замість назви файлу за "
"замовчуванням, наданої синтаксичним аналізатором Python, оскільки він завжди "
"використовує ``' <string> ''`` під час читання з рядка. Вихід записується "
"методом :meth:`write`."

msgid ""
"Display the exception that just occurred.  We remove the first stack item "
"because it is within the interpreter object implementation. The output is "
"written by the :meth:`write` method."
msgstr ""
"Відобразити виняток, який щойно стався. Ми видаляємо перший елемент стеку, "
"оскільки він знаходиться в межах реалізації об’єкта інтерпретатора. Вихід "
"записується методом :meth:`write`."

msgid ""
"The full chained traceback is displayed instead of just the primary "
"traceback."
msgstr ""
"Відображається повна ланцюгова трасування, а не лише основна трасування."

msgid ""
"Write a string to the standard error stream (``sys.stderr``). Derived "
"classes should override this to provide the appropriate output handling as "
"needed."
msgstr ""
"Запишіть рядок у стандартний потік помилок (``sys.stderr``). Похідні класи "
"повинні замінити це, щоб забезпечити відповідну обробку виводу за потреби."

msgid "Interactive Console Objects"
msgstr "Інтерактивні консольні об’єкти"

msgid ""
"The :class:`InteractiveConsole` class is a subclass of :class:"
"`InteractiveInterpreter`, and so offers all the methods of the interpreter "
"objects as well as the following additions."
msgstr ""
"Клас :class:`InteractiveConsole` є підкласом :class:"
"`InteractiveInterpreter`, тому пропонує всі методи об’єктів інтерпретатора, "
"а також наступні доповнення."

msgid ""
"Closely emulate the interactive Python console. The optional *banner* "
"argument specify the banner to print before the first interaction; by "
"default it prints a banner similar to the one printed by the standard Python "
"interpreter, followed by the class name of the console object in parentheses "
"(so as not to confuse this with the real interpreter -- since it's so "
"close!)."
msgstr ""
"Повністю емулюйте інтерактивну консоль Python. Необов’язковий аргумент "
"*banner* визначає банер для друку перед першою взаємодією; за замовчуванням "
"він друкує банер, подібний до того, який друкує стандартний інтерпретатор "
"Python, а потім ім’я класу консольного об’єкта в дужках (щоб не сплутати це "
"зі справжнім інтерпретатором, оскільки він дуже близький!)."

msgid ""
"The optional *exitmsg* argument specifies an exit message printed when "
"exiting. Pass the empty string to suppress the exit message. If *exitmsg* is "
"not given or ``None``, a default message is printed."
msgstr ""
"Необов'язковий аргумент *exitmsg* визначає повідомлення про вихід, яке "
"друкується під час виходу. Передайте порожній рядок, щоб приховати "
"повідомлення про вихід. Якщо *exitmsg* не вказано або ``None``, буде "
"надруковано повідомлення за замовчуванням."

msgid "To suppress printing any banner, pass an empty string."
msgstr "Щоб заборонити друк будь-якого банера, передайте порожній рядок."

msgid "Print an exit message when exiting."
msgstr "Друк повідомлення про вихід під час виходу."

msgid ""
"Push a line of source text to the interpreter. The line should not have a "
"trailing newline; it may have internal newlines.  The line is appended to a "
"buffer and the interpreter's :meth:`runsource` method is called with the "
"concatenated contents of the buffer as source.  If this indicates that the "
"command was executed or invalid, the buffer is reset; otherwise, the command "
"is incomplete, and the buffer is left as it was after the line was "
"appended.  The return value is ``True`` if more input is required, ``False`` "
"if the line was dealt with in some way (this is the same as :meth:"
"`runsource`)."
msgstr ""
"Передайте перекладачу рядок вихідного тексту. Рядок не повинен мати "
"завершальний символ нового рядка; він може мати внутрішні символи нового "
"рядка. Рядок додається до буфера, а метод інтерпретатора :meth:`runsource` "
"викликається з об’єднаним вмістом буфера як джерела. Якщо це означає, що "
"команда була виконана або недійсна, буфер скидається; інакше команда буде "
"неповною, а буфер залишиться таким, яким він був після додавання рядка. "
"Значення, що повертається, ``True``, якщо потрібно більше введення, "
"``False``, якщо рядок було оброблено якимось чином (це те саме, що :meth:"
"`runsource`)."

msgid "Remove any unhandled source text from the input buffer."
msgstr "Видаліть будь-який необроблений вихідний текст із вхідного буфера."

msgid ""
"Write a prompt and read a line.  The returned line does not include the "
"trailing newline.  When the user enters the EOF key sequence, :exc:"
"`EOFError` is raised. The base implementation reads from ``sys.stdin``; a "
"subclass may replace this with a different implementation."
msgstr ""
"Напишіть підказку та прочитайте рядок. Повернений рядок не містить кінцевого "
"символу нового рядка. Коли користувач вводить послідовність клавіш EOF, "
"виникає :exc:`EOFError`. Базова реалізація читає з ``sys.stdin``; підклас "
"може замінити це іншою реалізацією."
