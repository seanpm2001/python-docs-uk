# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 01:18+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid ":mod:`zipimport` --- Import modules from Zip archives"
msgstr ":mod:`zipimport` --- Імпортувати модулі з архівів Zip"

msgid "**Source code:** :source:`Lib/zipimport.py`"
msgstr "**Вихідний код:** :source:`Lib/zipimport.py`"

msgid ""
"This module adds the ability to import Python modules (:file:`\\*.py`, :file:"
"`\\*.pyc`) and packages from ZIP-format archives. It is usually not needed "
"to use the :mod:`zipimport` module explicitly; it is automatically used by "
"the built-in :keyword:`import` mechanism for :data:`sys.path` items that are "
"paths to ZIP archives."
msgstr ""
"Цей модуль додає можливість імпортувати модулі Python (:file:`\\*.py`, :file:"
"`\\*.pyc`) і пакети з архівів у форматі ZIP. Зазвичай явно не потрібно "
"використовувати модуль :mod:`zipimport`; він автоматично використовується "
"вбудованим механізмом :keyword:`import` для елементів :data:`sys.path`, які "
"є шляхами до архівів ZIP."

msgid ""
"Typically, :data:`sys.path` is a list of directory names as strings.  This "
"module also allows an item of :data:`sys.path` to be a string naming a ZIP "
"file archive. The ZIP archive can contain a subdirectory structure to "
"support package imports, and a path within the archive can be specified to "
"only import from a subdirectory.  For example, the path :file:`example.zip/"
"lib/` would only import from the :file:`lib/` subdirectory within the "
"archive."
msgstr ""
"Як правило, :data:`sys.path` — це список імен каталогів у вигляді рядків. "
"Цей модуль також дозволяє елементу :data:`sys.path` бути рядком, що називає "
"архів ZIP-файлу. Архів ZIP може містити структуру підкаталогів для підтримки "
"імпорту пакунків, а шлях усередині архіву можна вказати лише для імпорту з "
"підкаталогу. Наприклад, шлях :file:`example.zip/lib/` імпортуватиметься лише "
"з підкаталогу :file:`lib/` в архіві."

msgid ""
"Any files may be present in the ZIP archive, but importers are only invoked "
"for :file:`.py` and :file:`.pyc` files.  ZIP import of dynamic modules (:"
"file:`.pyd`, :file:`.so`) is disallowed. Note that if an archive only "
"contains :file:`.py` files, Python will not attempt to modify the archive by "
"adding the corresponding :file:`.pyc` file, meaning that if a ZIP archive "
"doesn't contain :file:`.pyc` files, importing may be rather slow."
msgstr ""
"Будь-які файли можуть бути присутніми в ZIP-архіві, але імпортери "
"викликаються лише для файлів :file:`.py` і :file:`.pyc`. ZIP-імпорт "
"динамічних модулів (:file:`.pyd`, :file:`.so`) заборонено. Зауважте, що якщо "
"архів містить лише файли :file:`.py`, Python не намагатиметься змінити "
"архів, додавши відповідний файл :file:`.pyc`, тобто якщо архів ZIP не "
"містить :file:`.pyc` файли, імпортування може бути досить повільним."

msgid "Previously, ZIP archives with an archive comment were not supported."
msgstr "Раніше ZIP-архіви з архівним коментарем не підтримувалися."

msgid ""
"`PKZIP Application Note <https://pkware.cachefly.net/webdocs/casestudies/"
"APPNOTE.TXT>`_"
msgstr ""
"`Примітка до програми PKZIP <https://pkware.cachefly.net/webdocs/casestudies/"
"APPNOTE.TXT>`_"

msgid ""
"Documentation on the ZIP file format by Phil Katz, the creator of the format "
"and algorithms used."
msgstr ""
"Документація щодо формату файлу ZIP від Філа Каца, творця формату та "
"використаних алгоритмів."

msgid ":pep:`273` - Import Modules from Zip Archives"
msgstr ":pep:`273` - імпортувати модулі з Zip-архівів"

msgid ""
"Written by James C. Ahlstrom, who also provided an implementation. Python "
"2.3 follows the specification in :pep:`273`, but uses an implementation "
"written by Just van Rossum that uses the import hooks described in :pep:"
"`302`."
msgstr ""
"Написав Джеймс К. Алстром, який також забезпечив реалізацію. Python 2.3 "
"відповідає специфікації в :pep:`273`, але використовує реалізацію, написану "
"Джастом ван Россумом, яка використовує хуки імпорту, описані в :pep:`302`."

msgid ":mod:`importlib` - The implementation of the import machinery"
msgstr ":mod:`importlib` - Реалізація механізму імпорту"

msgid ""
"Package providing the relevant protocols for all importers to implement."
msgstr "Пакет із відповідними протоколами для впровадження всім імпортерам."

msgid "This module defines an exception:"
msgstr "Цей модуль визначає виняток:"

msgid ""
"Exception raised by zipimporter objects. It's a subclass of :exc:"
"`ImportError`, so it can be caught as :exc:`ImportError`, too."
msgstr ""
"Виняток викликано об’єктами zipimporter. Це підклас :exc:`ImportError`, тому "
"його також можна перехопити як :exc:`ImportError`."

msgid "zipimporter Objects"
msgstr "Об'єкти zipimporter"

msgid ":class:`zipimporter` is the class for importing ZIP files."
msgstr ":class:`zipimporter` — це клас для імпорту ZIP-файлів."

msgid ""
"Create a new zipimporter instance. *archivepath* must be a path to a ZIP "
"file, or to a specific path within a ZIP file.  For example, an "
"*archivepath* of :file:`foo/bar.zip/lib` will look for modules in the :file:"
"`lib` directory inside the ZIP file :file:`foo/bar.zip` (provided that it "
"exists)."
msgstr ""
"Створіть новий екземпляр zipimporter. *архівний шлях* має бути шляхом до ZIP-"
"файлу або до певного шляху в ZIP-файлі. Наприклад, *архівний шлях* :file:"
"`foo/bar.zip/lib` шукатиме модулі в каталозі :file:`lib` всередині ZIP-"
"файлу :file:`foo/bar.zip` (за умови, що воно існує)."

msgid ""
":exc:`ZipImportError` is raised if *archivepath* doesn't point to a valid "
"ZIP archive."
msgstr ""
":exc:`ZipImportError` виникає, якщо *архівний шлях* не вказує на дійсний "
"архів ZIP."

msgid ""
"Implementation of :meth:`importlib.abc.Loader.create_module` that returns :"
"const:`None` to explicitly request the default semantics."
msgstr ""
"Реалізація :meth:`importlib.abc.Loader.create_module`, яка повертає :const:"
"`None` для явного запиту семантики за замовчуванням."

msgid "Implementation of :meth:`importlib.abc.Loader.exec_module`."
msgstr "Реалізація :meth:`importlib.abc.Loader.exec_module`."

msgid "An implementation of :meth:`importlib.abc.PathEntryFinder.find_loader`."
msgstr "Реалізація :meth:`importlib.abc.PathEntryFinder.find_loader`."

msgid "Use :meth:`find_spec` instead."
msgstr "Замість цього використовуйте :meth:`find_spec`."

msgid ""
"Search for a module specified by *fullname*. *fullname* must be the fully "
"qualified (dotted) module name. It returns the zipimporter instance itself "
"if the module was found, or :const:`None` if it wasn't. The optional *path* "
"argument is ignored---it's there for compatibility with the importer "
"protocol."
msgstr ""
"Шукайте модуль, указаний за *повним ім’ям*. *повне ім’я* має бути повним "
"ім’ям модуля (з крапками). Він повертає сам екземпляр zipimporter, якщо "
"модуль знайдено, або :const:`None`, якщо він не був знайдений. "
"Необов’язковий аргумент *path* ігнорується --- він існує для сумісності з "
"протоколом імпортера."

msgid "An implementation of :meth:`importlib.abc.PathEntryFinder.find_spec`."
msgstr "Реалізація :meth:`importlib.abc.PathEntryFinder.find_spec`."

msgid ""
"Return the code object for the specified module. Raise :exc:`ZipImportError` "
"if the module couldn't be imported."
msgstr ""
"Повертає об’єкт коду для зазначеного модуля. Викликати :exc:"
"`ZipImportError`, якщо модуль не вдалося імпортувати."

msgid ""
"Return the data associated with *pathname*. Raise :exc:`OSError` if the file "
"wasn't found."
msgstr ""
"Повертає дані, пов’язані з *шляхом*. Викликати :exc:`OSError`, якщо файл не "
"знайдено."

msgid ":exc:`IOError` used to be raised instead of :exc:`OSError`."
msgstr "Раніше викликалося :exc:`IOError` замість :exc:`OSError`."

msgid ""
"Return the value ``__file__`` would be set to if the specified module was "
"imported. Raise :exc:`ZipImportError` if the module couldn't be imported."
msgstr ""
"Повернути значення ``__file__`` було б встановлено, якби вказаний модуль "
"було імпортовано. Викликати :exc:`ZipImportError`, якщо модуль не вдалося "
"імпортувати."

msgid ""
"Return the source code for the specified module. Raise :exc:`ZipImportError` "
"if the module couldn't be found, return :const:`None` if the archive does "
"contain the module, but has no source for it."
msgstr ""
"Повернути вихідний код для вказаного модуля. Викликати :exc:"
"`ZipImportError`, якщо модуль не вдалося знайти, повернути :const:`None`, "
"якщо архів містить модуль, але не має джерела для нього."

msgid ""
"Return ``True`` if the module specified by *fullname* is a package. Raise :"
"exc:`ZipImportError` if the module couldn't be found."
msgstr ""
"Повертає ``True``, якщо модуль, визначений *повним ім’ям*, є пакетом. "
"Викликати :exc:`ZipImportError`, якщо модуль не вдалося знайти."

msgid ""
"Load the module specified by *fullname*. *fullname* must be the fully "
"qualified (dotted) module name. Returns the imported module on success, "
"raises :exc:`ZipImportError` on failure."
msgstr ""
"Завантажте модуль, указаний *повним ім’ям*. *повне ім’я* має бути повним "
"ім’ям модуля (з крапками). Повертає імпортований модуль у разі успіху, "
"викликає :exc:`ZipImportError` у разі невдачі."

msgid "Use :meth:`exec_module` instead."
msgstr "Замість цього використовуйте :meth:`exec_module`."

msgid ""
"Clear out the internal cache of information about files found within the ZIP "
"archive."
msgstr "Очистіть внутрішній кеш інформації про файли, знайдені в архіві ZIP."

msgid ""
"The file name of the importer's associated ZIP file, without a possible "
"subpath."
msgstr "Ім’я пов’язаного ZIP-файлу імпортера без можливого підшляху."

msgid ""
"The subpath within the ZIP file where modules are searched.  This is the "
"empty string for zipimporter objects which point to the root of the ZIP file."
msgstr ""
"Підшлях у ZIP-файлі, де здійснюється пошук модулів. Це порожній рядок для "
"об’єктів zipimporter, які вказують на корінь ZIP-файлу."

msgid ""
"The :attr:`archive` and :attr:`prefix` attributes, when combined with a "
"slash, equal the original *archivepath* argument given to the :class:"
"`zipimporter` constructor."
msgstr ""
"Атрибути :attr:`archive` і :attr:`prefix` у поєднанні з косою рискою "
"дорівнюють оригінальному аргументу *archivepath*, наданому конструктору :"
"class:`zipimporter`."

msgid "Examples"
msgstr "Приклади"

msgid ""
"Here is an example that imports a module from a ZIP archive - note that the :"
"mod:`zipimport` module is not explicitly used."
msgstr ""
"Ось приклад імпорту модуля з ZIP-архіву - зауважте, що модуль :mod:"
"`zipimport` не використовується явно."
