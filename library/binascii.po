# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 00:56+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid ":mod:`binascii` --- Convert between binary and ASCII"
msgstr ":mod:`binascii` --- Перетворення між двійковими та ASCII"

msgid ""
"The :mod:`binascii` module contains a number of methods to convert between "
"binary and various ASCII-encoded binary representations. Normally, you will "
"not use these functions directly but use wrapper modules like :mod:`uu` or :"
"mod:`base64` instead. The :mod:`binascii` module contains low-level "
"functions written in C for greater speed that are used by the higher-level "
"modules."
msgstr ""

msgid ""
"``a2b_*`` functions accept Unicode strings containing only ASCII characters. "
"Other functions only accept :term:`bytes-like objects <bytes-like object>` "
"(such as :class:`bytes`, :class:`bytearray` and other objects that support "
"the buffer protocol)."
msgstr ""
"Функції ``a2b_*`` приймають рядки Unicode, що містять лише символи ASCII. "
"Інші функції приймають лише :term:`байтоподібні об’єкти <bytes-like object>` "
"(такі як :class:`bytes`, :class:`bytearray` та інші об’єкти, які підтримують "
"протокол буфера)."

msgid "ASCII-only unicode strings are now accepted by the ``a2b_*`` functions."
msgstr "Функції ``a2b_*`` тепер приймають рядки Unicode тільки ASCII."

msgid "The :mod:`binascii` module defines the following functions:"
msgstr "Модуль :mod:`binascii` визначає такі функції:"

msgid ""
"Convert a single line of uuencoded data back to binary and return the binary "
"data. Lines normally contain 45 (binary) bytes, except for the last line. "
"Line data may be followed by whitespace."
msgstr ""
"Перетворити один рядок uuencoded даних назад у двійкові та повернути "
"двійкові дані. Рядки зазвичай містять 45 (двійкових) байт, за винятком "
"останнього рядка. Після рядкових даних може стояти пробіл."

msgid ""
"Convert binary data to a line of ASCII characters, the return value is the "
"converted line, including a newline char. The length of *data* should be at "
"most 45. If *backtick* is true, zeros are represented by ``'`'`` instead of "
"spaces."
msgstr ""
"Перетворює двійкові дані на рядок із символами ASCII, повертається значенням "
"є перетворений рядок, включаючи символ нового рядка. Довжина *data* має "
"становити щонайбільше 45. Якщо *backtick* має значення true, нулі "
"позначаються символом ``''`'`` замість пробілів."

msgid "Added the *backtick* parameter."
msgstr "Додано параметр *backtick*."

msgid ""
"Convert a block of base64 data back to binary and return the binary data. "
"More than one line may be passed at a time."
msgstr ""
"Перетворіть блок даних base64 назад у двійковий і поверніть двійкові дані. "
"Одночасно можна передати більше одного рядка."

msgid ""
"If *strict_mode* is true, only valid base64 data will be converted. Invalid "
"base64 data will raise :exc:`binascii.Error`."
msgstr ""

msgid "Valid base64:"
msgstr ""

msgid "Conforms to :rfc:`3548`."
msgstr ""

msgid "Contains only characters from the base64 alphabet."
msgstr ""

msgid ""
"Contains no excess data after padding (including excess padding, newlines, "
"etc.)."
msgstr ""

msgid "Does not start with a padding."
msgstr ""

msgid "Added the *strict_mode* parameter."
msgstr ""

msgid ""
"Convert binary data to a line of ASCII characters in base64 coding. The "
"return value is the converted line, including a newline char if *newline* is "
"true.  The output of this function conforms to :rfc:`3548`."
msgstr ""
"Перетворення двійкових даних у рядок символів ASCII у кодуванні base64. "
"Поверненим значенням є перетворений рядок, включаючи символ нового рядка, "
"якщо *новий рядок* має значення true. Вихід цієї функції відповідає :rfc:"
"`3548`."

msgid "Added the *newline* parameter."
msgstr "Додано параметр *новий рядок*."

msgid ""
"Convert a block of quoted-printable data back to binary and return the "
"binary data. More than one line may be passed at a time. If the optional "
"argument *header* is present and true, underscores will be decoded as spaces."
msgstr ""
"Перетворити блок даних, які можна роздрукувати в лапках, назад у двійкові та "
"повернути двійкові дані. Одночасно можна передати більше одного рядка. Якщо "
"необов’язковий аргумент *header* присутній і має значення true, підкреслення "
"розшифровуватимуться як пробіли."

msgid ""
"Convert binary data to a line(s) of ASCII characters in quoted-printable "
"encoding.  The return value is the converted line(s). If the optional "
"argument *quotetabs* is present and true, all tabs and spaces will be "
"encoded.   If the optional argument *istext* is present and true, newlines "
"are not encoded but trailing whitespace will be encoded. If the optional "
"argument *header* is present and true, spaces will be encoded as underscores "
"per :rfc:`1522`. If the optional argument *header* is present and false, "
"newline characters will be encoded as well; otherwise linefeed conversion "
"might corrupt the binary data stream."
msgstr ""
"Перетворюйте двійкові дані на рядки символів ASCII у кодуванні, що "
"друкується в лапках. Поверненим значенням є перетворені рядки. Якщо "
"необов’язковий аргумент *quotetabs* присутній і вірний, усі символи "
"табуляції та пробіли будуть закодовані. Якщо необов’язковий аргумент "
"*istext* присутній і має значення true, нові рядки не кодуються, але кінцеві "
"пробіли кодуються. Якщо необов’язковий аргумент *header* присутній і "
"відповідає дійсності, пробіли будуть закодовані як підкреслення відповідно "
"до :rfc:`1522`. Якщо необов’язковий аргумент *header* присутній і false, "
"символи нового рядка також будуть закодовані; інакше перетворення переводу "
"рядка може пошкодити двійковий потік даних."

msgid ""
"Compute a 16-bit CRC value of *data*, starting with *value* as the initial "
"CRC, and return the result.  This uses the CRC-CCITT polynomial *x*:sup:`16` "
"+ *x*:sup:`12` + *x*:sup:`5` + 1, often represented as 0x1021.  This CRC is "
"used in the binhex4 format."
msgstr ""
"Обчисліть 16-бітне значення CRC *data*, починаючи з *value* як початкового "
"CRC, і поверніть результат. Тут використовується поліном CRC-CCITT *x*:sup:"
"`16` + *x*:sup:`12` + *x*:sup:`5` + 1, який часто представляється як 0x1021. "
"Цей CRC використовується у форматі binhex4."

msgid ""
"Compute CRC-32, the unsigned 32-bit checksum of *data*, starting with an "
"initial CRC of *value*.  The default initial CRC is zero.  The algorithm is "
"consistent with the ZIP file checksum.  Since the algorithm is designed for "
"use as a checksum algorithm, it is not suitable for use as a general hash "
"algorithm.  Use as follows::"
msgstr ""
"Обчисліть CRC-32, беззнакову 32-бітну контрольну суму *даних*, починаючи з "
"початкового CRC *значення*. Початковий CRC за умовчанням дорівнює нулю. "
"Алгоритм узгоджується з контрольною сумою файлу ZIP. Оскільки алгоритм "
"розроблено для використання як алгоритм контрольної суми, він не підходить "
"для використання як загальний алгоритм хешування. Використовуйте наступним "
"чином:"

msgid "The result is always unsigned."
msgstr ""

msgid ""
"Return the hexadecimal representation of the binary *data*.  Every byte of "
"*data* is converted into the corresponding 2-digit hex representation.  The "
"returned bytes object is therefore twice as long as the length of *data*."
msgstr ""
"Повертає шістнадцяткове представлення двійкових *даних*. Кожен байт *даних* "
"перетворюється у відповідне 2-значне шістнадцяткове представлення. Тому "
"повернутий об’єкт bytes вдвічі довший за довжину *data*."

msgid ""
"Similar functionality (but returning a text string) is also conveniently "
"accessible using the :meth:`bytes.hex` method."
msgstr ""
"Подібні функції (але повернення текстового рядка) також зручно доступні за "
"допомогою методу :meth:`bytes.hex`."

msgid ""
"If *sep* is specified, it must be a single character str or bytes object. It "
"will be inserted in the output after every *bytes_per_sep* input bytes. "
"Separator placement is counted from the right end of the output by default, "
"if you wish to count from the left, supply a negative *bytes_per_sep* value."
msgstr ""
"Якщо вказано *sep*, це має бути односимвольний об’єкт str або bytes. Його "
"буде вставлено у вивід після кожного вхідного байта *bytes_per_sep*. "
"Розташування роздільника за замовчуванням відраховується від правого кінця "
"виводу. Якщо ви бажаєте відраховувати зліва, укажіть від’ємне значення "
"*bytes_per_sep*."

msgid "The *sep* and *bytes_per_sep* parameters were added."
msgstr "Додано параметри *sep* і *bytes_per_sep*."

msgid ""
"Return the binary data represented by the hexadecimal string *hexstr*.  This "
"function is the inverse of :func:`b2a_hex`. *hexstr* must contain an even "
"number of hexadecimal digits (which can be upper or lower case), otherwise "
"an :exc:`Error` exception is raised."
msgstr ""
"Повертає двійкові дані, представлені шістнадцятковим рядком *hexstr*. Ця "
"функція є зворотною до :func:`b2a_hex`. *hexstr* має містити парну кількість "
"шістнадцяткових цифр (які можуть бути великими чи нижніми регістрами), "
"інакше виникає виняткова ситуація :exc:`Error`."

msgid ""
"Similar functionality (accepting only text string arguments, but more "
"liberal towards whitespace) is also accessible using the :meth:`bytes."
"fromhex` class method."
msgstr ""
"Подібна функціональність (приймає лише текстові рядкові аргументи, але більш "
"вільна щодо пробілів) також доступна за допомогою методу класу :meth:`bytes."
"fromhex`."

msgid "Exception raised on errors. These are usually programming errors."
msgstr "Виняток, викликаний помилками. Зазвичай це помилки програмування."

msgid ""
"Exception raised on incomplete data. These are usually not programming "
"errors, but may be handled by reading a little more data and trying again."
msgstr ""
"Винятком є неповні дані. Зазвичай це не помилки програмування, але їх можна "
"вирішити, прочитавши трохи більше даних і повторивши спробу."

msgid "Module :mod:`base64`"
msgstr "Модуль :mod:`base64`"

msgid ""
"Support for RFC compliant base64-style encoding in base 16, 32, 64, and 85."
msgstr ""
"Підтримка RFC-сумісного кодування в стилі base64 у базових 16, 32, 64 та 85."

msgid "Module :mod:`uu`"
msgstr "Модуль :mod:`uu`"

msgid "Support for UU encoding used on Unix."
msgstr "Підтримка кодування UU, що використовується в Unix."

msgid "Module :mod:`quopri`"
msgstr "Модуль :mod:`quopri`"

msgid "Support for quoted-printable encoding used in MIME email messages."
msgstr ""
"Підтримка кодування для друку в лапках, що використовується в електронних "
"повідомленнях MIME."
