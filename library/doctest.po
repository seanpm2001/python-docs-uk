# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 01:04+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid ":mod:`doctest` --- Test interactive Python examples"
msgstr ":mod:`doctest` --- Перевірте інтерактивні приклади Python"

msgid "**Source code:** :source:`Lib/doctest.py`"
msgstr "**Вихідний код:** :source:`Lib/doctest.py`"

msgid ""
"The :mod:`doctest` module searches for pieces of text that look like "
"interactive Python sessions, and then executes those sessions to verify that "
"they work exactly as shown.  There are several common ways to use doctest:"
msgstr ""
"Модуль :mod:`doctest` шукає фрагменти тексту, які виглядають як інтерактивні "
"сеанси Python, а потім виконує ці сеанси, щоб перевірити, чи вони працюють "
"саме так, як показано. Існує кілька поширених способів використання doctest:"

msgid ""
"To check that a module's docstrings are up-to-date by verifying that all "
"interactive examples still work as documented."
msgstr ""
"Щоб перевірити актуальність рядків документів модуля, переконавшись, що всі "
"інтерактивні приклади все ще працюють, як задокументовано."

msgid ""
"To perform regression testing by verifying that interactive examples from a "
"test file or a test object work as expected."
msgstr ""
"Щоб виконати регресійне тестування, перевіривши, що інтерактивні приклади з "
"тестового файлу або тестового об’єкта працюють належним чином."

msgid ""
"To write tutorial documentation for a package, liberally illustrated with "
"input-output examples.  Depending on whether the examples or the expository "
"text are emphasized, this has the flavor of \"literate testing\" or "
"\"executable documentation\"."
msgstr ""
"Написати навчальну документацію для пакета, щедро проілюстровану прикладами "
"введення-виведення. Залежно від того, чи наголошується на прикладах чи "
"пояснювальному тексті, це має відтінок \"грамотного тестування\" або "
"\"виконуваної документації\"."

msgid "Here's a complete but small example module::"
msgstr "Ось повний, але невеликий приклад модуля::"

msgid ""
"If you run :file:`example.py` directly from the command line, :mod:`doctest` "
"works its magic:"
msgstr ""
"Якщо ви запустите :file:`example.py` безпосередньо з командного рядка, :mod:"
"`doctest` спрацює так:"

msgid ""
"There's no output!  That's normal, and it means all the examples worked.  "
"Pass ``-v`` to the script, and :mod:`doctest` prints a detailed log of what "
"it's trying, and prints a summary at the end:"
msgstr ""
"Немає виходу! Це нормально, і це означає, що всі приклади спрацювали. "
"Передайте сценарію ``-v``, і :mod:`doctest` надрукує докладний журнал того, "
"що він намагається, і наприкінці виведе підсумок:"

msgid "And so on, eventually ending with:"
msgstr "І так далі, зрештою закінчуючи:"

msgid ""
"That's all you need to know to start making productive use of :mod:"
"`doctest`! Jump in.  The following sections provide full details.  Note that "
"there are many examples of doctests in the standard Python test suite and "
"libraries. Especially useful examples can be found in the standard test "
"file :file:`Lib/test/test_doctest.py`."
msgstr ""
"Це все, що вам потрібно знати, щоб почати продуктивно використовувати :mod:"
"`doctest`! У наступних розділах наведено повну інформацію. Зауважте, що в "
"стандартному пакеті тестів і бібліотеках Python є багато прикладів doctests. "
"Особливо корисні приклади можна знайти у стандартному тестовому файлі :file:"
"`Lib/test/test_doctest.py`."

msgid "Simple Usage: Checking Examples in Docstrings"
msgstr "Просте використання: перевірка прикладів у Docstrings"

msgid ""
"The simplest way to start using doctest (but not necessarily the way you'll "
"continue to do it) is to end each module :mod:`M` with::"
msgstr ""
"Найпростіший спосіб почати використовувати doctest (але не обов’язково так, "
"як ви продовжите це робити) — закінчити кожен модуль :mod:`M` словами::"

msgid ":mod:`doctest` then examines docstrings in module :mod:`M`."
msgstr "Потім :mod:`doctest` перевіряє рядки документів у модулі :mod:`M`."

msgid ""
"Running the module as a script causes the examples in the docstrings to get "
"executed and verified::"
msgstr ""
"Запуск модуля як сценарію призводить до виконання та перевірки прикладів у "
"рядках документів:"

msgid ""
"This won't display anything unless an example fails, in which case the "
"failing example(s) and the cause(s) of the failure(s) are printed to stdout, "
"and the final line of output is ``***Test Failed*** N failures.``, where *N* "
"is the number of examples that failed."
msgstr ""
"Це не відображатиме нічого, якщо приклад не буде невдалим, у цьому випадку "
"невдалий(і) приклад(и) і причину(и) помилки(и) друкуються в stdout, а "
"останній рядок виводу буде ``***Test Помилка*** N невдач.``, де *N* — це "
"кількість прикладів, що не вдалося виконати."

msgid "Run it with the ``-v`` switch instead::"
msgstr "Натомість запустіть його з перемикачем ``-v``::"

msgid ""
"and a detailed report of all examples tried is printed to standard output, "
"along with assorted summaries at the end."
msgstr ""
"і детальний звіт про всі спробовані приклади друкується на стандартному "
"виводі разом із різноманітними підсумками в кінці."

msgid ""
"You can force verbose mode by passing ``verbose=True`` to :func:`testmod`, "
"or prohibit it by passing ``verbose=False``.  In either of those cases, "
"``sys.argv`` is not examined by :func:`testmod` (so passing ``-v`` or not "
"has no effect)."
msgstr ""
"Ви можете змусити докладний режим, передавши ``verbose=True`` до :func:"
"`testmod`, або заборонити його, передавши ``verbose=False``. У жодному з цих "
"випадків ``sys.argv`` не перевіряється :func:`testmod` (тому передача ``-v`` "
"чи ні не має ефекту)."

msgid ""
"There is also a command line shortcut for running :func:`testmod`.  You can "
"instruct the Python interpreter to run the doctest module directly from the "
"standard library and pass the module name(s) on the command line::"
msgstr ""
"Існує також ярлик командного рядка для запуску :func:`testmod`. Ви можете "
"наказати інтерпретатору Python запустити модуль doctest безпосередньо зі "
"стандартної бібліотеки та передати ім’я модуля (імена) у командному рядку:"

msgid ""
"This will import :file:`example.py` as a standalone module and run :func:"
"`testmod` on it.  Note that this may not work correctly if the file is part "
"of a package and imports other submodules from that package."
msgstr ""
"Це імпортує :file:`example.py` як окремий модуль і запускає :func:`testmod` "
"на ньому. Зауважте, що це може не працювати належним чином, якщо файл є "
"частиною пакета та імпортує інші підмодулі з цього пакета."

msgid ""
"For more information on :func:`testmod`, see section :ref:`doctest-basic-"
"api`."
msgstr ""
"Додаткову інформацію про :func:`testmod` див. у розділі :ref:`doctest-basic-"
"api`."

msgid "Simple Usage: Checking Examples in a Text File"
msgstr "Просте використання: перевірка прикладів у текстовому файлі"

msgid ""
"Another simple application of doctest is testing interactive examples in a "
"text file.  This can be done with the :func:`testfile` function::"
msgstr ""
"Іншим простим застосуванням doctest є тестування інтерактивних прикладів у "
"текстовому файлі. Це можна зробити за допомогою функції :func:`testfile`::"

msgid ""
"That short script executes and verifies any interactive Python examples "
"contained in the file :file:`example.txt`.  The file content is treated as "
"if it were a single giant docstring; the file doesn't need to contain a "
"Python program!   For example, perhaps :file:`example.txt` contains this:"
msgstr ""
"Цей короткий сценарій виконує та перевіряє будь-які інтерактивні приклади "
"Python, що містяться у файлі :file:`example.txt`. Вміст файлу обробляється "
"так, ніби це один гігантський рядок документа; файл не повинен містити "
"програму Python! Наприклад, можливо, :file:`example.txt` містить таке:"

msgid ""
"Running ``doctest.testfile(\"example.txt\")`` then finds the error in this "
"documentation::"
msgstr ""
"Запуск ``doctest.testfile(\"example.txt\")`` потім знаходить помилку в цій "
"документації::"

msgid ""
"As with :func:`testmod`, :func:`testfile` won't display anything unless an "
"example fails.  If an example does fail, then the failing example(s) and the "
"cause(s) of the failure(s) are printed to stdout, using the same format as :"
"func:`testmod`."
msgstr ""
"Як і у випадку з :func:`testmod`, :func:`testfile` нічого не відображатиме, "
"якщо приклад не вдасться. Якщо приклад не вдається, то невдалий(і) "
"приклад(и) і причина(и) невдачі(ів) друкуються у stdout, використовуючи той "
"самий формат, що й :func:`testmod`."

msgid ""
"By default, :func:`testfile` looks for files in the calling module's "
"directory. See section :ref:`doctest-basic-api` for a description of the "
"optional arguments that can be used to tell it to look for files in other "
"locations."
msgstr ""
"За замовчуванням :func:`testfile` шукає файли в каталозі викликаючого "
"модуля. Перегляньте розділ :ref:`doctest-basic-api` для опису необов’язкових "
"аргументів, які можна використовувати, щоб наказати йому шукати файли в "
"інших місцях."

msgid ""
"Like :func:`testmod`, :func:`testfile`'s verbosity can be set with the ``-"
"v`` command-line switch or with the optional keyword argument *verbose*."
msgstr ""
"Подібно до :func:`testmod`, докладність :func:`testfile` можна встановити за "
"допомогою перемикача командного рядка ``-v`` або за допомогою додаткового "
"аргументу ключового слова *verbose*."

msgid ""
"There is also a command line shortcut for running :func:`testfile`.  You can "
"instruct the Python interpreter to run the doctest module directly from the "
"standard library and pass the file name(s) on the command line::"
msgstr ""
"Існує також ярлик командного рядка для запуску :func:`testfile`. Ви можете "
"наказати інтерпретатору Python запустити модуль doctest безпосередньо зі "
"стандартної бібліотеки та передати імена файлів у командному рядку:"

msgid ""
"Because the file name does not end with :file:`.py`, :mod:`doctest` infers "
"that it must be run with :func:`testfile`, not :func:`testmod`."
msgstr ""
"Оскільки назва файлу не закінчується на :file:`.py`, :mod:`doctest` робить "
"висновок, що його потрібно запускати з :func:`testfile`, а не :func:"
"`testmod`."

msgid ""
"For more information on :func:`testfile`, see section :ref:`doctest-basic-"
"api`."
msgstr ""
"Для отримання додаткової інформації про :func:`testfile` див. розділ :ref:"
"`doctest-basic-api`."

msgid "How It Works"
msgstr "Як це працює"

msgid ""
"This section examines in detail how doctest works: which docstrings it looks "
"at, how it finds interactive examples, what execution context it uses, how "
"it handles exceptions, and how option flags can be used to control its "
"behavior. This is the information that you need to know to write doctest "
"examples; for information about actually running doctest on these examples, "
"see the following sections."
msgstr ""
"У цьому розділі детально розглядається, як працює doctest: які рядки "
"документації він переглядає, як він знаходить інтерактивні приклади, який "
"контекст виконання він використовує, як він обробляє винятки та як прапорці "
"параметрів можна використовувати для керування його поведінкою. Це "
"інформація, яку вам потрібно знати, щоб написати приклади doctest; для "
"отримання інформації про фактичний запуск doctest на цих прикладах дивіться "
"наступні розділи."

msgid "Which Docstrings Are Examined?"
msgstr "Які рядки документів перевіряються?"

msgid ""
"The module docstring, and all function, class and method docstrings are "
"searched.  Objects imported into the module are not searched."
msgstr ""
"Здійснюється пошук у рядку документів модуля та всіх рядках документів "
"функцій, класів і методів. Об’єкти, імпортовані в модуль, не шукаються."

msgid ""
"In addition, if ``M.__test__`` exists and \"is true\", it must be a dict, "
"and each entry maps a (string) name to a function object, class object, or "
"string. Function and class object docstrings found from ``M.__test__`` are "
"searched, and strings are treated as if they were docstrings.  In output, a "
"key ``K`` in ``M.__test__`` appears with name ::"
msgstr ""
"Крім того, якщо ``M.__test__`` існує та має значення \"true\", це має бути "
"dict, і кожен запис відображає ім’я (рядка) на об’єкт функції, об’єкт класу "
"або рядок. Здійснюється пошук у рядках документів об’єктів функцій і класів, "
"знайдених у ``M.__test__``, а рядки обробляються так, ніби вони були рядками "
"документів. У вихідних даних з’являється ключ ``K`` у ``M.__test__`` з "
"назвою ::"

msgid ""
"Any classes found are recursively searched similarly, to test docstrings in "
"their contained methods and nested classes."
msgstr ""
"Будь-які знайдені класи рекурсивно шукаються подібним чином, щоб перевірити "
"рядки документів у їх методах і вкладених класах."

msgid "How are Docstring Examples Recognized?"
msgstr "Як розпізнаються приклади Docstring?"

msgid ""
"In most cases a copy-and-paste of an interactive console session works fine, "
"but doctest isn't trying to do an exact emulation of any specific Python "
"shell."
msgstr ""
"У більшості випадків копіювання та вставлення сеансу інтерактивної консолі "
"працює добре, але doctest не намагається зробити точну емуляцію будь-якої "
"конкретної оболонки Python."

msgid ""
"Any expected output must immediately follow the final ``'>>> '`` or ``'... "
"'`` line containing the code, and the expected output (if any) extends to "
"the next ``'>>> '`` or all-whitespace line."
msgstr ""
"Будь-який очікуваний вихід має слідувати одразу за останнім ``'>>> '`` або "
"``'... '`` рядком, що містить код, і очікуваний вихід (якщо такий є) "
"поширюється на наступний ``'>>> \"`` або рядок із пробілами."

msgid "The fine print:"
msgstr "Дрібний шрифт:"

msgid ""
"Expected output cannot contain an all-whitespace line, since such a line is "
"taken to signal the end of expected output.  If expected output does contain "
"a blank line, put ``<BLANKLINE>`` in your doctest example each place a blank "
"line is expected."
msgstr ""
"Очікуваний вихід не може містити рядок із пробілами, оскільки такий рядок "
"використовується для сигналізації про кінець очікуваного виведення. Якщо "
"очікуваний результат містить порожній рядок, додайте ``<BLANKLINE>`` у "
"прикладі doctest у кожному місці, де очікується порожній рядок."

msgid ""
"All hard tab characters are expanded to spaces, using 8-column tab stops. "
"Tabs in output generated by the tested code are not modified.  Because any "
"hard tabs in the sample output *are* expanded, this means that if the code "
"output includes hard tabs, the only way the doctest can pass is if the :"
"const:`NORMALIZE_WHITESPACE` option or :ref:`directive <doctest-directives>` "
"is in effect. Alternatively, the test can be rewritten to capture the output "
"and compare it to an expected value as part of the test.  This handling of "
"tabs in the source was arrived at through trial and error, and has proven to "
"be the least error prone way of handling them.  It is possible to use a "
"different algorithm for handling tabs by writing a custom :class:"
"`DocTestParser` class."
msgstr ""
"Усі жорсткі символи табуляції розгорнуті на пробіли за допомогою позицій "
"табуляції з 8 стовпців. Вкладки у вихідних даних, згенерованих тестованим "
"кодом, не змінюються. Оскільки будь-які жорсткі вкладки у вихідних даних "
"зразка *розгорнуті*, це означає, що якщо вивід коду містить жорсткі вкладки, "
"єдиний спосіб проходження doctest — це параметр :const:"
"`NORMALIZE_WHITESPACE` або :ref:`директива <doctest-directives>` в ефекті. "
"Крім того, тест можна переписати, щоб зафіксувати результат і порівняти його "
"з очікуваним значенням як частину тесту. Таку обробку вкладок у вихідному "
"коді було досягнуто шляхом проб і помилок, і це виявилося найменш схильним "
"до помилок способом обробки. Можна використати інший алгоритм для обробки "
"вкладок, написавши спеціальний клас :class:`DocTestParser`."

msgid ""
"Output to stdout is captured, but not output to stderr (exception tracebacks "
"are captured via a different means)."
msgstr ""
"Вихідні дані в stdout фіксуються, але не виводяться в stderr (зворотні дані "
"за винятками фіксуються іншим способом)."

msgid ""
"If you continue a line via backslashing in an interactive session, or for "
"any other reason use a backslash, you should use a raw docstring, which will "
"preserve your backslashes exactly as you type them::"
msgstr ""
"Якщо ви продовжуєте рядок через зворотну косу риску в інтерактивному сеансі "
"або з будь-якої іншої причини використовуєте зворотну косу риску, вам слід "
"використовувати необроблений рядок документації, який збереже ваші зворотні "
"косі риски точно так, як ви їх вводите::"

msgid ""
"Otherwise, the backslash will be interpreted as part of the string. For "
"example, the ``\\n`` above would be interpreted as a newline character.  "
"Alternatively, you can double each backslash in the doctest version (and not "
"use a raw string)::"
msgstr ""
"В іншому випадку зворотна коса риска буде інтерпретуватися як частина рядка. "
"Наприклад, ``\\n`` вище буде інтерпретовано як символ нового рядка. Крім "
"того, ви можете подвоїти кожну зворотну косу риску у версії doctest (і не "
"використовувати необроблений рядок)::"

msgid "The starting column doesn't matter::"
msgstr "Початковий стовпець не має значення::"

msgid ""
"and as many leading whitespace characters are stripped from the expected "
"output as appeared in the initial ``'>>> '`` line that started the example."
msgstr ""
"і стільки початкових пробільних символів видаляються з очікуваного "
"результату, скільки було показано в початковому рядку ``'>>> '``, який "
"розпочав приклад."

msgid "What's the Execution Context?"
msgstr "Що таке контекст виконання?"

msgid ""
"By default, each time :mod:`doctest` finds a docstring to test, it uses a "
"*shallow copy* of :mod:`M`'s globals, so that running tests doesn't change "
"the module's real globals, and so that one test in :mod:`M` can't leave "
"behind crumbs that accidentally allow another test to work.  This means "
"examples can freely use any names defined at top-level in :mod:`M`, and "
"names defined earlier in the docstring being run. Examples cannot see names "
"defined in other docstrings."
msgstr ""
"За замовчуванням, кожного разу, коли :mod:`doctest` знаходить рядок "
"документації для перевірки, він використовує *неглибоку копію* глобалів :mod:"
"`M`, так що виконання тестів не змінює реальні глобальні значення модуля, і "
"тому що один тест у :mod:`M` не може залишити крихти, які випадково "
"дозволяють іншому тесту працювати. Це означає, що приклади можуть вільно "
"використовувати будь-які імена, визначені на верхньому рівні в :mod:`M`, і "
"імена, визначені раніше в рядку документа, що виконується. Приклади не "
"можуть побачити імена, визначені в інших рядках документів."

msgid ""
"You can force use of your own dict as the execution context by passing "
"``globs=your_dict`` to :func:`testmod` or :func:`testfile` instead."
msgstr ""
"Ви можете примусово використовувати свій власний dict як контекст виконання, "
"передавши натомість ``globs=your_dict`` у :func:`testmod` або :func:"
"`testfile`."

msgid "What About Exceptions?"
msgstr "А як щодо винятків?"

msgid ""
"No problem, provided that the traceback is the only output produced by the "
"example:  just paste in the traceback. [#]_ Since tracebacks contain details "
"that are likely to change rapidly (for example, exact file paths and line "
"numbers), this is one case where doctest works hard to be flexible in what "
"it accepts."
msgstr ""
"Немає проблем, за умови, що відстеження є єдиним результатом, створеним "
"прикладом: просто вставте відстеження. [#]_ Оскільки відстеження містять "
"деталі, які можуть швидко змінюватися (наприклад, точні шляхи до файлів і "
"номери рядків), це один випадок, коли doctest докладає всіх зусиль, щоб бути "
"гнучким у тому, що він приймає."

msgid "Simple example::"
msgstr "Простий приклад::"

msgid ""
"That doctest succeeds if :exc:`ValueError` is raised, with the ``list."
"remove(x): x not in list`` detail as shown."
msgstr ""
"Цей doctest завершується успішно, якщо виникає :exc:`ValueError`, а ``list."
"remove(x): x немає в деталях списку``, як показано."

msgid ""
"The expected output for an exception must start with a traceback header, "
"which may be either of the following two lines, indented the same as the "
"first line of the example::"
msgstr ""
"Очікуваний вихід для винятку повинен починатися із заголовка трасування, "
"який може бути будь-яким із наступних двох рядків із таким самим відступом, "
"як і перший рядок прикладу:"

msgid ""
"The traceback header is followed by an optional traceback stack, whose "
"contents are ignored by doctest.  The traceback stack is typically omitted, "
"or copied verbatim from an interactive session."
msgstr ""
"Після заголовка трасування слід додатковий стек зворотного трасування, вміст "
"якого ігнорується doctest. Стек зворотного відстеження зазвичай "
"пропускається або дослівно копіюється з інтерактивного сеансу."

msgid ""
"The traceback stack is followed by the most interesting part: the line(s) "
"containing the exception type and detail.  This is usually the last line of "
"a traceback, but can extend across multiple lines if the exception has a "
"multi-line detail::"
msgstr ""
"За стеком відстеження слідує найцікавіша частина: рядки, що містять тип "
"винятку та деталі. Зазвичай це останній рядок трасування, але він може "
"охоплювати кілька рядків, якщо виняток містить багаторядкові деталі::"

msgid ""
"The last three lines (starting with :exc:`ValueError`) are compared against "
"the exception's type and detail, and the rest are ignored."
msgstr ""
"Останні три рядки (починаючи з :exc:`ValueError`) порівнюються з типом і "
"деталями винятку, а решта ігноруються."

msgid ""
"Best practice is to omit the traceback stack, unless it adds significant "
"documentation value to the example.  So the last example is probably better "
"as::"
msgstr ""
"Найкраща практика — опустити стек трасування, якщо це не додає прикладу "
"значну цінність документації. Отже, останній приклад, ймовірно, кращий як::"

msgid ""
"Note that tracebacks are treated very specially.  In particular, in the "
"rewritten example, the use of ``...`` is independent of doctest's :const:"
"`ELLIPSIS` option.  The ellipsis in that example could be left out, or could "
"just as well be three (or three hundred) commas or digits, or an indented "
"transcript of a Monty Python skit."
msgstr ""
"Зауважте, що трейсбеки обробляються дуже спеціально. Зокрема, у переписаному "
"прикладі використання ``...`` не залежить від параметра :const:`ELLIPSIS` "
"doctest. Багатокрапка в цьому прикладі може бути пропущена, або з таким же "
"успіхом може бути трьома (чи трьома сотнями) комами чи цифрами, або "
"транскриптом сценки Монті Пайтона з відступом."

msgid "Some details you should read once, but won't need to remember:"
msgstr ""
"Деякі деталі, які ви повинні прочитати один раз, але не повинні "
"запам'ятовувати:"

msgid ""
"Doctest can't guess whether your expected output came from an exception "
"traceback or from ordinary printing.  So, e.g., an example that expects "
"``ValueError: 42 is prime`` will pass whether :exc:`ValueError` is actually "
"raised or if the example merely prints that traceback text.  In practice, "
"ordinary output rarely begins with a traceback header line, so this doesn't "
"create real problems."
msgstr ""
"Doctest не може здогадатися, чи ваш очікуваний результат отримано від "
"відстеження виняткової ситуації чи від звичайного друку. Так, наприклад, "
"приклад, який очікує ``ValueError: 42 є простим``, буде передано незалежно "
"від того, чи :exc:`ValueError` справді викликано, чи приклад просто друкує "
"цей текст трасування. На практиці звичайний вихід рідко починається з рядка "
"заголовка трасування, тому це не створює реальних проблем."

msgid ""
"Each line of the traceback stack (if present) must be indented further than "
"the first line of the example, *or* start with a non-alphanumeric character. "
"The first line following the traceback header indented the same and starting "
"with an alphanumeric is taken to be the start of the exception detail.  Of "
"course this does the right thing for genuine tracebacks."
msgstr ""
"Кожен рядок стека зворотного відстеження (якщо він є) повинен мати відступ "
"далі, ніж перший рядок прикладу, *або* починатися з небуквено-цифрового "
"символу. Перший рядок після заголовка зворотного відстеження з однаковим "
"відступом і починається з буквено-цифрового символу вважається початком "
"деталей винятку. Звичайно, це правильно для справжнього відстеження."

msgid ""
"When the :const:`IGNORE_EXCEPTION_DETAIL` doctest option is specified, "
"everything following the leftmost colon and any module information in the "
"exception name is ignored."
msgstr ""
"Коли вказано параметр doctest :const:`IGNORE_EXCEPTION_DETAIL`, все, що йде "
"після крайньої лівої двокрапки, і будь-яка інформація модуля в назві винятку "
"ігнорується."

msgid ""
"The interactive shell omits the traceback header line for some :exc:"
"`SyntaxError`\\ s.  But doctest uses the traceback header line to "
"distinguish exceptions from non-exceptions.  So in the rare case where you "
"need to test a :exc:`SyntaxError` that omits the traceback header, you will "
"need to manually add the traceback header line to your test example."
msgstr ""
"Інтерактивна оболонка пропускає рядок заголовка трасування для деяких :exc:"
"`SyntaxError`\\ s. Але doctest використовує рядок заголовка трасування, щоб "
"відрізнити винятки від невинятків. Тож у тих рідкісних випадках, коли вам "
"потрібно перевірити :exc:`SyntaxError`, який пропускає заголовок трасування, "
"вам потрібно буде вручну додати рядок заголовка трасування до вашого "
"тестового прикладу."

msgid ""
"For some exceptions, Python displays the position of the error using ``^`` "
"markers and tildes::"
msgstr ""

msgid ""
"Since the lines showing the position of the error come before the exception "
"type and detail, they are not checked by doctest.  For example, the "
"following test would pass, even though it puts the ``^`` marker in the wrong "
"location::"
msgstr ""
"Оскільки рядки, що показують положення помилки, стоять перед типом винятку "
"та деталями, вони не перевіряються doctest. Наприклад, наступний тест буде "
"пройдено, навіть якщо він розмістить маркер ``^`` у неправильному місці:"

msgid "Option Flags"
msgstr "Прапори параметрів"

msgid ""
"A number of option flags control various aspects of doctest's behavior. "
"Symbolic names for the flags are supplied as module constants, which can be :"
"ref:`bitwise ORed <bitwise>` together and passed to various functions. The "
"names can also be used in :ref:`doctest directives <doctest-directives>`, "
"and may be passed to the doctest command line interface via the ``-o`` "
"option."
msgstr ""
"Кілька прапорців параметрів контролюють різні аспекти поведінки doctest. "
"Символічні імена для прапорів надаються як константи модуля, які можна :ref:"
"`порозрядно об’єднати АБО <bitwise>` разом і передати до різних функцій. "
"Імена також можна використовувати в :ref:`директивах doctest <doctest-"
"directives>`, і можуть бути передані в інтерфейс командного рядка doctest "
"через опцію ``-o``."

msgid "The ``-o`` command line option."
msgstr "Параметр командного рядка ``-o``."

msgid ""
"The first group of options define test semantics, controlling aspects of how "
"doctest decides whether actual output matches an example's expected output:"
msgstr ""
"Перша група параметрів визначає семантику тесту, контролюючи аспекти того, "
"як doctest вирішує, чи фактичний результат відповідає очікуваному результату "
"прикладу:"

msgid ""
"By default, if an expected output block contains just ``1``, an actual "
"output block containing just ``1`` or just ``True`` is considered to be a "
"match, and similarly for ``0`` versus ``False``.  When :const:"
"`DONT_ACCEPT_TRUE_FOR_1` is specified, neither substitution is allowed.  The "
"default behavior caters to that Python changed the return type of many "
"functions from integer to boolean; doctests expecting \"little integer\" "
"output still work in these cases.  This option will probably go away, but "
"not for several years."
msgstr ""
"За замовчуванням, якщо очікуваний вихідний блок містить лише ``1``, "
"фактичний вихідний блок, що містить лише ``1`` або лише ``True``, вважається "
"збігом, і аналогічно для ``0`` проти ``False``. Якщо вказано :const:"
"`DONT_ACCEPT_TRUE_FOR_1`, жодна заміна не дозволяється. Поведінка за "
"замовчуванням відповідає тому, що Python змінив тип повернення багатьох "
"функцій з цілого на логічний; doctests, які очікують виводу \"маленького "
"цілого\", все ще працюють у цих випадках. Цей варіант, ймовірно, зникне, але "
"не через кілька років."

msgid ""
"By default, if an expected output block contains a line containing only the "
"string ``<BLANKLINE>``, then that line will match a blank line in the actual "
"output.  Because a genuinely blank line delimits the expected output, this "
"is the only way to communicate that a blank line is expected.  When :const:"
"`DONT_ACCEPT_BLANKLINE` is specified, this substitution is not allowed."
msgstr ""
"За замовчуванням, якщо очікуваний блок виводу містить рядок, що містить лише "
"рядок ``<BLANKLINE>``, тоді цей рядок відповідатиме порожньому рядку у "
"фактичному виведенні. Оскільки справді порожній рядок розмежовує очікуваний "
"вихід, це єдиний спосіб повідомити, що очікується порожній рядок. Якщо "
"вказано :const:`DONT_ACCEPT_BLANKLINE`, ця заміна не дозволяється."

msgid ""
"When specified, all sequences of whitespace (blanks and newlines) are "
"treated as equal.  Any sequence of whitespace within the expected output "
"will match any sequence of whitespace within the actual output. By default, "
"whitespace must match exactly. :const:`NORMALIZE_WHITESPACE` is especially "
"useful when a line of expected output is very long, and you want to wrap it "
"across multiple lines in your source."
msgstr ""
"Якщо вказано, усі послідовності пробілів (пробілі та нові рядки) "
"розглядаються як однакові. Будь-яка послідовність пробілів у очікуваному "
"виводі відповідатиме будь-якій послідовності пробілів у фактичному "
"виведенні. За замовчуванням пробіли мають точно збігатися. :const:"
"`NORMALIZE_WHITESPACE` особливо корисний, коли рядок очікуваного результату "
"дуже довгий, і ви хочете обернути його між кількома рядками у своєму джерелі."

msgid ""
"When specified, an ellipsis marker (``...``) in the expected output can "
"match any substring in the actual output.  This includes substrings that "
"span line boundaries, and empty substrings, so it's best to keep usage of "
"this simple. Complicated uses can lead to the same kinds of \"oops, it "
"matched too much!\" surprises that ``.*`` is prone to in regular expressions."
msgstr ""
"Якщо вказано, маркер еліпса (``...``) в очікуваному виведенні може збігатися "
"з будь-яким підрядком у фактичному виведенні. Це включає в себе підрядки, "
"які охоплюють межі рядка, і порожні підрядки, тому найкраще використовувати "
"це просто. Складне використання може призвести до тих самих типів \"ой, це "
"збігається занадто багато!\" сюрпризів, до яких схильний ``.*`` у регулярних "
"виразах."

msgid ""
"When specified, doctests expecting exceptions pass so long as an exception "
"of the expected type is raised, even if the details (message and fully "
"qualified exception name) don't match."
msgstr ""

msgid ""
"For example, an example expecting ``ValueError: 42`` will pass if the actual "
"exception raised is ``ValueError: 3*14``, but will fail if, say, a :exc:"
"`TypeError` is raised instead. It will also ignore any fully qualified name "
"included before the exception class, which can vary between implementations "
"and versions of Python and the code/libraries in use. Hence, all three of "
"these variations will work with the flag specified:"
msgstr ""

msgid ""
"Note that :const:`ELLIPSIS` can also be used to ignore the details of the "
"exception message, but such a test may still fail based on whether the "
"module name is present or matches exactly."
msgstr ""
"Зауважте, що :const:`ELLIPSIS` також можна використовувати для ігнорування "
"деталей повідомлення про винятки, але такий тест все одно може завершитися "
"невдачею залежно від того, чи присутнє ім’я модуля чи воно точно збігається."

msgid ""
":const:`IGNORE_EXCEPTION_DETAIL` now also ignores any information relating "
"to the module containing the exception under test."
msgstr ""
":const:`IGNORE_EXCEPTION_DETAIL` тепер також ігнорує будь-яку інформацію, "
"пов’язану з модулем, що містить виняток, що тестується."

msgid ""
"When specified, do not run the example at all.  This can be useful in "
"contexts where doctest examples serve as both documentation and test cases, "
"and an example should be included for documentation purposes, but should not "
"be checked.  E.g., the example's output might be random; or the example "
"might depend on resources which would be unavailable to the test driver."
msgstr ""
"Якщо вказано, не запускати приклад взагалі. Це може бути корисним у "
"контекстах, де приклади doctest служать як документацією, так і тестовими "
"випадками, і приклад слід включити з метою документації, але не слід "
"перевіряти. Наприклад, результат прикладу може бути випадковим; або приклад "
"може залежати від ресурсів, які були б недоступні для тестового драйвера."

msgid ""
"The SKIP flag can also be used for temporarily \"commenting out\" examples."
msgstr ""
"Прапор SKIP також можна використовувати для тимчасового \"закоментування\" "
"прикладів."

msgid "A bitmask or'ing together all the comparison flags above."
msgstr "Бітова маска або об’єднання всіх прапорів порівняння вище."

msgid "The second group of options controls how test failures are reported:"
msgstr "Друга група параметрів контролює, як повідомляється про помилки тесту:"

msgid ""
"When specified, failures that involve multi-line expected and actual outputs "
"are displayed using a unified diff."
msgstr ""
"Якщо вказано, помилки, які включають багаторядкові очікувані та фактичні "
"виходи, відображаються за допомогою уніфікованої різниці."

msgid ""
"When specified, failures that involve multi-line expected and actual outputs "
"will be displayed using a context diff."
msgstr ""
"Якщо вказано, помилки, які включають багаторядкові очікувані та фактичні "
"результати, відображатимуться за допомогою контекстної різниці."

msgid ""
"When specified, differences are computed by ``difflib.Differ``, using the "
"same algorithm as the popular :file:`ndiff.py` utility. This is the only "
"method that marks differences within lines as well as across lines.  For "
"example, if a line of expected output contains digit ``1`` where actual "
"output contains letter ``l``, a line is inserted with a caret marking the "
"mismatching column positions."
msgstr ""
"Якщо вказано, відмінності обчислюються за допомогою ``difflib.Differ``, "
"використовуючи той самий алгоритм, що й популярна утиліта :file:`ndiff.py`. "
"Це єдиний метод, який позначає відмінності всередині ліній, а також між "
"лініями. Наприклад, якщо рядок очікуваного виводу містить цифру ``1``, а "
"фактичний вивід містить літеру ``l``, рядок вставляється з кареткою, що "
"позначає невідповідні позиції стовпців."

msgid ""
"When specified, display the first failing example in each doctest, but "
"suppress output for all remaining examples.  This will prevent doctest from "
"reporting correct examples that break because of earlier failures; but it "
"might also hide incorrect examples that fail independently of the first "
"failure.  When :const:`REPORT_ONLY_FIRST_FAILURE` is specified, the "
"remaining examples are still run, and still count towards the total number "
"of failures reported; only the output is suppressed."
msgstr ""
"Якщо вказано, відобразити перший невдалий приклад у кожному документотесті, "
"але придушити вихід для всіх решти прикладів. Це завадить doctest "
"повідомляти про правильні приклади, які вийшли з ладу через попередні "
"помилки; але це також може приховати некоректні приклади, які завершуються "
"невдачею незалежно від першої невдачі. Якщо вказано :const:"
"`REPORT_ONLY_FIRST_FAILURE`, інші приклади все ще виконуються та "
"враховуються до загальної кількості повідомлених про помилки; пригнічується "
"тільки вихід."

msgid ""
"When specified, exit after the first failing example and don't attempt to "
"run the remaining examples. Thus, the number of failures reported will be at "
"most 1.  This flag may be useful during debugging, since examples after the "
"first failure won't even produce debugging output."
msgstr ""
"Якщо вказано, вийти після першого невдалого прикладу та не намагатися "
"запустити решту прикладів. Таким чином, кількість повідомлених помилок "
"становитиме щонайбільше 1. Цей прапорець може бути корисним під час "
"налагодження, оскільки приклади після першої помилки навіть не "
"створюватимуть вихід налагодження."

msgid ""
"The doctest command line accepts the option ``-f`` as a shorthand for ``-o "
"FAIL_FAST``."
msgstr ""
"Командний рядок doctest приймає опцію ``-f`` як скорочення ``-o FAIL_FAST``."

msgid "A bitmask or'ing together all the reporting flags above."
msgstr "Бітова маска або об’єднання всіх наведених вище позначок звітування."

msgid ""
"There is also a way to register new option flag names, though this isn't "
"useful unless you intend to extend :mod:`doctest` internals via subclassing:"
msgstr ""
"Існує також спосіб зареєструвати нові назви прапорців параметрів, хоча це не "
"корисно, якщо ви не маєте намір розширити внутрішні :mod:`doctest` через "
"підкласи:"

msgid ""
"Create a new option flag with a given name, and return the new flag's "
"integer value.  :func:`register_optionflag` can be used when subclassing :"
"class:`OutputChecker` or :class:`DocTestRunner` to create new options that "
"are supported by your subclasses.  :func:`register_optionflag` should always "
"be called using the following idiom::"
msgstr ""
"Створіть новий прапор параметра з заданою назвою та поверніть ціле значення "
"нового прапора. :func:`register_optionflag` можна використовувати під час "
"створення підкласів :class:`OutputChecker` або :class:`DocTestRunner` для "
"створення нових параметрів, які підтримуються вашими підкласами. :func:"
"`register_optionflag` завжди слід викликати за допомогою такої ідіоми:"

msgid "Directives"
msgstr "Директиви"

msgid ""
"Doctest directives may be used to modify the :ref:`option flags <doctest-"
"options>` for an individual example.  Doctest directives are special Python "
"comments following an example's source code:"
msgstr ""
"Директиви Doctest можна використовувати для зміни :ref:`прапорців параметрів "
"<doctest-options>` для окремого прикладу. Директиви Doctest — це спеціальні "
"коментарі Python, які слідують за вихідним кодом прикладу:"

msgid ""
"Whitespace is not allowed between the ``+`` or ``-`` and the directive "
"option name.  The directive option name can be any of the option flag names "
"explained above."
msgstr ""
"Пробіли не допускаються між \"+\" або \"-\" та назвою параметра директиви. "
"Назва опції директиви може бути будь-якою з імен прапорців опції, пояснених "
"вище."

msgid ""
"An example's doctest directives modify doctest's behavior for that single "
"example.  Use ``+`` to enable the named behavior, or ``-`` to disable it."
msgstr ""
"Директиви doctest прикладу змінюють поведінку doctest для цього окремого "
"прикладу. Використовуйте ``+``, щоб увімкнути вказану поведінку, або ``-``, "
"щоб вимкнути її."

msgid "For example, this test passes:"
msgstr "Наприклад, цей тест проходить:"

msgid ""
"Without the directive it would fail, both because the actual output doesn't "
"have two blanks before the single-digit list elements, and because the "
"actual output is on a single line.  This test also passes, and also requires "
"a directive to do so:"
msgstr ""
"Без директиви це було б невдалим, тому що фактичний вивід не має двох "
"пробілів перед однозначними елементами списку, а також тому, що фактичний "
"вивід містить один рядок. Цей тест також проходить, і для цього також "
"потрібна директива:"

msgid ""
"Multiple directives can be used on a single physical line, separated by "
"commas:"
msgstr ""
"В одному фізичному рядку можна використовувати кілька директив, розділених "
"комами:"

msgid ""
"If multiple directive comments are used for a single example, then they are "
"combined:"
msgstr ""
"Якщо для одного прикладу використовується кілька коментарів директиви, вони "
"об’єднуються:"

msgid ""
"As the previous example shows, you can add ``...`` lines to your example "
"containing only directives.  This can be useful when an example is too long "
"for a directive to comfortably fit on the same line:"
msgstr ""
"Як показано в попередньому прикладі, ви можете додати до свого прикладу "
"рядки ``...``, які містять лише директиви. Це може бути корисно, коли "
"приклад надто довгий, щоб директива могла зручно розміститися в одному рядку:"

msgid ""
"Note that since all options are disabled by default, and directives apply "
"only to the example they appear in, enabling options (via ``+`` in a "
"directive) is usually the only meaningful choice.  However, option flags can "
"also be passed to functions that run doctests, establishing different "
"defaults.  In such cases, disabling an option via ``-`` in a directive can "
"be useful."
msgstr ""
"Зауважте, що оскільки всі параметри вимкнено за замовчуванням, а директиви "
"застосовуються лише до прикладу, у якому вони з’являються, увімкнення "
"параметрів (через ``+`` у директиві) зазвичай є єдиним значущим вибором. "
"Однак позначки параметрів також можна передати функціям, які запускають "
"doctests, встановлюючи різні значення за замовчуванням. У таких випадках "
"може бути корисним вимкнення опції за допомогою ``-`` у директиві."

msgid "Warnings"
msgstr "Попередження"

msgid ""
":mod:`doctest` is serious about requiring exact matches in expected output.  "
"If even a single character doesn't match, the test fails.  This will "
"probably surprise you a few times, as you learn exactly what Python does and "
"doesn't guarantee about output.  For example, when printing a set, Python "
"doesn't guarantee that the element is printed in any particular order, so a "
"test like ::"
msgstr ""
":mod:`doctest` серйозно ставиться до вимог точних збігів в очікуваних "
"результатах. Якщо хоча б один символ не збігається, тест проходить невдало. "
"Можливо, це кілька разів вас здивує, оскільки ви дізнаєтесь, що саме робить "
"Python і що не гарантує вихід. Наприклад, під час друку набору Python не "
"гарантує, що елемент буде надруковано в будь-якому певному порядку, тому "
"такий тест::"

msgid "is vulnerable!  One workaround is to do ::"
msgstr "вразливий! Одним з обхідних шляхів є:"

msgid "instead.  Another is to do ::"
msgstr "замість цього. Інше - зробити ::"

msgid "There are others, but you get the idea."
msgstr "Є й інші, але ви зрозуміли."

msgid "Another bad idea is to print things that embed an object address, like"
msgstr ""
"Ще одна погана ідея — друкувати речі, які містять адресу об’єкта, наприклад"

msgid ""
"The :const:`ELLIPSIS` directive gives a nice approach for the last example:"
msgstr "Директива :const:`ELLIPSIS` дає гарний підхід для останнього прикладу:"

msgid ""
"Floating-point numbers are also subject to small output variations across "
"platforms, because Python defers to the platform C library for float "
"formatting, and C libraries vary widely in quality here. ::"
msgstr ""
"Числа з плаваючою комою також підлягають невеликим варіаціям виводу на "
"різних платформах, оскільки Python віддає перевагу бібліотеці платформи C "
"для форматування з плаваючою комою, і бібліотеки C тут сильно відрізняються "
"за якістю. ::"

msgid ""
"Numbers of the form ``I/2.**J`` are safe across all platforms, and I often "
"contrive doctest examples to produce numbers of that form::"
msgstr ""
"Числа у формі ``I/2.**J`` безпечні на всіх платформах, і я часто створюю "
"приклади doctest для отримання чисел такої форми::"

msgid ""
"Simple fractions are also easier for people to understand, and that makes "
"for better documentation."
msgstr "Прості дроби також легше зрозуміти людям, і це покращує документацію."

msgid "Basic API"
msgstr "Базовий API"

msgid ""
"The functions :func:`testmod` and :func:`testfile` provide a simple "
"interface to doctest that should be sufficient for most basic uses.  For a "
"less formal introduction to these two functions, see sections :ref:`doctest-"
"simple-testmod` and :ref:`doctest-simple-testfile`."
msgstr ""
"Функції :func:`testmod` і :func:`testfile` забезпечують простий інтерфейс "
"для doctest, якого має бути достатньо для більшості базових застосувань. Для "
"менш формального вступу до цих двох функцій див. розділи :ref:`doctest-"
"simple-testmod` і :ref:`doctest-simple-testfile`."

msgid ""
"All arguments except *filename* are optional, and should be specified in "
"keyword form."
msgstr ""
"Усі аргументи, окрім *ім’я файлу*, є необов’язковими та мають бути вказані у "
"формі ключового слова."

msgid ""
"Test examples in the file named *filename*.  Return ``(failure_count, "
"test_count)``."
msgstr ""
"Тестові приклади у файлі з назвою *ім'я_файлу*. Повернення ``(failure_count, "
"test_count)``."

msgid ""
"Optional argument *module_relative* specifies how the filename should be "
"interpreted:"
msgstr ""
"Необов’язковий аргумент *module_relative* визначає, як слід інтерпретувати "
"назву файлу:"

msgid ""
"If *module_relative* is ``True`` (the default), then *filename* specifies an "
"OS-independent module-relative path.  By default, this path is relative to "
"the calling module's directory; but if the *package* argument is specified, "
"then it is relative to that package.  To ensure OS-independence, *filename* "
"should use ``/`` characters to separate path segments, and may not be an "
"absolute path (i.e., it may not begin with ``/``)."
msgstr ""
"Якщо *module_relative* має значення ``True`` (за замовчуванням), тоді "
"*filename* вказує незалежний від ОС шлях до модуля. За замовчуванням цей "
"шлях є відносно каталогу викликаючого модуля; але якщо вказано аргумент "
"*package*, то він відноситься до цього пакета. Щоб забезпечити незалежність "
"від ОС, *ім’я файлу* має використовувати символи ``/`` для розділення "
"сегментів шляху та не може бути абсолютним шляхом (тобто воно не може "
"починатися з ``/``)."

msgid ""
"If *module_relative* is ``False``, then *filename* specifies an OS-specific "
"path.  The path may be absolute or relative; relative paths are resolved "
"with respect to the current working directory."
msgstr ""
"Якщо *module_relative* має значення ``False``, тоді *filename* вказує шлях "
"до ОС. Шлях може бути абсолютним або відносним; відносні шляхи вирішуються "
"відносно поточного робочого каталогу."

msgid ""
"Optional argument *name* gives the name of the test; by default, or if "
"``None``, ``os.path.basename(filename)`` is used."
msgstr ""
"Необов'язковий аргумент *name* дає назву тесту; за замовчуванням або, якщо "
"``None``, ``os.path.basename(filename)`` використовується."

msgid ""
"Optional argument *package* is a Python package or the name of a Python "
"package whose directory should be used as the base directory for a module-"
"relative filename.  If no package is specified, then the calling module's "
"directory is used as the base directory for module-relative filenames.  It "
"is an error to specify *package* if *module_relative* is ``False``."
msgstr ""
"Необов’язковий аргумент *package* — це пакет Python або ім’я пакета Python, "
"чий каталог слід використовувати як базовий каталог для назви файла, що "
"стосується модуля. Якщо пакет не вказано, то каталог модуля, що викликає, "
"використовується як базовий каталог для імен файлів, що відносяться до "
"модуля. Це помилка вказувати *package*, якщо *module_relative* має значення "
"``False``."

msgid ""
"Optional argument *globs* gives a dict to be used as the globals when "
"executing examples.  A new shallow copy of this dict is created for the "
"doctest, so its examples start with a clean slate. By default, or if "
"``None``, a new empty dict is used."
msgstr ""
"Необов’язковий аргумент *globs* дає dict, який буде використовуватися як "
"глобальні під час виконання прикладів. Для doctest створюється нова "
"поверхнева копія цього dict, тому її приклади починаються з чистого аркуша. "
"За замовчуванням або якщо ``None``, використовується новий порожній dict."

msgid ""
"Optional argument *extraglobs* gives a dict merged into the globals used to "
"execute examples.  This works like :meth:`dict.update`:  if *globs* and "
"*extraglobs* have a common key, the associated value in *extraglobs* appears "
"in the combined dict.  By default, or if ``None``, no extra globals are "
"used.  This is an advanced feature that allows parameterization of "
"doctests.  For example, a doctest can be written for a base class, using a "
"generic name for the class, then reused to test any number of subclasses by "
"passing an *extraglobs* dict mapping the generic name to the subclass to be "
"tested."
msgstr ""
"Необов’язковий аргумент *extraglobs* дає dict, об’єднаний із глобальними "
"значеннями, які використовуються для виконання прикладів. Це працює як :meth:"
"`dict.update`: якщо *globs* і *extraglobs* мають спільний ключ, пов’язане "
"значення в *extraglobs* з’являється в комбінованому dict. За замовчуванням "
"або якщо ``None``, додаткові глобальні значення не використовуються. Це "
"розширена функція, яка дозволяє параметризувати doctests. Наприклад, doctest "
"можна написати для базового класу, використовуючи загальну назву для класу, "
"а потім повторно використовувати для тестування будь-якої кількості "
"підкласів, передавши *extraglobs* dict, що відображає загальну назву на "
"підклас, який потрібно перевірити."

msgid ""
"Optional argument *verbose* prints lots of stuff if true, and prints only "
"failures if false; by default, or if ``None``, it's true if and only if ``'-"
"v'`` is in ``sys.argv``."
msgstr ""
"Додатковий аргумент *verbose* друкує багато речей, якщо true, і друкує лише "
"помилки, якщо false; за замовчуванням або якщо ``None``, це істина тоді і "
"тільки якщо ``'-v''`` є в ``sys.argv``."

msgid ""
"Optional argument *report* prints a summary at the end when true, else "
"prints nothing at the end.  In verbose mode, the summary is detailed, else "
"the summary is very brief (in fact, empty if all tests passed)."
msgstr ""
"Необов’язковий аргумент *report* друкує підсумок у кінці, якщо значення "
"true, інакше нічого не друкує в кінці. У багатослівному режимі резюме є "
"детальним, інакше резюме є дуже коротким (насправді порожнім, якщо всі тести "
"пройдено)."

msgid ""
"Optional argument *optionflags* (default value 0) takes the :ref:`bitwise OR "
"<bitwise>` of option flags. See section :ref:`doctest-options`."
msgstr ""
"Необов’язковий аргумент *optionflags* (значення за замовчуванням 0) приймає :"
"ref:`побітове АБО <bitwise>` прапорів параметрів. Дивіться розділ :ref:"
"`doctest-options`."

msgid ""
"Optional argument *raise_on_error* defaults to false.  If true, an exception "
"is raised upon the first failure or unexpected exception in an example.  "
"This allows failures to be post-mortem debugged. Default behavior is to "
"continue running examples."
msgstr ""
"Додатковий аргумент *raise_on_error* за умовчанням має значення false. Якщо "
"істина, виняток виникає після першої помилки або несподіваного винятку в "
"прикладі. Це дозволяє посмертно виправляти помилки. Типовою поведінкою є "
"продовження виконання прикладів."

msgid ""
"Optional argument *parser* specifies a :class:`DocTestParser` (or subclass) "
"that should be used to extract tests from the files.  It defaults to a "
"normal parser (i.e., ``DocTestParser()``)."
msgstr ""
"Необов’язковий аргумент *parser* визначає :class:`DocTestParser` (або "
"підклас), який слід використовувати для отримання тестів із файлів. За "
"замовчуванням використовується звичайний аналізатор (тобто "
"``DocTestParser()``)."

msgid ""
"Optional argument *encoding* specifies an encoding that should be used to "
"convert the file to unicode."
msgstr ""
"Необов’язковий аргумент *encoding* визначає кодування, яке слід "
"використовувати для перетворення файлу в Юнікод."

msgid ""
"All arguments are optional, and all except for *m* should be specified in "
"keyword form."
msgstr ""
"Усі аргументи є необов’язковими, і всі, крім *m*, мають бути вказані у формі "
"ключового слова."

msgid ""
"Test examples in docstrings in functions and classes reachable from module "
"*m* (or module :mod:`__main__` if *m* is not supplied or is ``None``), "
"starting with ``m.__doc__``."
msgstr ""
"Тестові приклади в рядках документів у функціях і класах, доступних із "
"модуля *m* (або модуля :mod:`__main__`, якщо *m* не вказано або має значення "
"``None``), починаючи з ``m.__doc__``."

msgid ""
"Also test examples reachable from dict ``m.__test__``, if it exists and is "
"not ``None``.  ``m.__test__`` maps names (strings) to functions, classes and "
"strings; function and class docstrings are searched for examples; strings "
"are searched directly, as if they were docstrings."
msgstr ""
"Також тестові приклади доступні з dict ``m.__test__``, якщо він існує і не є "
"``None``. ``m.__test__`` відображає імена (рядки) на функції, класи та "
"рядки; виконується пошук прикладів у документах функцій і класів; рядки "
"шукаються безпосередньо, як якщо б це були рядки документації."

msgid ""
"Only docstrings attached to objects belonging to module *m* are searched."
msgstr ""
"Пошук здійснюється лише в рядках документів, приєднаних до об’єктів, що "
"належать модулю *m*."

msgid "Return ``(failure_count, test_count)``."
msgstr "Повернення ``(failure_count, test_count)``."

msgid ""
"Optional argument *name* gives the name of the module; by default, or if "
"``None``, ``m.__name__`` is used."
msgstr ""
"Необов'язковий аргумент *name* дає назву модуля; за замовчуванням або, якщо "
"``None``, ``m.__name__`` використовується."

msgid ""
"Optional argument *exclude_empty* defaults to false.  If true, objects for "
"which no doctests are found are excluded from consideration. The default is "
"a backward compatibility hack, so that code still using :meth:`doctest."
"master.summarize` in conjunction with :func:`testmod` continues to get "
"output for objects with no tests. The *exclude_empty* argument to the newer :"
"class:`DocTestFinder` constructor defaults to true."
msgstr ""
"Додатковий аргумент *exclude_empty* за умовчанням має значення false. Якщо "
"значення true, об’єкти, для яких не знайдено жодних тестів, виключаються з "
"розгляду. За замовчуванням використовується зворотна сумісність, тому код, "
"який все ще використовує :meth:`doctest.master.summarize` у поєднанні з :"
"func:`testmod`, продовжує отримувати вихідні дані для об’єктів без тестів. "
"Аргумент *exclude_empty* для нового конструктора :class:`DocTestFinder` за "
"умовчанням має значення true."

msgid ""
"Optional arguments *extraglobs*, *verbose*, *report*, *optionflags*, "
"*raise_on_error*, and *globs* are the same as for function :func:`testfile` "
"above, except that *globs* defaults to ``m.__dict__``."
msgstr ""
"Необов’язкові аргументи *extraglobs*, *verbose*, *report*, *optionflags*, "
"*raise_on_error* і *globs* такі самі, як і для функції :func:`testfile` "
"вище, за винятком того, що *globs* за умовчанням має значення ``m ."
"__dict__``."

msgid ""
"Test examples associated with object *f*; for example, *f* may be a string, "
"a module, a function, or a class object."
msgstr ""
"Тестові приклади, пов'язані з об'єктом *f*; наприклад, *f* може бути рядком, "
"модулем, функцією або об’єктом класу."

msgid ""
"A shallow copy of dictionary argument *globs* is used for the execution "
"context."
msgstr ""
"Неглибока копія аргументу словника *globs* використовується для контексту "
"виконання."

msgid ""
"Optional argument *name* is used in failure messages, and defaults to "
"``\"NoName\"``."
msgstr ""
"Необов’язковий аргумент *ім’я* використовується в повідомленнях про помилку "
"та за умовчанням має значення ``\"NoName\"``."

msgid ""
"If optional argument *verbose* is true, output is generated even if there "
"are no failures.  By default, output is generated only in case of an example "
"failure."
msgstr ""
"Якщо додатковий аргумент *verbose* має значення true, вихідні дані "
"генеруються, навіть якщо немає помилок. За замовчуванням вихідні дані "
"генеруються лише у випадку помилки прикладу."

msgid ""
"Optional argument *compileflags* gives the set of flags that should be used "
"by the Python compiler when running the examples.  By default, or if "
"``None``, flags are deduced corresponding to the set of future features "
"found in *globs*."
msgstr ""
"Необов’язковий аргумент *compileflags* надає набір прапорів, які має "
"використовувати компілятор Python під час виконання прикладів. За "
"замовчуванням або якщо ``None``, прапори виводяться відповідно до набору "
"майбутніх функцій, знайдених у *globs*."

msgid ""
"Optional argument *optionflags* works as for function :func:`testfile` above."
msgstr ""
"Необов’язковий аргумент *optionflags* працює як для функції :func:`testfile` "
"вище."

msgid "Unittest API"
msgstr "Unittest API"

msgid ""
"As your collection of doctest'ed modules grows, you'll want a way to run all "
"their doctests systematically.  :mod:`doctest` provides two functions that "
"can be used to create :mod:`unittest` test suites from modules and text "
"files containing doctests.  To integrate with :mod:`unittest` test "
"discovery, include a :func:`load_tests` function in your test module::"
msgstr ""
"У міру того як ваша колекція модулів doctest зростатиме, вам знадобиться "
"спосіб систематично запускати всі їхні doctests. :mod:`doctest` надає дві "
"функції, які можна використовувати для створення наборів тестів :mod:"
"`unittest` з модулів і текстових файлів, що містять doctests. Для інтеграції "
"з виявленням тестів :mod:`unittest` додайте функцію :func:`load_tests` у "
"свій тестовий модуль::"

msgid ""
"There are two main functions for creating :class:`unittest.TestSuite` "
"instances from text files and modules with doctests:"
msgstr ""
"Є дві основні функції для створення екземплярів :class:`unittest.TestSuite` "
"з текстових файлів і модулів з doctests:"

msgid ""
"Convert doctest tests from one or more text files to a :class:`unittest."
"TestSuite`."
msgstr ""
"Перетворіть тести doctest з одного чи кількох текстових файлів у :class:"
"`unittest.TestSuite`."

msgid ""
"The returned :class:`unittest.TestSuite` is to be run by the unittest "
"framework and runs the interactive examples in each file.  If an example in "
"any file fails, then the synthesized unit test fails, and a :exc:"
"`failureException` exception is raised showing the name of the file "
"containing the test and a (sometimes approximate) line number."
msgstr ""
"Повернений :class:`unittest.TestSuite` повинен запускатися фреймворком "
"unittest і запускати інтерактивні приклади в кожному файлі. Якщо приклад у "
"будь-якому файлі завершується невдачею, синтезований модульний тест "
"завершується невдало, і виникає виняткова ситуація :exc:`failureException`, "
"яка показує назву файлу, що містить тест, і (іноді приблизний) номер рядка."

msgid "Pass one or more paths (as strings) to text files to be examined."
msgstr ""
"Передайте один або кілька шляхів (у вигляді рядків) до текстових файлів, які "
"потрібно перевірити."

msgid "Options may be provided as keyword arguments:"
msgstr "Параметри можуть бути надані як аргументи ключових слів:"

msgid ""
"Optional argument *module_relative* specifies how the filenames in *paths* "
"should be interpreted:"
msgstr ""
"Необов’язковий аргумент *module_relative* визначає, як слід інтерпретувати "
"назви файлів у *paths*:"

msgid ""
"If *module_relative* is ``True`` (the default), then each filename in "
"*paths* specifies an OS-independent module-relative path.  By default, this "
"path is relative to the calling module's directory; but if the *package* "
"argument is specified, then it is relative to that package.  To ensure OS-"
"independence, each filename should use ``/`` characters to separate path "
"segments, and may not be an absolute path (i.e., it may not begin with ``/"
"``)."
msgstr ""
"Якщо *module_relative* має значення ``True`` (за замовчуванням), тоді кожне "
"ім’я файлу в *paths* визначає незалежний від ОС шлях щодо модуля. За "
"замовчуванням цей шлях є відносно каталогу викликаючого модуля; але якщо "
"вказано аргумент *package*, то він відноситься до цього пакета. Щоб "
"забезпечити незалежність від ОС, кожне ім’я файлу має використовувати "
"символи ``/`` для розділення сегментів шляху та не може бути абсолютним "
"шляхом (тобто воно не може починатися з ``/``)."

msgid ""
"If *module_relative* is ``False``, then each filename in *paths* specifies "
"an OS-specific path.  The path may be absolute or relative; relative paths "
"are resolved with respect to the current working directory."
msgstr ""
"Якщо *module_relative* має значення ``False``, тоді кожне ім’я файлу в "
"*paths* вказує шлях до ОС. Шлях може бути абсолютним або відносним; відносні "
"шляхи вирішуються відносно поточного робочого каталогу."

msgid ""
"Optional argument *package* is a Python package or the name of a Python "
"package whose directory should be used as the base directory for module-"
"relative filenames in *paths*.  If no package is specified, then the calling "
"module's directory is used as the base directory for module-relative "
"filenames.  It is an error to specify *package* if *module_relative* is "
"``False``."
msgstr ""
"Необов’язковий аргумент *package* — це пакет Python або ім’я пакета Python, "
"чий каталог слід використовувати як базовий каталог для імен файлів, "
"пов’язаних із модулями, у *paths*. Якщо пакет не вказано, то каталог модуля, "
"що викликає, використовується як базовий каталог для імен файлів, що "
"відносяться до модуля. Це помилка вказувати *package*, якщо "
"*module_relative* має значення ``False``."

msgid ""
"Optional argument *setUp* specifies a set-up function for the test suite. "
"This is called before running the tests in each file.  The *setUp* function "
"will be passed a :class:`DocTest` object.  The setUp function can access the "
"test globals as the *globs* attribute of the test passed."
msgstr ""
"Додатковий аргумент *setUp* визначає функцію налаштування для набору тестів. "
"Це викликається перед виконанням тестів у кожному файлі. Функції *setUp* "
"буде передано об’єкт :class:`DocTest`. Функція setUp може отримати доступ до "
"глобальних параметрів тесту як атрибута *globs* пройденого тесту."

msgid ""
"Optional argument *tearDown* specifies a tear-down function for the test "
"suite.  This is called after running the tests in each file.  The *tearDown* "
"function will be passed a :class:`DocTest` object.  The setUp function can "
"access the test globals as the *globs* attribute of the test passed."
msgstr ""
"Необов’язковий аргумент *tearDown* визначає функцію розриву для набору "
"тестів. Це викликається після виконання тестів у кожному файлі. Функції "
"*tearDown* буде передано об’єкт :class:`DocTest`. Функція setUp може "
"отримати доступ до глобальних параметрів тесту як атрибута *globs* "
"пройденого тесту."

msgid ""
"Optional argument *globs* is a dictionary containing the initial global "
"variables for the tests.  A new copy of this dictionary is created for each "
"test.  By default, *globs* is a new empty dictionary."
msgstr ""
"Додатковий аргумент *globs* — це словник, що містить початкові глобальні "
"змінні для тестів. Для кожного тесту створюється нова копія цього словника. "
"За замовчуванням *globs* — це новий порожній словник."

msgid ""
"Optional argument *optionflags* specifies the default doctest options for "
"the tests, created by or-ing together individual option flags.  See section :"
"ref:`doctest-options`. See function :func:`set_unittest_reportflags` below "
"for a better way to set reporting options."
msgstr ""
"Необов’язковий аргумент *optionflags* вказує параметри тесту за "
"замовчуванням для тестів, створені шляхом об’єднання окремих прапорців "
"параметрів. Дивіться розділ :ref:`doctest-options`. Перегляньте функцію :"
"func:`set_unittest_reportflags` нижче, щоб дізнатися про кращий спосіб "
"налаштування параметрів звітування."

msgid ""
"The global ``__file__`` is added to the globals provided to doctests loaded "
"from a text file using :func:`DocFileSuite`."
msgstr ""
"Глобальний ``__file__`` додається до глобалів, наданих до doctests, "
"завантажених із текстового файлу за допомогою :func:`DocFileSuite`."

msgid "Convert doctest tests for a module to a :class:`unittest.TestSuite`."
msgstr "Перетворіть тести doctest для модуля на :class:`unittest.TestSuite`."

msgid ""
"The returned :class:`unittest.TestSuite` is to be run by the unittest "
"framework and runs each doctest in the module.  If any of the doctests fail, "
"then the synthesized unit test fails, and a :exc:`failureException` "
"exception is raised showing the name of the file containing the test and a "
"(sometimes approximate) line number."
msgstr ""
"Повернений :class:`unittest.TestSuite` має запускатися фреймворком unittest "
"і запускає кожен doctest у модулі. Якщо будь-який із тестів документів не "
"вдається, синтезований модульний тест завершується невдало, і виникає "
"виняткова ситуація :exc:`failureException`, яка показує назву файлу, що "
"містить тест, і (іноді приблизний) номер рядка."

msgid ""
"Optional argument *module* provides the module to be tested.  It can be a "
"module object or a (possibly dotted) module name.  If not specified, the "
"module calling this function is used."
msgstr ""
"Необов’язковий аргумент *module* надає модуль для тестування. Це може бути "
"об’єкт модуля або ім’я модуля (можливо з крапками). Якщо не вказано, "
"використовується модуль, який викликає цю функцію."

msgid ""
"Optional argument *extraglobs* specifies an extra set of global variables, "
"which is merged into *globs*.  By default, no extra globals are used."
msgstr ""
"Необов’язковий аргумент *extraglobs* визначає додатковий набір глобальних "
"змінних, який об’єднується в *globs*. За замовчуванням додаткові глобальні "
"значення не використовуються."

msgid ""
"Optional argument *test_finder* is the :class:`DocTestFinder` object (or a "
"drop-in replacement) that is used to extract doctests from the module."
msgstr ""
"Необов’язковий аргумент *test_finder* — це об’єкт :class:`DocTestFinder` "
"(або замінник), який використовується для вилучення тестів документів із "
"модуля."

msgid ""
"Optional arguments *setUp*, *tearDown*, and *optionflags* are the same as "
"for function :func:`DocFileSuite` above."
msgstr ""
"Необов’язкові аргументи *setUp*, *tearDown* і *optionflags* такі самі, як і "
"для функції :func:`DocFileSuite` вище."

msgid "This function uses the same search technique as :func:`testmod`."
msgstr "Ця функція використовує ту саму техніку пошуку, що й :func:`testmod`."

msgid ""
":func:`DocTestSuite` returns an empty :class:`unittest.TestSuite` if "
"*module* contains no docstrings instead of raising :exc:`ValueError`."
msgstr ""
":func:`DocTestSuite` повертає порожній :class:`unittest.TestSuite`, якщо "
"*module* не містить рядків документів, замість того, щоб викликати :exc:"
"`ValueError`."

msgid ""
"Under the covers, :func:`DocTestSuite` creates a :class:`unittest.TestSuite` "
"out of :class:`doctest.DocTestCase` instances, and :class:`DocTestCase` is a "
"subclass of :class:`unittest.TestCase`. :class:`DocTestCase` isn't "
"documented here (it's an internal detail), but studying its code can answer "
"questions about the exact details of :mod:`unittest` integration."
msgstr ""
"Під обкладинками :func:`DocTestSuite` створює :class:`unittest.TestSuite` з "
"екземплярів :class:`doctest.DocTestCase`, а :class:`DocTestCase` є "
"підкласом :class:`unittest.TestCase`. :class:`DocTestCase` тут не "
"задокументовано (це внутрішня деталь), але вивчення його коду може "
"відповісти на запитання щодо точних деталей інтеграції :mod:`unittest`."

msgid ""
"Similarly, :func:`DocFileSuite` creates a :class:`unittest.TestSuite` out "
"of :class:`doctest.DocFileCase` instances, and :class:`DocFileCase` is a "
"subclass of :class:`DocTestCase`."
msgstr ""
"Так само :func:`DocFileSuite` створює :class:`unittest.TestSuite` з "
"екземплярів :class:`doctest.DocFileCase`, а :class:`DocFileCase` є "
"підкласом :class:`DocTestCase`."

msgid ""
"So both ways of creating a :class:`unittest.TestSuite` run instances of :"
"class:`DocTestCase`.  This is important for a subtle reason: when you run :"
"mod:`doctest` functions yourself, you can control the :mod:`doctest` options "
"in use directly, by passing option flags to :mod:`doctest` functions.  "
"However, if you're writing a :mod:`unittest` framework, :mod:`unittest` "
"ultimately controls when and how tests get run.  The framework author "
"typically wants to control :mod:`doctest` reporting options (perhaps, e.g., "
"specified by command line options), but there's no way to pass options "
"through :mod:`unittest` to :mod:`doctest` test runners."
msgstr ""
"Отже, обидва способи створення :class:`unittest.TestSuite` запускають "
"екземпляри :class:`DocTestCase`. Це важливо з тонкої причини: коли ви "
"самостійно запускаєте функції :mod:`doctest`, ви можете безпосередньо "
"контролювати параметри :mod:`doctest`, які використовуються, передаючи "
"прапорці параметрів функціям :mod:`doctest`. Однак, якщо ви пишете "
"фреймворк :mod:`unittest`, :mod:`unittest` остаточно контролює, коли і як "
"запускати тести. Автор фреймворку зазвичай хоче контролювати параметри "
"звітування :mod:`doctest` (можливо, наприклад, визначені параметрами "
"командного рядка), але немає способу передати параметри через :mod:"
"`unittest` до :mod:`doctest` виконавців тестів ."

msgid ""
"For this reason, :mod:`doctest` also supports a notion of :mod:`doctest` "
"reporting flags specific to :mod:`unittest` support, via this function:"
msgstr ""
"З цієї причини :mod:`doctest` також підтримує поняття прапорів звітності :"
"mod:`doctest`, специфічних для підтримки :mod:`unittest`, через цю функцію:"

msgid "Set the :mod:`doctest` reporting flags to use."
msgstr "Встановіть прапорці звітів :mod:`doctest` для використання."

msgid ""
"Argument *flags* takes the :ref:`bitwise OR <bitwise>` of option flags.  See "
"section :ref:`doctest-options`.  Only \"reporting flags\" can be used."
msgstr ""
"Аргумент *flags* приймає :ref:`побітове АБО <bitwise>` прапорів параметрів. "
"Дивіться розділ :ref:`doctest-options`. Можна використовувати лише \"прапори "
"звітності\"."

msgid ""
"This is a module-global setting, and affects all future doctests run by "
"module :mod:`unittest`:  the :meth:`runTest` method of :class:`DocTestCase` "
"looks at the option flags specified for the test case when the :class:"
"`DocTestCase` instance was constructed.  If no reporting flags were "
"specified (which is the typical and expected case), :mod:`doctest`'s :mod:"
"`unittest` reporting flags are :ref:`bitwise ORed <bitwise>` into the option "
"flags, and the option flags so augmented are passed to the :class:"
"`DocTestRunner` instance created to run the doctest.  If any reporting flags "
"were specified when the :class:`DocTestCase` instance was constructed, :mod:"
"`doctest`'s :mod:`unittest` reporting flags are ignored."
msgstr ""
"Це глобальне налаштування модуля, яке впливає на всі майбутні doctests, "
"запущені модулем :mod:`unittest`: метод :meth:`runTest` :class:`DocTestCase` "
"переглядає позначки параметрів, указані для тестового випадку, коли Створено "
"екземпляр :class:`DocTestCase`. Якщо не було вказано жодних позначок "
"звітування (це типовий і очікуваний випадок), прапорці звітності :mod:"
"`doctest` :mod:`unittest` :ref:`порозрядно об’єднуються АБО <bitwise>` у "
"прапорці опцій, а прапорці опцій тому доповнені передаються до екземпляра :"
"class:`DocTestRunner`, створеного для запуску doctest. Якщо під час "
"створення екземпляра :class:`DocTestCase` було вказано будь-які позначки "
"звітів, прапорці звітів :mod:`doctest` :mod:`unittest` ігноруються."

msgid ""
"The value of the :mod:`unittest` reporting flags in effect before the "
"function was called is returned by the function."
msgstr ""
"Функція повертає значення прапорів звітів :mod:`unittest`, які діяли до "
"виклику функції."

msgid "Advanced API"
msgstr "Розширений API"

msgid ""
"The basic API is a simple wrapper that's intended to make doctest easy to "
"use. It is fairly flexible, and should meet most users' needs; however, if "
"you require more fine-grained control over testing, or wish to extend "
"doctest's capabilities, then you should use the advanced API."
msgstr ""
"Основний API — це проста оболонка, призначена для полегшення використання "
"doctest. Він досить гнучкий і повинен відповідати потребам більшості "
"користувачів; однак, якщо вам потрібен більш детальний контроль над "
"тестуванням або ви бажаєте розширити можливості doctest, тоді вам слід "
"скористатися розширеним API."

msgid ""
"The advanced API revolves around two container classes, which are used to "
"store the interactive examples extracted from doctest cases:"
msgstr ""
"Розширений API обертається навколо двох класів контейнерів, які "
"використовуються для зберігання інтерактивних прикладів, отриманих із "
"випадків doctest:"

msgid ""
":class:`Example`: A single Python :term:`statement`, paired with its "
"expected output."
msgstr ""
":class:`Example`: один :term:`statement` Python у поєднанні з очікуваним "
"результатом."

msgid ""
":class:`DocTest`: A collection of :class:`Example`\\ s, typically extracted "
"from a single docstring or text file."
msgstr ""
":class:`DocTest`: колекція :class:`Example`\\, зазвичай витягнутих з одного "
"рядка документа або текстового файлу."

msgid ""
"Additional processing classes are defined to find, parse, and run, and check "
"doctest examples:"
msgstr ""
"Додаткові класи обробки визначені для пошуку, аналізу та запуску та "
"перевірки прикладів doctest:"

msgid ""
":class:`DocTestFinder`: Finds all docstrings in a given module, and uses a :"
"class:`DocTestParser` to create a :class:`DocTest` from every docstring that "
"contains interactive examples."
msgstr ""
":class:`DocTestFinder`: знаходить усі рядки документів у певному модулі та "
"використовує :class:`DocTestParser` для створення :class:`DocTest` з кожного "
"рядка документів, який містить інтерактивні приклади."

msgid ""
":class:`DocTestParser`: Creates a :class:`DocTest` object from a string "
"(such as an object's docstring)."
msgstr ""
":class:`DocTestParser`: створює об’єкт :class:`DocTest` із рядка (наприклад, "
"рядка документації об’єкта)."

msgid ""
":class:`DocTestRunner`: Executes the examples in a :class:`DocTest`, and "
"uses an :class:`OutputChecker` to verify their output."
msgstr ""
":class:`DocTestRunner`: Виконує приклади в :class:`DocTest` і використовує :"
"class:`OutputChecker` для перевірки їх результату."

msgid ""
":class:`OutputChecker`: Compares the actual output from a doctest example "
"with the expected output, and decides whether they match."
msgstr ""
":class:`OutputChecker`: порівнює фактичні результати прикладу doctest з "
"очікуваними результатами та вирішує, чи вони збігаються."

msgid ""
"The relationships among these processing classes are summarized in the "
"following diagram::"
msgstr "Відносини між цими класами обробки підсумовано на наступній діаграмі:"

msgid "DocTest Objects"
msgstr "Об’єкти DocTest"

msgid ""
"A collection of doctest examples that should be run in a single namespace.  "
"The constructor arguments are used to initialize the attributes of the same "
"names."
msgstr ""
"Набір прикладів doctest, які слід запускати в одному просторі імен. "
"Аргументи конструктора використовуються для ініціалізації однойменних "
"атрибутів."

msgid ""
":class:`DocTest` defines the following attributes.  They are initialized by "
"the constructor, and should not be modified directly."
msgstr ""
":class:`DocTest` визначає такі атрибути. Вони ініціалізуються конструктором "
"і не повинні змінюватися безпосередньо."

msgid ""
"A list of :class:`Example` objects encoding the individual interactive "
"Python examples that should be run by this test."
msgstr ""
"Список об’єктів :class:`Example`, що кодують окремі інтерактивні приклади "
"Python, які мають виконуватися цим тестом."

msgid ""
"The namespace (aka globals) that the examples should be run in. This is a "
"dictionary mapping names to values.  Any changes to the namespace made by "
"the examples (such as binding new variables) will be reflected in :attr:"
"`globs` after the test is run."
msgstr ""
"Простір імен (він же глобальні), у якому слід запускати приклади. Це "
"словник, що зіставляє імена зі значеннями. Будь-які зміни в просторі імен, "
"внесені прикладами (такі як зв’язування нових змінних), будуть відображені "
"в :attr:`globs` після виконання тесту."

msgid ""
"A string name identifying the :class:`DocTest`.  Typically, this is the name "
"of the object or file that the test was extracted from."
msgstr ""
"Ім’я рядка, що ідентифікує :class:`DocTest`. Як правило, це ім'я об'єкта або "
"файлу, з якого було отримано тест."

msgid ""
"The name of the file that this :class:`DocTest` was extracted from; or "
"``None`` if the filename is unknown, or if the :class:`DocTest` was not "
"extracted from a file."
msgstr ""
"Ім'я файлу, з якого було видобуто цей :class:`DocTest`; або ``None``, якщо "
"назва файлу невідома, або якщо :class:`DocTest` не було видобуто з файлу."

msgid ""
"The line number within :attr:`filename` where this :class:`DocTest` begins, "
"or ``None`` if the line number is unavailable.  This line number is zero-"
"based with respect to the beginning of the file."
msgstr ""
"Номер рядка в :attr:`filename`, де починається цей :class:`DocTest`, або "
"``None``, якщо номер рядка недоступний. Цей номер рядка відраховується від "
"нуля відносно початку файлу."

msgid ""
"The string that the test was extracted from, or ``None`` if the string is "
"unavailable, or if the test was not extracted from a string."
msgstr ""
"Рядок, з якого було отримано тест, або ``None``, якщо рядок недоступний, або "
"якщо тест не було вилучено з рядка."

msgid "Example Objects"
msgstr "Приклад об'єктів"

msgid ""
"A single interactive example, consisting of a Python statement and its "
"expected output.  The constructor arguments are used to initialize the "
"attributes of the same names."
msgstr ""
"Єдиний інтерактивний приклад, що складається з оператора Python і його "
"очікуваного результату. Аргументи конструктора використовуються для "
"ініціалізації однойменних атрибутів."

msgid ""
":class:`Example` defines the following attributes.  They are initialized by "
"the constructor, and should not be modified directly."
msgstr ""
":class:`Example` визначає такі атрибути. Вони ініціалізуються конструктором "
"і не повинні змінюватися безпосередньо."

msgid ""
"A string containing the example's source code.  This source code consists of "
"a single Python statement, and always ends with a newline; the constructor "
"adds a newline when necessary."
msgstr ""
"Рядок, що містить вихідний код прикладу. Цей вихідний код складається з "
"одного оператора Python і завжди закінчується символом нового рядка; "
"конструктор додає новий рядок, коли це необхідно."

msgid ""
"The expected output from running the example's source code (either from "
"stdout, or a traceback in case of exception).  :attr:`want` ends with a "
"newline unless no output is expected, in which case it's an empty string.  "
"The constructor adds a newline when necessary."
msgstr ""
"Очікуваний результат запуску вихідного коду прикладу (або зі стандартного "
"виводу, або з відстеження у випадку винятку). :attr:`want` закінчується "
"символом нового рядка, якщо тільки вихід не очікується, у такому випадку це "
"порожній рядок. За потреби конструктор додає новий рядок."

msgid ""
"The exception message generated by the example, if the example is expected "
"to generate an exception; or ``None`` if it is not expected to generate an "
"exception.  This exception message is compared against the return value of :"
"func:`traceback.format_exception_only`.  :attr:`exc_msg` ends with a newline "
"unless it's ``None``.  The constructor adds a newline if needed."
msgstr ""
"Повідомлення про виняток, створене прикладом, якщо очікується, що приклад "
"створить виняток; або ``None``, якщо не очікується створення виняткової "
"ситуації. Це повідомлення про виняток порівнюється зі значенням, що "
"повертається :func:`traceback.format_exception_only`. :attr:`exc_msg` "
"закінчується символом нового рядка, якщо він не ``None``. За потреби "
"конструктор додає новий рядок."

msgid ""
"The line number within the string containing this example where the example "
"begins.  This line number is zero-based with respect to the beginning of the "
"containing string."
msgstr ""
"Номер рядка в рядку, що містить цей приклад, де починається приклад. Цей "
"номер рядка відраховується від нуля відносно початку рядка, що містить."

msgid ""
"The example's indentation in the containing string, i.e., the number of "
"space characters that precede the example's first prompt."
msgstr ""
"Відступ прикладу в рядку, що містить, тобто кількість пробілів, які "
"передують першому запиту прикладу."

msgid ""
"A dictionary mapping from option flags to ``True`` or ``False``, which is "
"used to override default options for this example.  Any option flags not "
"contained in this dictionary are left at their default value (as specified "
"by the :class:`DocTestRunner`'s :attr:`optionflags`). By default, no options "
"are set."
msgstr ""
"Словник зіставляє прапорці параметрів з ``True`` або ``False``, які "
"використовуються для перевизначення параметрів за замовчуванням у цьому "
"прикладі. Будь-які прапорці параметрів, які не містяться в цьому словнику, "
"залишаються за значенням за замовчуванням (як зазначено :attr:`optionflags` :"
"class:`DocTestRunner`). За замовчуванням параметри не встановлено."

msgid "DocTestFinder objects"
msgstr "Об’єкти DocTestFinder"

msgid ""
"A processing class used to extract the :class:`DocTest`\\ s that are "
"relevant to a given object, from its docstring and the docstrings of its "
"contained objects. :class:`DocTest`\\ s can be extracted from modules, "
"classes, functions, methods, staticmethods, classmethods, and properties."
msgstr ""
"Клас обробки, який використовується для вилучення :class:`DocTest`\\ s, які "
"мають відношення до даного об’єкта, з його рядка документації та рядків "
"документації об’єктів, які містяться в ньому. :class:`DocTest`\\ s можна "
"отримати з модулів, класів, функцій, методів, статичних методів, методів "
"класів і властивостей."

msgid ""
"The optional argument *verbose* can be used to display the objects searched "
"by the finder.  It defaults to ``False`` (no output)."
msgstr ""
"Необов'язковий аргумент *verbose* можна використовувати для відображення "
"об'єктів, які шукав шукач. За замовчуванням значення False (без виведення)."

msgid ""
"The optional argument *parser* specifies the :class:`DocTestParser` object "
"(or a drop-in replacement) that is used to extract doctests from docstrings."
msgstr ""
"Необов’язковий аргумент *parser* визначає об’єкт :class:`DocTestParser` (або "
"замінник), який використовується для вилучення тестів документів із рядків "
"документів."

msgid ""
"If the optional argument *recurse* is false, then :meth:`DocTestFinder.find` "
"will only examine the given object, and not any contained objects."
msgstr ""
"Якщо необов’язковий аргумент *recurse* має значення false, тоді :meth:"
"`DocTestFinder.find` перевірятиме лише даний об’єкт, а не будь-які об’єкти, "
"що містяться."

msgid ""
"If the optional argument *exclude_empty* is false, then :meth:`DocTestFinder."
"find` will include tests for objects with empty docstrings."
msgstr ""
"Якщо необов’язковий аргумент *exclude_empty* має значення false, тоді :meth:"
"`DocTestFinder.find` включатиме тести для об’єктів із порожніми рядками "
"документів."

msgid ":class:`DocTestFinder` defines the following method:"
msgstr ":class:`DocTestFinder` визначає такий метод:"

msgid ""
"Return a list of the :class:`DocTest`\\ s that are defined by *obj*'s "
"docstring, or by any of its contained objects' docstrings."
msgstr ""
"Повертає список :class:`DocTest`\\, які визначені рядком документації *obj* "
"або будь-якими рядками документів, що містяться в ньому."

msgid ""
"The optional argument *name* specifies the object's name; this name will be "
"used to construct names for the returned :class:`DocTest`\\ s.  If *name* is "
"not specified, then ``obj.__name__`` is used."
msgstr ""
"Необов'язковий аргумент *name* визначає ім'я об'єкта; це ім’я буде "
"використано для створення імен для повернутих :class:`DocTest`\\ s. Якщо "
"*name* не вказано, тоді використовується ``obj.__name__``."

msgid ""
"The optional parameter *module* is the module that contains the given "
"object. If the module is not specified or is ``None``, then the test finder "
"will attempt to automatically determine the correct module.  The object's "
"module is used:"
msgstr ""
"Необов’язковий параметр *module* — це модуль, який містить заданий об’єкт. "
"Якщо модуль не вказано або має значення ``None``, то засіб пошуку тестів "
"спробує автоматично визначити правильний модуль. Використовується модуль "
"об'єкта:"

msgid "As a default namespace, if *globs* is not specified."
msgstr "Як простір імен за замовчуванням, якщо *globs* не вказано."

msgid ""
"To prevent the DocTestFinder from extracting DocTests from objects that are "
"imported from other modules.  (Contained objects with modules other than "
"*module* are ignored.)"
msgstr ""
"Щоб DocTestFinder не видобував DocTests з об’єктів, імпортованих з інших "
"модулів. (Об’єкти, що містяться з модулями, відмінними від *module*, "
"ігноруються.)"

msgid "To find the name of the file containing the object."
msgstr "Щоб знайти ім'я файлу, що містить об'єкт."

msgid "To help find the line number of the object within its file."
msgstr "Щоб допомогти знайти номер рядка об’єкта в його файлі."

msgid ""
"If *module* is ``False``, no attempt to find the module will be made.  This "
"is obscure, of use mostly in testing doctest itself: if *module* is "
"``False``, or is ``None`` but cannot be found automatically, then all "
"objects are considered to belong to the (non-existent) module, so all "
"contained objects will (recursively) be searched for doctests."
msgstr ""
"Якщо *module* має значення ``False``, спроба знайти модуль не буде зроблена. "
"Це незрозуміло, використовується переважно під час тестування самого "
"doctest: якщо *module* має значення ``False`` або ``None``, але не може бути "
"знайдено автоматично, тоді всі об’єкти вважаються такими, що належать до "
"(неіснуючого) модуль, тому всі об’єкти, що містяться, будуть (рекурсивно) "
"шукатися для тестів документів."

msgid ""
"The globals for each :class:`DocTest` is formed by combining *globs* and "
"*extraglobs* (bindings in *extraglobs* override bindings in *globs*).  A new "
"shallow copy of the globals dictionary is created for each :class:`DocTest`. "
"If *globs* is not specified, then it defaults to the module's *__dict__*, if "
"specified, or ``{}`` otherwise.  If *extraglobs* is not specified, then it "
"defaults to ``{}``."
msgstr ""
"Глобальні значення для кожного :class:`DocTest` утворюються шляхом "
"об’єднання *globs* і *extraglobs* (прив’язки в *extraglobs* замінюють "
"прив’язки в *globs*). Для кожного :class:`DocTest` створюється нова копія "
"глобального словника. Якщо *globs* не вказано, тоді за замовчуванням "
"використовується *__dict__* модуля, якщо вказано, або ``{}`` інакше. Якщо "
"*extraglobs* не вказано, то за замовчуванням буде ``{}``."

msgid "DocTestParser objects"
msgstr "Об’єкти DocTestParser"

msgid ""
"A processing class used to extract interactive examples from a string, and "
"use them to create a :class:`DocTest` object."
msgstr ""
"Клас обробки, який використовується для отримання інтерактивних прикладів із "
"рядка та використання їх для створення об’єкта :class:`DocTest`."

msgid ":class:`DocTestParser` defines the following methods:"
msgstr ":class:`DocTestParser` визначає такі методи:"

msgid ""
"Extract all doctest examples from the given string, and collect them into a :"
"class:`DocTest` object."
msgstr ""
"Витягніть усі приклади doctest із заданого рядка та зберіть їх у об’єкт :"
"class:`DocTest`."

msgid ""
"*globs*, *name*, *filename*, and *lineno* are attributes for the new :class:"
"`DocTest` object.  See the documentation for :class:`DocTest` for more "
"information."
msgstr ""
"*globs*, *name*, *filename* і *lineno* є атрибутами для нового об’єкта :"
"class:`DocTest`. Перегляньте документацію для :class:`DocTest` для отримання "
"додаткової інформації."

msgid ""
"Extract all doctest examples from the given string, and return them as a "
"list of :class:`Example` objects.  Line numbers are 0-based.  The optional "
"argument *name* is a name identifying this string, and is only used for "
"error messages."
msgstr ""
"Витягніть усі приклади doctest із заданого рядка та поверніть їх як список "
"об’єктів :class:`Example`. Номери рядків базуються на 0. Необов’язковий "
"аргумент *ім’я* – це ім’я, що ідентифікує цей рядок і використовується лише "
"для повідомлень про помилки."

msgid ""
"Divide the given string into examples and intervening text, and return them "
"as a list of alternating :class:`Example`\\ s and strings. Line numbers for "
"the :class:`Example`\\ s are 0-based.  The optional argument *name* is a "
"name identifying this string, and is only used for error messages."
msgstr ""
"Розділіть заданий рядок на приклади та проміжний текст і поверніть їх як "
"список чергування :class:`Example`\\ і рядків. Номери рядків для :class:"
"`Example`\\ s засновані на 0. Необов’язковий аргумент *ім’я* – це ім’я, що "
"ідентифікує цей рядок і використовується лише для повідомлень про помилки."

msgid "DocTestRunner objects"
msgstr "Об’єкти DocTestRunner"

msgid ""
"A processing class used to execute and verify the interactive examples in a :"
"class:`DocTest`."
msgstr ""
"Клас обробки, який використовується для виконання та перевірки інтерактивних "
"прикладів у :class:`DocTest`."

msgid ""
"The comparison between expected outputs and actual outputs is done by an :"
"class:`OutputChecker`.  This comparison may be customized with a number of "
"option flags; see section :ref:`doctest-options` for more information.  If "
"the option flags are insufficient, then the comparison may also be "
"customized by passing a subclass of :class:`OutputChecker` to the "
"constructor."
msgstr ""
"Порівняння очікуваних і фактичних результатів виконується за допомогою :"
"class:`OutputChecker`. Це порівняння можна налаштувати за допомогою кількох "
"позначок параметрів; дивіться розділ :ref:`doctest-options` для отримання "
"додаткової інформації. Якщо прапорців параметрів недостатньо, порівняння "
"також можна налаштувати, передавши підклас :class:`OutputChecker` до "
"конструктора."

msgid ""
"The test runner's display output can be controlled in two ways. First, an "
"output function can be passed to :meth:`TestRunner.run`; this function will "
"be called with strings that should be displayed.  It defaults to ``sys."
"stdout.write``.  If capturing the output is not sufficient, then the display "
"output can be also customized by subclassing DocTestRunner, and overriding "
"the methods :meth:`report_start`, :meth:`report_success`, :meth:"
"`report_unexpected_exception`, and :meth:`report_failure`."
msgstr ""
"Виведенням дисплея тестового бігуна можна керувати двома способами. По-"
"перше, функцію виведення можна передати в :meth:`TestRunner.run`; ця функція "
"буде викликана з рядками, які повинні бути відображені. За замовчуванням має "
"значення ``sys.stdout.write``. Якщо захоплення виводу недостатньо, тоді "
"вивід відображення також можна налаштувати шляхом створення підкласу "
"DocTestRunner і перевизначення методів :meth:`report_start`, :meth:"
"`report_success`, :meth:`report_unexpected_exception` і :meth:`звіт_про "
"помилку`."

msgid ""
"The optional keyword argument *checker* specifies the :class:`OutputChecker` "
"object (or drop-in replacement) that should be used to compare the expected "
"outputs to the actual outputs of doctest examples."
msgstr ""
"Необов’язковий аргумент ключового слова *checker* визначає об’єкт :class:"
"`OutputChecker` (або додаткову заміну), який слід використовувати для "
"порівняння очікуваних результатів із фактичними результатами прикладів "
"doctest."

msgid ""
"The optional keyword argument *verbose* controls the :class:"
"`DocTestRunner`'s verbosity.  If *verbose* is ``True``, then information is "
"printed about each example, as it is run.  If *verbose* is ``False``, then "
"only failures are printed.  If *verbose* is unspecified, or ``None``, then "
"verbose output is used iff the command-line switch ``-v`` is used."
msgstr ""
"Додатковий аргумент ключового слова *verbose* контролює докладність :class:"
"`DocTestRunner`. Якщо *verbose* має значення ``True``, тоді друкується "
"інформація про кожен приклад під час його виконання. Якщо *verbose* має "
"значення ``False``, друкуються лише помилки. Якщо *verbose* не вказано або "
"``None``, тоді використовується докладний вивід, якщо використовується "
"параметр командного рядка ``-v``."

msgid ""
"The optional keyword argument *optionflags* can be used to control how the "
"test runner compares expected output to actual output, and how it displays "
"failures. For more information, see section :ref:`doctest-options`."
msgstr ""
"Необов’язковий аргумент ключового слова *optionflags* можна використовувати "
"для керування тим, як програма виконання тестів порівнює очікуваний "
"результат із фактичним результатом і як він відображає помилки. Для "
"отримання додаткової інформації див. розділ :ref:`doctest-options`."

msgid ""
"Report that the test runner is about to process the given example. This "
"method is provided to allow subclasses of :class:`DocTestRunner` to "
"customize their output; it should not be called directly."
msgstr ""
"Повідомте, що тестувальник збирається обробити наведений приклад. Цей метод "
"надається, щоб дозволити підкласам :class:`DocTestRunner` налаштовувати свій "
"вихід; його не слід називати безпосередньо."

msgid ""
"*example* is the example about to be processed.  *test* is the test "
"*containing example*.  *out* is the output function that was passed to :meth:"
"`DocTestRunner.run`."
msgstr ""
"*приклад* — це приклад, який буде оброблено. *тест* — це тест, який *містить "
"приклад*. *out* — це функція виводу, яка була передана в :meth:"
"`DocTestRunner.run`."

msgid ""
"Report that the given example ran successfully.  This method is provided to "
"allow subclasses of :class:`DocTestRunner` to customize their output; it "
"should not be called directly."
msgstr ""
"Повідомте, що наведений приклад виконано успішно. Цей метод надається, щоб "
"дозволити підкласам :class:`DocTestRunner` налаштовувати свій вихід; його не "
"слід називати безпосередньо."

msgid ""
"*example* is the example about to be processed.  *got* is the actual output "
"from the example.  *test* is the test containing *example*.  *out* is the "
"output function that was passed to :meth:`DocTestRunner.run`."
msgstr ""
"*приклад* — це приклад, який буде оброблено. *got* — фактичний вихід із "
"прикладу. *тест* — це тест, що містить *приклад*. *out* — це функція виводу, "
"яка була передана в :meth:`DocTestRunner.run`."

msgid ""
"Report that the given example failed.  This method is provided to allow "
"subclasses of :class:`DocTestRunner` to customize their output; it should "
"not be called directly."
msgstr ""
"Повідомте, що наведений приклад не вдався. Цей метод надається, щоб "
"дозволити підкласам :class:`DocTestRunner` налаштовувати свій вихід; його не "
"слід називати безпосередньо."

msgid ""
"Report that the given example raised an unexpected exception. This method is "
"provided to allow subclasses of :class:`DocTestRunner` to customize their "
"output; it should not be called directly."
msgstr ""
"Повідомте, що наведений приклад викликав несподіваний виняток. Цей метод "
"надається, щоб дозволити підкласам :class:`DocTestRunner` налаштовувати свій "
"вихід; його не слід називати безпосередньо."

msgid ""
"*example* is the example about to be processed. *exc_info* is a tuple "
"containing information about the unexpected exception (as returned by :func:"
"`sys.exc_info`). *test* is the test containing *example*.  *out* is the "
"output function that was passed to :meth:`DocTestRunner.run`."
msgstr ""
"*приклад* — це приклад, який буде оброблено. *exc_info* — це кортеж, що "
"містить інформацію про неочікуваний виняток (як повертає :func:`sys."
"exc_info`). *тест* — це тест, що містить *приклад*. *out* — це функція "
"виводу, яка була передана в :meth:`DocTestRunner.run`."

msgid ""
"Run the examples in *test* (a :class:`DocTest` object), and display the "
"results using the writer function *out*."
msgstr ""
"Запустіть приклади в *test* (об’єкт :class:`DocTest`) і відобразіть "
"результати за допомогою функції запису *out*."

msgid ""
"The examples are run in the namespace ``test.globs``.  If *clear_globs* is "
"true (the default), then this namespace will be cleared after the test runs, "
"to help with garbage collection. If you would like to examine the namespace "
"after the test completes, then use *clear_globs=False*."
msgstr ""
"Приклади запускаються в просторі імен ``test.globs``. Якщо *clear_globs* має "
"значення true (за замовчуванням), цей простір імен буде очищено після "
"виконання тесту, щоб допомогти зі збиранням сміття. Якщо ви хочете "
"перевірити простір імен після завершення тесту, використовуйте "
"*clear_globs=False*."

msgid ""
"*compileflags* gives the set of flags that should be used by the Python "
"compiler when running the examples.  If not specified, then it will default "
"to the set of future-import flags that apply to *globs*."
msgstr ""
"*compileflags* надає набір прапорів, які має використовувати компілятор "
"Python під час виконання прикладів. Якщо не вказано, за замовчуванням "
"використовуватиметься набір прапорів майбутнього імпорту, які застосовуються "
"до *globs*."

msgid ""
"The output of each example is checked using the :class:`DocTestRunner`'s "
"output checker, and the results are formatted by the :meth:`DocTestRunner."
"report_\\*` methods."
msgstr ""
"Результати кожного прикладу перевіряються за допомогою засобу перевірки "
"виводу :class:`DocTestRunner`, а результати форматуються методами :meth:"
"`DocTestRunner.report_\\*`."

msgid ""
"Print a summary of all the test cases that have been run by this "
"DocTestRunner, and return a :term:`named tuple` ``TestResults(failed, "
"attempted)``."
msgstr ""
"Надрукуйте підсумок усіх тестів, які були запущені цим DocTestRunner, і "
"поверніть :term:`named tuple` ``TestResults(failed, attempted)``."

msgid ""
"The optional *verbose* argument controls how detailed the summary is.  If "
"the verbosity is not specified, then the :class:`DocTestRunner`'s verbosity "
"is used."
msgstr ""
"Необов’язковий аргумент *verbose* контролює, наскільки детальним є резюме. "
"Якщо детальність не вказана, тоді використовується детальність :class:"
"`DocTestRunner`."

msgid "OutputChecker objects"
msgstr "Об'єкти OutputChecker"

msgid ""
"A class used to check the whether the actual output from a doctest example "
"matches the expected output.  :class:`OutputChecker` defines two methods: :"
"meth:`check_output`, which compares a given pair of outputs, and returns "
"``True`` if they match; and :meth:`output_difference`, which returns a "
"string describing the differences between two outputs."
msgstr ""
"Клас, який використовується для перевірки того, чи фактичний результат із "
"прикладу doctest відповідає очікуваному результату. :class:`OutputChecker` "
"визначає два методи: :meth:`check_output`, який порівнює задану пару виходів "
"і повертає ``True``, якщо вони збігаються; і :meth:`output_difference`, який "
"повертає рядок, що описує різницю між двома результатами."

msgid ":class:`OutputChecker` defines the following methods:"
msgstr ":class:`OutputChecker` визначає такі методи:"

msgid ""
"Return ``True`` iff the actual output from an example (*got*) matches the "
"expected output (*want*).  These strings are always considered to match if "
"they are identical; but depending on what option flags the test runner is "
"using, several non-exact match types are also possible.  See section :ref:"
"`doctest-options` for more information about option flags."
msgstr ""
"Повертає ``True``, якщо фактичний результат із прикладу (*got*) відповідає "
"очікуваному результату (*want*). Ці рядки завжди вважаються такими, що "
"збігаються, якщо вони ідентичні; але залежно від того, які прапорці "
"параметрів використовує програма виконання тестів, також можливі кілька "
"типів неточної відповідності. Перегляньте розділ :ref:`doctest-options` для "
"отримання додаткової інформації про прапорці параметрів."

msgid ""
"Return a string describing the differences between the expected output for a "
"given example (*example*) and the actual output (*got*).  *optionflags* is "
"the set of option flags used to compare *want* and *got*."
msgstr ""
"Повертає рядок, що описує відмінності між очікуваним виходом для даного "
"прикладу (*example*) і фактичним виходом (*got*). *optionflags* — це набір "
"позначок параметрів, які використовуються для порівняння *want* і *got*."

msgid "Debugging"
msgstr "Налагодження"

msgid "Doctest provides several mechanisms for debugging doctest examples:"
msgstr "Doctest надає кілька механізмів для налагодження прикладів doctest:"

msgid ""
"Several functions convert doctests to executable Python programs, which can "
"be run under the Python debugger, :mod:`pdb`."
msgstr ""
"Декілька функцій перетворюють doctests на виконувані програми Python, які "
"можна запускати в налагоджувачі Python, :mod:`pdb`."

msgid ""
"The :class:`DebugRunner` class is a subclass of :class:`DocTestRunner` that "
"raises an exception for the first failing example, containing information "
"about that example. This information can be used to perform post-mortem "
"debugging on the example."
msgstr ""
"Клас :class:`DebugRunner` є підкласом :class:`DocTestRunner`, який створює "
"виняток для першого невдалого прикладу, що містить інформацію про цей "
"приклад. Ця інформація може бути використана для виконання посмертного "
"налагодження на прикладі."

msgid ""
"The :mod:`unittest` cases generated by :func:`DocTestSuite` support the :"
"meth:`debug` method defined by :class:`unittest.TestCase`."
msgstr ""
"Випадки :mod:`unittest`, згенеровані :func:`DocTestSuite`, підтримують "
"метод :meth:`debug`, визначений :class:`unittest.TestCase`."

msgid ""
"You can add a call to :func:`pdb.set_trace` in a doctest example, and you'll "
"drop into the Python debugger when that line is executed.  Then you can "
"inspect current values of variables, and so on.  For example, suppose :file:"
"`a.py` contains just this module docstring::"
msgstr ""
"Ви можете додати виклик до :func:`pdb.set_trace` у прикладі doctest, і ви "
"перейдете до налагоджувача Python, коли цей рядок буде виконано. Потім ви "
"можете перевірити поточні значення змінних і так далі. Наприклад, "
"припустимо, що :file:`a.py` містить лише цей модуль docstring::"

msgid "Then an interactive Python session may look like this::"
msgstr "Тоді інтерактивний сеанс Python може виглядати так:"

msgid ""
"Functions that convert doctests to Python code, and possibly run the "
"synthesized code under the debugger:"
msgstr ""
"Функції, які перетворюють doctests на код Python і, можливо, запускають "
"синтезований код під налагоджувачем:"

msgid "Convert text with examples to a script."
msgstr "Перетворення тексту з прикладами на сценарій."

msgid ""
"Argument *s* is a string containing doctest examples.  The string is "
"converted to a Python script, where doctest examples in *s* are converted to "
"regular code, and everything else is converted to Python comments.  The "
"generated script is returned as a string. For example, ::"
msgstr ""
"Аргумент *s* — це рядок, що містить приклади doctest. Рядок перетворюється "
"на сценарій Python, де приклади doctest у *s* перетворюються на звичайний "
"код, а все інше перетворюється на коментарі Python. Згенерований сценарій "
"повертається як рядок. Наприклад, ::"

msgid "displays::"
msgstr "дисплеї::"

msgid ""
"This function is used internally by other functions (see below), but can "
"also be useful when you want to transform an interactive Python session into "
"a Python script."
msgstr ""
"Ця функція використовується внутрішньо іншими функціями (див. нижче), але "
"також може бути корисною, коли ви хочете перетворити інтерактивний сеанс "
"Python на сценарій Python."

msgid "Convert the doctest for an object to a script."
msgstr "Перетворення doctest для об’єкта на сценарій."

msgid ""
"Argument *module* is a module object, or dotted name of a module, containing "
"the object whose doctests are of interest.  Argument *name* is the name "
"(within the module) of the object with the doctests of interest.  The result "
"is a string, containing the object's docstring converted to a Python script, "
"as described for :func:`script_from_examples` above.  For example, if "
"module :file:`a.py` contains a top-level function :func:`f`, then ::"
msgstr ""
"Аргумент *module* — це об’єкт модуля або ім’я модуля з крапками, що містить "
"об’єкт, чиї документи представляють інтерес. Аргумент *ім’я* — це ім’я (в "
"межах модуля) об’єкта з цікавими документами. Результатом є рядок, що "
"містить документацію об’єкта, перетворену на сценарій Python, як описано "
"для :func:`script_from_examples` вище. Наприклад, якщо модуль :file:`a.py` "
"містить функцію верхнього рівня :func:`f`, тоді ::"

msgid ""
"prints a script version of function :func:`f`'s docstring, with doctests "
"converted to code, and the rest placed in comments."
msgstr ""
"друкує версію сценарію рядка документації функції :func:`f` із тестами "
"документів, перетвореними на код, а решту розміщує в коментарях."

msgid "Debug the doctests for an object."
msgstr "Налагодження документів для об’єкта."

msgid ""
"The *module* and *name* arguments are the same as for function :func:"
"`testsource` above.  The synthesized Python script for the named object's "
"docstring is written to a temporary file, and then that file is run under "
"the control of the Python debugger, :mod:`pdb`."
msgstr ""
"Аргументи *module* і *name* такі самі, як і для функції :func:`testsource` "
"вище. Синтезований сценарій Python для рядка документації названого об’єкта "
"записується у тимчасовий файл, а потім цей файл запускається під керуванням "
"налагоджувача Python, :mod:`pdb`."

msgid ""
"A shallow copy of ``module.__dict__`` is used for both local and global "
"execution context."
msgstr ""
"Поверхнева копія ``module.__dict__`` використовується як для локального, так "
"і для глобального контексту виконання."

msgid ""
"Optional argument *pm* controls whether post-mortem debugging is used.  If "
"*pm* has a true value, the script file is run directly, and the debugger "
"gets involved only if the script terminates via raising an unhandled "
"exception.  If it does, then post-mortem debugging is invoked, via :func:"
"`pdb.post_mortem`, passing the traceback object from the unhandled "
"exception.  If *pm* is not specified, or is false, the script is run under "
"the debugger from the start, via passing an appropriate :func:`exec` call "
"to :func:`pdb.run`."
msgstr ""
"Додатковий аргумент *pm* визначає, чи використовується посмертне "
"налагодження. Якщо *pm* має значення true, файл сценарію запускається "
"безпосередньо, і налагоджувач бере участь лише в тому випадку, якщо сценарій "
"завершується через виклик необробленого винятку. Якщо це так, то через :func:"
"`pdb.post_mortem` викликається посмертне налагодження, передаючи об’єкт "
"трасування з необробленого винятку. Якщо *pm* не вказано або має значення "
"false, сценарій запускається під налагоджувачем із самого початку, шляхом "
"передачі відповідного виклику :func:`exec` до :func:`pdb.run`."

msgid "Debug the doctests in a string."
msgstr "Налагодити doctests у рядку."

msgid ""
"This is like function :func:`debug` above, except that a string containing "
"doctest examples is specified directly, via the *src* argument."
msgstr ""
"Це схоже на функцію :func:`debug` вище, за винятком того, що рядок, що "
"містить приклади doctest, вказується безпосередньо через аргумент *src*."

msgid ""
"Optional argument *pm* has the same meaning as in function :func:`debug` "
"above."
msgstr ""
"Необов’язковий аргумент *pm* має те саме значення, що й у функції :func:"
"`debug` вище."

msgid ""
"Optional argument *globs* gives a dictionary to use as both local and global "
"execution context.  If not specified, or ``None``, an empty dictionary is "
"used. If specified, a shallow copy of the dictionary is used."
msgstr ""
"Необов’язковий аргумент *globs* надає словник для використання як "
"локального, так і глобального контексту виконання. Якщо не вказано або "
"``None``, використовується порожній словник. Якщо вказано, використовується "
"неглибока копія словника."

msgid ""
"The :class:`DebugRunner` class, and the special exceptions it may raise, are "
"of most interest to testing framework authors, and will only be sketched "
"here.  See the source code, and especially :class:`DebugRunner`'s docstring "
"(which is a doctest!) for more details:"
msgstr ""
"Клас :class:`DebugRunner` і спеціальні винятки, які він може спричинити, "
"представляють найбільший інтерес для авторів фреймворку тестування, і тут "
"буде лише схематично описано. Перегляньте вихідний код, а особливо рядок "
"документації :class:`DebugRunner` (який є тестом документів!) для отримання "
"додаткової інформації:"

msgid ""
"A subclass of :class:`DocTestRunner` that raises an exception as soon as a "
"failure is encountered.  If an unexpected exception occurs, an :exc:"
"`UnexpectedException` exception is raised, containing the test, the example, "
"and the original exception.  If the output doesn't match, then a :exc:"
"`DocTestFailure` exception is raised, containing the test, the example, and "
"the actual output."
msgstr ""
"Підклас :class:`DocTestRunner`, який викликає виняток, щойно виникає "
"помилка. Якщо виникає неочікуваний виняток, виникає виняток :exc:"
"`UnexpectedException`, який містить тест, приклад і оригінальний виняток. "
"Якщо вихідні дані не збігаються, то виникає виняток :exc:`DocTestFailure`, "
"який містить тест, приклад і фактичний результат."

msgid ""
"For information about the constructor parameters and methods, see the "
"documentation for :class:`DocTestRunner` in section :ref:`doctest-advanced-"
"api`."
msgstr ""
"Щоб отримати інформацію про параметри та методи конструктора, перегляньте "
"документацію для :class:`DocTestRunner` у розділі :ref:`doctest-advanced-"
"api`."

msgid ""
"There are two exceptions that may be raised by :class:`DebugRunner` "
"instances:"
msgstr ""
"Є два винятки, які можуть бути викликані екземплярами :class:`DebugRunner`:"

msgid ""
"An exception raised by :class:`DocTestRunner` to signal that a doctest "
"example's actual output did not match its expected output. The constructor "
"arguments are used to initialize the attributes of the same names."
msgstr ""
"Виняток, викликаний :class:`DocTestRunner`, щоб повідомити, що фактичний "
"вихід прикладу doctest не збігається з його очікуваним результатом. "
"Аргументи конструктора використовуються для ініціалізації однойменних "
"атрибутів."

msgid ":exc:`DocTestFailure` defines the following attributes:"
msgstr ":exc:`DocTestFailure` визначає такі атрибути:"

msgid "The :class:`DocTest` object that was being run when the example failed."
msgstr "Об’єкт :class:`DocTest`, який запускався під час помилки прикладу."

msgid "The :class:`Example` that failed."
msgstr "Невдалий :class:`Example`."

msgid "The example's actual output."
msgstr "Фактичний результат прикладу."

msgid ""
"An exception raised by :class:`DocTestRunner` to signal that a doctest "
"example raised an unexpected exception.  The constructor arguments are used "
"to initialize the attributes of the same names."
msgstr ""
"Виняток, викликаний :class:`DocTestRunner`, щоб сигналізувати про те, що "
"приклад doctest викликав неочікуваний виняток. Аргументи конструктора "
"використовуються для ініціалізації однойменних атрибутів."

msgid ":exc:`UnexpectedException` defines the following attributes:"
msgstr ":exc:`UnexpectedException` визначає такі атрибути:"

msgid ""
"A tuple containing information about the unexpected exception, as returned "
"by :func:`sys.exc_info`."
msgstr ""
"Кортеж, що містить інформацію про неочікуваний виняток, яку повертає :func:"
"`sys.exc_info`."

msgid "Soapbox"
msgstr "Мильниця"

msgid ""
"As mentioned in the introduction, :mod:`doctest` has grown to have three "
"primary uses:"
msgstr ""
"Як згадувалося у вступі, :mod:`doctest` зріс до трьох основних застосувань:"

msgid "Checking examples in docstrings."
msgstr "Перевірка прикладів у рядках документів."

msgid "Regression testing."
msgstr "Регресійне тестування."

msgid "Executable documentation / literate testing."
msgstr "Виконувана документація / грамотне тестування."

msgid ""
"These uses have different requirements, and it is important to distinguish "
"them. In particular, filling your docstrings with obscure test cases makes "
"for bad documentation."
msgstr ""
"Ці види використання мають різні вимоги, і їх важливо розрізняти. Зокрема, "
"заповнення ваших рядків документації незрозумілими тестовими прикладами "
"створює погану документацію."

msgid ""
"When writing a docstring, choose docstring examples with care. There's an "
"art to this that needs to be learned---it may not be natural at first.  "
"Examples should add genuine value to the documentation.  A good example can "
"often be worth many words. If done with care, the examples will be "
"invaluable for your users, and will pay back the time it takes to collect "
"them many times over as the years go by and things change.  I'm still amazed "
"at how often one of my :mod:`doctest` examples stops working after a "
"\"harmless\" change."
msgstr ""
"Під час написання документаційного рядка обережно вибирайте приклади "
"документаційного рядка. У цьому є певне мистецтво, якому потрібно навчитися "
"--- спочатку це може бути неприродним. Приклади повинні додати справжню "
"цінність документації. Хороший приклад часто вартий багатьох слів. Якщо їх "
"робити обережно, приклади будуть безцінні для ваших користувачів і "
"багаторазово окуплять час, потрачений на їх збирання, оскільки роки йдуть і "
"все змінюється. Мене все ще дивує, як часто один із моїх прикладів :mod:"
"`doctest` перестає працювати після \"нешкідливої\" зміни."

msgid ""
"Doctest also makes an excellent tool for regression testing, especially if "
"you don't skimp on explanatory text.  By interleaving prose and examples, it "
"becomes much easier to keep track of what's actually being tested, and why.  "
"When a test fails, good prose can make it much easier to figure out what the "
"problem is, and how it should be fixed.  It's true that you could write "
"extensive comments in code-based testing, but few programmers do. Many have "
"found that using doctest approaches instead leads to much clearer tests.  "
"Perhaps this is simply because doctest makes writing prose a little easier "
"than writing code, while writing comments in code is a little harder.  I "
"think it goes deeper than just that: the natural attitude when writing a "
"doctest-based test is that you want to explain the fine points of your "
"software, and illustrate them with examples. This in turn naturally leads to "
"test files that start with the simplest features, and logically progress to "
"complications and edge cases.  A coherent narrative is the result, instead "
"of a collection of isolated functions that test isolated bits of "
"functionality seemingly at random.  It's a different attitude, and produces "
"different results, blurring the distinction between testing and explaining."
msgstr ""
"Doctest також є чудовим інструментом для регресійного тестування, особливо "
"якщо ви не економите на пояснювальному тексті. Перемежовуючи прозу та "
"приклади, стає набагато легше відслідковувати, що насправді перевіряється та "
"чому. Якщо тест провалився, хороша проза може значно полегшити з’ясування "
"проблеми та способи її вирішення. Це правда, що ви можете писати розгорнуті "
"коментарі під час тестування на основі коду, але мало хто з програмістів це "
"робить. Багато хто виявив, що використання підходів doctest натомість "
"призводить до набагато чіткіших тестів. Можливо, це просто тому, що doctest "
"робить написання прози трохи легшим, ніж написання коду, тоді як писати "
"коментарі в коді трохи складніше. Я думаю, що це глибше, ніж просто це: "
"природне ставлення до написання тесту на основі doctest полягає в тому, що "
"ви хочете пояснити тонкощі свого програмного забезпечення та проілюструвати "
"їх прикладами. Це, у свою чергу, природним чином призводить до тестових "
"файлів, які починаються з найпростіших функцій і логічно прогресують до "
"ускладнень і крайніх випадків. Результатом є послідовна розповідь, а не "
"набір ізольованих функцій, які перевіряють окремі фрагменти "
"функціональності, здавалося б, випадковим чином. Це інше ставлення, яке дає "
"інші результати, стираючи різницю між тестуванням і поясненням."

msgid ""
"Regression testing is best confined to dedicated objects or files.  There "
"are several options for organizing tests:"
msgstr ""
"Регресійне тестування найкраще обмежити виділеними об’єктами або файлами. Є "
"кілька варіантів організації тестів:"

msgid ""
"Write text files containing test cases as interactive examples, and test the "
"files using :func:`testfile` or :func:`DocFileSuite`.  This is recommended, "
"although is easiest to do for new projects, designed from the start to use "
"doctest."
msgstr ""
"Напишіть текстові файли, що містять тестові приклади як інтерактивні "
"приклади, і протестуйте файли за допомогою :func:`testfile` або :func:"
"`DocFileSuite`. Це рекомендовано, хоча це найлегше зробити для нових "
"проектів, розроблених із самого початку для використання doctest."

msgid ""
"Define functions named ``_regrtest_topic`` that consist of single "
"docstrings, containing test cases for the named topics.  These functions can "
"be included in the same file as the module, or separated out into a separate "
"test file."
msgstr ""
"Визначте функції під назвою ``_regrtest_topic``, які складаються з окремих "
"рядків документів, що містять тестові випадки для названих тем. Ці функції "
"можна включити в той самий файл, що й модуль, або відокремити в окремий "
"тестовий файл."

msgid ""
"Define a ``__test__`` dictionary mapping from regression test topics to "
"docstrings containing test cases."
msgstr ""
"Визначте зіставлення словника ``__test__`` із тем регресійних тестів на "
"рядки документів, що містять тестові приклади."

msgid ""
"When you have placed your tests in a module, the module can itself be the "
"test runner.  When a test fails, you can arrange for your test runner to re-"
"run only the failing doctest while you debug the problem.  Here is a minimal "
"example of such a test runner::"
msgstr ""
"Якщо ви розмістили свої тести в модулі, модуль сам може бути виконавцем "
"тестів. Коли тест виходить невдалим, ви можете організувати повторний запуск "
"лише невдалого документу, поки ви вирішуєте проблему. Ось мінімальний "
"приклад такого тесту:"

msgid "Footnotes"
msgstr "Виноски"

msgid ""
"Examples containing both expected output and an exception are not supported. "
"Trying to guess where one ends and the other begins is too error-prone, and "
"that also makes for a confusing test."
msgstr ""
"Приклади, що містять як очікуваний результат, так і виняток, не "
"підтримуються. Спроба вгадати, де закінчується один і починається інший, "
"занадто схильна до помилок, і це також створює заплутаний тест."
