# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 01:09+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid ":mod:`marshal` --- Internal Python object serialization"
msgstr ":mod:`marshal` --- Внутрішня серіалізація об'єктів Python"

msgid ""
"This module contains functions that can read and write Python values in a "
"binary format.  The format is specific to Python, but independent of machine "
"architecture issues (e.g., you can write a Python value to a file on a PC, "
"transport the file to a Sun, and read it back there).  Details of the format "
"are undocumented on purpose; it may change between Python versions (although "
"it rarely does). [#]_"
msgstr ""
"Цей модуль містить функції, які можуть читати та записувати значення Python "
"у двійковому форматі. Формат є специфічним для Python, але не залежить від "
"проблем архітектури машини (наприклад, ви можете записати значення Python у "
"файл на ПК, перенести файл на Sun і прочитати його там). Деталі формату "
"навмисно недокументовані; він може змінюватися між версіями Python (хоча це "
"відбувається рідко). [#]_"

msgid ""
"This is not a general \"persistence\" module.  For general persistence and "
"transfer of Python objects through RPC calls, see the modules :mod:`pickle` "
"and :mod:`shelve`.  The :mod:`marshal` module exists mainly to support "
"reading and writing the \"pseudo-compiled\" code for Python modules of :file:"
"`.pyc` files. Therefore, the Python maintainers reserve the right to modify "
"the marshal format in backward incompatible ways should the need arise.  If "
"you're serializing and de-serializing Python objects, use the :mod:`pickle` "
"module instead -- the performance is comparable, version independence is "
"guaranteed, and pickle supports a substantially wider range of objects than "
"marshal."
msgstr ""
"Це не загальний модуль \"постійності\". Для загального збереження та "
"передачі об’єктів Python через виклики RPC див. модулі :mod:`pickle` і :mod:"
"`shelve`. Модуль :mod:`marshal` існує головним чином для підтримки читання "
"та запису \"псевдокомпільованого\" коду для модулів Python файлів :file:`."
"pyc`. Тому супроводжувачі Python залишають за собою право змінювати формат "
"маршалу зворотно несумісними способами, якщо виникне така потреба. Якщо ви "
"серіалізуєте та десеріалізуєте об’єкти Python, використовуйте натомість "
"модуль :mod:`pickle` — продуктивність порівнянна, незалежність версії "
"гарантована, а pickle підтримує значно ширший діапазон об’єктів, ніж marshal."

msgid ""
"The :mod:`marshal` module is not intended to be secure against erroneous or "
"maliciously constructed data.  Never unmarshal data received from an "
"untrusted or unauthenticated source."
msgstr ""
"Модуль :mod:`marshal` не призначений для захисту від помилкових або "
"зловмисно створених даних. Ніколи не скасовуйте дані, отримані з ненадійного "
"або неавтентифікованого джерела."

msgid ""
"Not all Python object types are supported; in general, only objects whose "
"value is independent from a particular invocation of Python can be written "
"and read by this module.  The following types are supported: booleans, "
"integers, floating point numbers, complex numbers, strings, bytes, "
"bytearrays, tuples, lists, sets, frozensets, dictionaries, and code objects, "
"where it should be understood that tuples, lists, sets, frozensets and "
"dictionaries are only supported as long as the values contained therein are "
"themselves supported.  The singletons :const:`None`, :const:`Ellipsis` and :"
"exc:`StopIteration` can also be marshalled and unmarshalled. For format "
"*version* lower than 3, recursive lists, sets and dictionaries cannot be "
"written (see below)."
msgstr ""
"Підтримуються не всі типи об’єктів Python; загалом, тільки ті об’єкти, чиє "
"значення не залежить від конкретного виклику Python, можуть бути записані та "
"прочитані цим модулем. Підтримуються такі типи: логічні значення, цілі "
"числа, числа з плаваючою комою, комплексні числа, рядки, байти, байтові "
"масиви, кортежі, списки, набори, заморожені набори, словники та об’єкти "
"коду, де слід розуміти, що кортежі, списки, набори, заморожені набори і "
"словники підтримуються лише до тих пір, поки підтримуються самі значення, "
"які в них містяться. Синглтони :const:`None`, :const:`Ellipsis` і :exc:"
"`StopIteration` також можуть бути маршалізованими та немаршалізованими. Для "
"*версії* формату, нижчої за 3, не можна писати рекурсивні списки, набори та "
"словники (див. нижче)."

msgid ""
"There are functions that read/write files as well as functions operating on "
"bytes-like objects."
msgstr ""
"Існують функції, які читають/записують файли, а також функції, що працюють з "
"байтоподібними об’єктами."

msgid "The module defines these functions:"
msgstr "Модуль визначає такі функції:"

msgid ""
"Write the value on the open file.  The value must be a supported type.  The "
"file must be a writeable :term:`binary file`."
msgstr ""
"Запишіть значення у відкритий файл. Значення має бути підтримуваного типу. "
"Файл має бути записуваним :term:`binary file`."

msgid ""
"If the value has (or contains an object that has) an unsupported type, a :"
"exc:`ValueError` exception is raised --- but garbage data will also be "
"written to the file.  The object will not be properly read back by :func:"
"`load`."
msgstr ""
"Якщо значення має (або містить об’єкт, який має) непідтримуваний тип, "
"виникає виняток :exc:`ValueError` --- але сміттєві дані також будуть "
"записані у файл. Об’єкт не буде належним чином прочитаний :func:`load`."

msgid ""
"The *version* argument indicates the data format that ``dump`` should use "
"(see below)."
msgstr ""
"Аргумент *version* вказує на формат даних, який має використовувати ``damp`` "
"(див. нижче)."

msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.dumps`` with arguments "
"``value``, ``version``."
msgstr ""
"Викликає :ref:`подію аудиту <auditing>` ``marshal.dumps`` з аргументами "
"``значення``, ``версія``."

msgid ""
"Read one value from the open file and return it.  If no valid value is read "
"(e.g. because the data has a different Python version's incompatible marshal "
"format), raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`.  The "
"file must be a readable :term:`binary file`."
msgstr ""
"Прочитати одне значення з відкритого файлу та повернути його. Якщо дійсне "
"значення не зчитується (наприклад, через те, що дані мають несумісний "
"маршальний формат іншої версії Python), викликайте :exc:`EOFError`, :exc:"
"`ValueError` або :exc:`TypeError`. Файл має бути читабельним :term:`binary "
"file`."

msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.load`` with no "
"arguments."
msgstr ""
"Викликає :ref:`подію аудиту <auditing>` ``marshal.load`` без аргументів."

msgid ""
"If an object containing an unsupported type was marshalled with :func:"
"`dump`, :func:`load` will substitute ``None`` for the unmarshallable type."
msgstr ""
"Якщо об’єкт, що містить непідтримуваний тип, був маршалований за допомогою :"
"func:`dump`, :func:`load` замінить ``None`` для типу, який не можна "
"маршалювати."

msgid ""
"This call used to raise a ``code.__new__`` audit event for each code object. "
"Now it raises a single ``marshal.load`` event for the entire load operation."
msgstr ""
"Цей виклик використовувався для виклику події аудиту ``code.__new__`` для "
"кожного об’єкта коду. Тепер він викликає одну подію ``marshal.load`` для "
"всієї операції завантаження."

msgid ""
"Return the bytes object that would be written to a file by ``dump(value, "
"file)``.  The value must be a supported type.  Raise a :exc:`ValueError` "
"exception if value has (or contains an object that has) an unsupported type."
msgstr ""
"Повертає об’єкт bytes, який буде записаний у файл за допомогою ``dump(value, "
"file)``. Значення має бути підтримуваного типу. Викликати виняток :exc:"
"`ValueError`, якщо значення має (або містить об’єкт, який має) "
"непідтримуваний тип."

msgid ""
"The *version* argument indicates the data format that ``dumps`` should use "
"(see below)."
msgstr ""
"Аргумент *version* вказує формат даних, який мають використовувати ``дампи`` "
"(див. нижче)."

msgid ""
"Convert the :term:`bytes-like object` to a value.  If no valid value is "
"found, raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`.  Extra "
"bytes in the input are ignored."
msgstr ""
"Перетворіть :term:`bytes-like object` на значення. Якщо дійсне значення не "
"знайдено, підніміть :exc:`EOFError`, :exc:`ValueError` або :exc:`TypeError`. "
"Зайві байти у вхідних даних ігноруються."

msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.loads`` with argument "
"``bytes``."
msgstr ""
"Викликає :ref:`подію аудиту <auditing>` ``marshal.loads`` з аргументом "
"``bytes``."

msgid ""
"This call used to raise a ``code.__new__`` audit event for each code object. "
"Now it raises a single ``marshal.loads`` event for the entire load operation."
msgstr ""
"Цей виклик використовувався для виклику події аудиту ``code.__new__`` для "
"кожного об’єкта коду. Тепер він викликає одну подію ``marshal.loads`` для "
"всієї операції завантаження."

msgid "In addition, the following constants are defined:"
msgstr "Крім того, визначено такі константи:"

msgid ""
"Indicates the format that the module uses. Version 0 is the historical "
"format, version 1 shares interned strings and version 2 uses a binary format "
"for floating point numbers. Version 3 adds support for object instancing and "
"recursion. The current version is 4."
msgstr ""
"Вказує на формат, який використовує модуль. Версія 0 — це історичний формат, "
"версія 1 використовує вбудовані рядки, а версія 2 використовує двійковий "
"формат для чисел з плаваючою комою. Версія 3 додає підтримку екземплярів "
"об’єктів і рекурсії. Поточна версія 4."

msgid "Footnotes"
msgstr "Виноски"

msgid ""
"The name of this module stems from a bit of terminology used by the "
"designers of Modula-3 (amongst others), who use the term \"marshalling\" for "
"shipping of data around in a self-contained form. Strictly speaking, \"to "
"marshal\" means to convert some data from internal to external form (in an "
"RPC buffer for instance) and \"unmarshalling\" for the reverse process."
msgstr ""
"Назва цього модуля походить від певної термінології, яка використовується "
"розробниками Modula-3 (серед інших), які використовують термін \"маршалінг\" "
"для доставки даних у автономній формі. Строго кажучи, \"маршалінг\" означає "
"перетворення деяких даних із внутрішньої форми у зовнішню (наприклад, у "
"буфері RPC) і \"демаршалінг\" для зворотного процесу."
