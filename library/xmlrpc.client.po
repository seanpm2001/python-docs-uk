# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-29 17:18+0300\n"
"PO-Revision-Date: 2022-07-05 15:40+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid ":mod:`xmlrpc.client` --- XML-RPC client access"
msgstr ":mod:`xmlrpc.client` --- клієнтський доступ XML-RPC"

msgid "**Source code:** :source:`Lib/xmlrpc/client.py`"
msgstr "**Вихідний код:** :source:`Lib/xmlrpc/client.py`"

msgid ""
"XML-RPC is a Remote Procedure Call method that uses XML passed via HTTP(S) "
"as a transport.  With it, a client can call methods with parameters on a "
"remote server (the server is named by a URI) and get back structured data.  "
"This module supports writing XML-RPC client code; it handles all the details "
"of translating between conformable Python objects and XML on the wire."
msgstr ""
"XML-RPC — це метод віддаленого виклику процедури, який використовує XML, що "
"передається через HTTP(S) як транспорт. З його допомогою клієнт може "
"викликати методи з параметрами на віддаленому сервері (сервер має назву URI) "
"і отримати назад структуровані дані. Цей модуль підтримує написання "
"клієнтського коду XML-RPC; він обробляє всі деталі перекладу між "
"відповідними об’єктами Python і XML на дроті."

msgid ""
"The :mod:`xmlrpc.client` module is not secure against maliciously "
"constructed data.  If you need to parse untrusted or unauthenticated data "
"see :ref:`xml-vulnerabilities`."
msgstr ""
"Модуль :mod:`xmlrpc.client` не захищений від зловмисно створених даних. Якщо "
"вам потрібно проаналізувати ненадійні або неавтентифіковані дані, "
"перегляньте :ref:`xml-vulnerabilities`."

msgid ""
"For HTTPS URIs, :mod:`xmlrpc.client` now performs all the necessary "
"certificate and hostname checks by default."
msgstr ""
"Для HTTPS URI :mod:`xmlrpc.client` тепер виконує всі необхідні перевірки "
"сертифікатів і імен хостів за умовчанням."

msgid ""
"A :class:`ServerProxy` instance is an object that manages communication with "
"a remote XML-RPC server.  The required first argument is a URI (Uniform "
"Resource Indicator), and will normally be the URL of the server.  The "
"optional second argument is a transport factory instance; by default it is "
"an internal :class:`SafeTransport` instance for https: URLs and an internal "
"HTTP :class:`Transport` instance otherwise.  The optional third argument is "
"an encoding, by default UTF-8. The optional fourth argument is a debugging "
"flag."
msgstr ""
"Екземпляр :class:`ServerProxy` — це об’єкт, який керує зв’язком із "
"віддаленим сервером XML-RPC. Обов’язковим першим аргументом є URI "
"(уніфікований індикатор ресурсу), і зазвичай це URL-адреса сервера. "
"Необов'язковий другий аргумент - екземпляр транспортної фабрики; за "
"замовчуванням це внутрішній екземпляр :class:`SafeTransport` для https: URL-"
"адрес і внутрішній екземпляр HTTP :class:`Transport` в інших випадках. "
"Необов’язковий третій аргумент – це кодування, за умовчанням UTF-8. "
"Необов'язковий четвертий аргумент - це позначка налагодження."

msgid ""
"The following parameters govern the use of the returned proxy instance. If "
"*allow_none* is true,  the Python constant ``None`` will be translated into "
"XML; the default behaviour is for ``None`` to raise a :exc:`TypeError`. This "
"is a commonly-used extension to the XML-RPC specification, but isn't "
"supported by all clients and servers; see `http://ontosys.com/xml-rpc/"
"extensions.php <https://web.archive.org/web/20130120074804/http://ontosys."
"com/xml-rpc/extensions.php>`_ for a description. The *use_builtin_types* "
"flag can be used to cause date/time values to be presented as :class:"
"`datetime.datetime` objects and binary data to be presented as :class:"
"`bytes` objects; this flag is false by default. :class:`datetime.datetime`, :"
"class:`bytes` and :class:`bytearray` objects may be passed to calls. The "
"*headers* parameter is an optional sequence of HTTP headers to send with "
"each request, expressed as a sequence of 2-tuples representing the header "
"name and value. (e.g. `[('Header-Name', 'value')]`). The obsolete "
"*use_datetime* flag is similar to *use_builtin_types* but it applies only to "
"date/time values."
msgstr ""
"Наступні параметри регулюють використання повернутого екземпляра проксі. "
"Якщо *allow_none* має значення true, константа Python ``None`` буде "
"перекладено в XML; типовою поведінкою є ``None``, щоб викликати :exc:"
"`TypeError`. Це поширене розширення специфікації XML-RPC, але воно "
"підтримується не всіма клієнтами та серверами; див. `http://ontosys.com/xml-"
"rpc/extensions.php <https://web.archive.org/web/20130120074804/http://"
"ontosys.com/xml-rpc/extensions.php>`_ для опису. Прапор *use_builtin_types* "
"можна використовувати, щоб значення дати/часу відображалися як об’єкти :"
"class:`datetime.datetime`, а двійкові дані — як об’єкти :class:`bytes`; цей "
"прапор за замовчуванням false. Об’єкти :class:`datetime.datetime`, :class:"
"`bytes` і :class:`bytearray` можуть бути передані викликам. Параметр "
"*headers* — це необов’язкова послідовність HTTP-заголовків, яка надсилається "
"з кожним запитом, виражена як послідовність 2-кортежів, що представляють "
"назву та значення заголовка. (наприклад, `[('Назва заголовка', "
"'значення')]`). Застарілий прапор *use_datetime* подібний до "
"*use_builtin_types*, але він застосовується лише до значень дати/часу."

msgid "The *use_builtin_types* flag was added."
msgstr "Додано прапорець *use_builtin_types*."

msgid "The *headers* parameter was added."
msgstr "Додано параметр *headers*."

msgid ""
"Both the HTTP and HTTPS transports support the URL syntax extension for HTTP "
"Basic Authentication: ``http://user:pass@host:port/path``.  The  ``user:"
"pass`` portion will be base64-encoded as an HTTP 'Authorization' header, and "
"sent to the remote server as part of the connection process when invoking an "
"XML-RPC method.  You only need to use this if the remote server requires a "
"Basic Authentication user and password. If an HTTPS URL is provided, "
"*context* may be :class:`ssl.SSLContext` and configures the SSL settings of "
"the underlying HTTPS connection."
msgstr ""
"Обидва транспорти HTTP і HTTPS підтримують розширення синтаксису URL для "
"базової автентифікації HTTP: ``http://user:pass@host:port/path``. Частина "
"``user:pass`` буде закодована в base64 як HTTP-заголовок \"Authorization\" і "
"надіслана на віддалений сервер як частина процесу підключення під час "
"виклику методу XML-RPC. Використовувати це потрібно, лише якщо віддалений "
"сервер потребує користувача та пароль базової автентифікації. Якщо надано "
"URL-адресу HTTPS, *context* може бути :class:`ssl.SSLContext` і налаштовує "
"параметри SSL основного з’єднання HTTPS."

msgid ""
"The returned instance is a proxy object with methods that can be used to "
"invoke corresponding RPC calls on the remote server.  If the remote server "
"supports the introspection API, the proxy can also be used to query the "
"remote server for the methods it supports (service discovery) and fetch "
"other server-associated metadata."
msgstr ""
"Повернений екземпляр — це проксі-об’єкт із методами, які можна "
"використовувати для виклику відповідних викликів RPC на віддаленому сервері. "
"Якщо віддалений сервер підтримує API інтроспекції, проксі також можна "
"використовувати для запиту віддаленого сервера щодо методів, які він "
"підтримує (виявлення служби), і отримання інших пов’язаних із сервером "
"метаданих."

msgid ""
"Types that are conformable (e.g. that can be marshalled through XML), "
"include the following (and except where noted, they are unmarshalled as the "
"same Python type):"
msgstr ""
"Типи, які є сумісними (наприклад, які можна маршалізувати через XML), "
"включають наступне (і, якщо не зазначено, вони не маршалізуються як той "
"самий тип Python):"

msgid "XML-RPC type"
msgstr "Тип XML-RPC"

msgid "Python type"
msgstr "Тип Python"

msgid "``boolean``"
msgstr "``логічний``"

msgid ":class:`bool`"
msgstr ":class:`bool`"

msgid "``int``, ``i1``, ``i2``,  ``i4``, ``i8`` or ``biginteger``"
msgstr "``int``, ``i1``, ``i2``, ``i4``, ``i8`` або ``biginteger``"

msgid ""
":class:`int` in range from -2147483648 to 2147483647. Values get the "
"``<int>`` tag."
msgstr ""
":class:`int` в діапазоні від -2147483648 до 2147483647. Значення отримують "
"тег ``<int>``."

msgid "``double`` or ``float``"
msgstr "``double`` або ``float``"

msgid ":class:`float`.  Values get the ``<double>`` tag."
msgstr ":class:`float`. Значення отримують тег ``<double>``."

msgid "``string``"
msgstr "``рядок``"

msgid ":class:`str`"
msgstr ":class:`str`"

msgid "``array``"
msgstr "``array``"

msgid ""
":class:`list` or :class:`tuple` containing conformable elements.  Arrays are "
"returned as :class:`lists <list>`."
msgstr ""
":class:`list` або :class:`tuple`, що містять відповідні елементи. Масиви "
"повертаються як :class:`lists <list>`."

msgid "``struct``"
msgstr "``структура``"

msgid ""
":class:`dict`.  Keys must be strings, values may be any conformable type.  "
"Objects of user-defined classes can be passed in; only their :attr:`~object."
"__dict__` attribute is transmitted."
msgstr ""
":class:`dict`. Ключі мають бути рядками, значення можуть мати будь-який "
"відповідний тип. Можна передати об’єкти визначених користувачем класів; "
"передається лише їхній атрибут :attr:`~object.__dict__`."

msgid "``dateTime.iso8601``"
msgstr "``dateTime.iso8601``"

msgid ""
":class:`DateTime` or :class:`datetime.datetime`. Returned type depends on "
"values of *use_builtin_types* and *use_datetime* flags."
msgstr ""
":class:`DateTime` або :class:`datetime.datetime`. Повернений тип залежить "
"від значень прапорців *use_builtin_types* і *use_datetime*."

msgid "``base64``"
msgstr "``base64``"

msgid ""
":class:`Binary`, :class:`bytes` or :class:`bytearray`.  Returned type "
"depends on the value of the *use_builtin_types* flag."
msgstr ""
":class:`Binary`, :class:`bytes` або :class:`bytearray`. Повернений тип "
"залежить від значення прапорця *use_builtin_types*."

msgid "``nil``"
msgstr "``нуль``"

msgid ""
"The ``None`` constant.  Passing is allowed only if *allow_none* is true."
msgstr ""
"Константа ``None``. Передача дозволена, лише якщо *allow_none* має значення "
"true."

msgid "``bigdecimal``"
msgstr "``великий десятковий``"

msgid ":class:`decimal.Decimal`.  Returned type only."
msgstr ":class:`decimal.Decimal`. Тільки повернутий тип."

msgid ""
"This is the full set of data types supported by XML-RPC.  Method calls may "
"also raise a special :exc:`Fault` instance, used to signal XML-RPC server "
"errors, or :exc:`ProtocolError` used to signal an error in the HTTP/HTTPS "
"transport layer. Both :exc:`Fault` and :exc:`ProtocolError` derive from a "
"base class called :exc:`Error`.  Note that the xmlrpc client module "
"currently does not marshal instances of subclasses of built-in types."
msgstr ""
"Це повний набір типів даних, які підтримує XML-RPC. Виклики методів також "
"можуть викликати спеціальний екземпляр :exc:`Fault`, який використовується "
"для сигналізації про помилки сервера XML-RPC, або :exc:`ProtocolError`, який "
"використовується для сигналізації про помилку на транспортному рівні HTTP/"
"HTTPS. І :exc:`Fault`, і :exc:`ProtocolError` походять від базового класу "
"під назвою :exc:`Error`. Зауважте, що клієнтський модуль xmlrpc наразі не "
"маршалює екземпляри підкласів вбудованих типів."

msgid ""
"When passing strings, characters special to XML such as ``<``, ``>``, and "
"``&`` will be automatically escaped.  However, it's the caller's "
"responsibility to ensure that the string is free of characters that aren't "
"allowed in XML, such as the control characters with ASCII values between 0 "
"and 31 (except, of course, tab, newline and carriage return); failing to do "
"this will result in an XML-RPC request that isn't well-formed XML.  If you "
"have to pass arbitrary bytes via XML-RPC, use :class:`bytes` or :class:"
"`bytearray` classes or the :class:`Binary` wrapper class described below."
msgstr ""
"Під час передачі рядків спеціальні символи XML, такі як ``<``, ``>`` і "
"``&``, будуть автоматично екрановані. Однак відповідальністю абонента є "
"переконатися, що рядок вільний від символів, які не дозволені в XML, таких "
"як контрольні символи зі значеннями ASCII від 0 до 31 (за винятком, "
"звичайно, табуляції, нового рядка та повернення каретки); якщо цього не "
"зробити, запит XML-RPC не є правильно сформованим XML. Якщо вам потрібно "
"передати довільні байти через XML-RPC, використовуйте класи :class:`bytes` "
"або :class:`bytearray` або клас-оболонку :class:`Binary`, описаний нижче."

msgid ""
":class:`Server` is retained as an alias for :class:`ServerProxy` for "
"backwards compatibility.  New code should use :class:`ServerProxy`."
msgstr ""
":class:`Server` зберігається як псевдонім для :class:`ServerProxy` для "
"зворотної сумісності. Новий код має використовувати :class:`ServerProxy`."

msgid "Added the *context* argument."
msgstr "Додано аргумент *контекст*."

msgid ""
"Added support of type tags with prefixes (e.g. ``ex:nil``). Added support of "
"unmarshalling additional types used by Apache XML-RPC implementation for "
"numerics: ``i1``, ``i2``, ``i8``, ``biginteger``, ``float`` and "
"``bigdecimal``. See http://ws.apache.org/xmlrpc/types.html for a description."
msgstr ""
"Додано підтримку тегів типу з префіксами (наприклад, ``ex:nil``). Додано "
"підтримку демаршалінгу додаткових типів, які використовуються реалізацією "
"Apache XML-RPC для чисел: ``i1``, ``i2``, ``i8``, ``biginteger``, ``float`` "
"і ``bigdecimal``. Див. http://ws.apache.org/xmlrpc/types.html для опису."

msgid "`XML-RPC HOWTO <http://www.tldp.org/HOWTO/XML-RPC-HOWTO/index.html>`_"
msgstr "`XML-RPC HOWTO <http://www.tldp.org/HOWTO/XML-RPC-HOWTO/index.html>`_"

msgid ""
"A good description of XML-RPC operation and client software in several "
"languages. Contains pretty much everything an XML-RPC client developer needs "
"to know."
msgstr ""
"Гарний опис роботи XML-RPC і клієнтського програмного забезпечення кількома "
"мовами. Містить практично все, що потрібно знати розробнику клієнта XML-RPC."

msgid ""
"`XML-RPC Introspection <http://xmlrpc-c.sourceforge.net/introspection.html>`_"
msgstr ""
"`Інтроспекція XML-RPC <http://xmlrpc-c.sourceforge.net/introspection.html>`_"

msgid "Describes the XML-RPC protocol extension for introspection."
msgstr "Описує розширення протоколу XML-RPC для самоаналізу."

msgid "`XML-RPC Specification <http://xmlrpc.scripting.com/spec.html>`_"
msgstr "`Специфікація XML-RPC <http://xmlrpc.scripting.com/spec.html>`_"

msgid "The official specification."
msgstr "Офіційна специфікація."

msgid "ServerProxy Objects"
msgstr "Об’єкти ServerProxy"

msgid ""
"A :class:`ServerProxy` instance has a method corresponding to each remote "
"procedure call accepted by the XML-RPC server.  Calling the method performs "
"an RPC, dispatched by both name and argument signature (e.g. the same method "
"name can be overloaded with multiple argument signatures).  The RPC finishes "
"by returning a value, which may be either returned data in a conformant type "
"or a :class:`Fault` or :class:`ProtocolError` object indicating an error."
msgstr ""
"Екземпляр :class:`ServerProxy` має метод, що відповідає кожному виклику "
"віддаленої процедури, прийнятому сервером XML-RPC. Виклик методу виконує "
"RPC, відправляється як за назвою, так і за підписом аргументу (наприклад, те "
"саме ім’я методу може бути перевантажено декількома підписами аргументів). "
"RPC завершується поверненням значення, яке може бути або повернутими даними "
"відповідного типу, або об’єктом :class:`Fault` чи :class:`ProtocolError`, що "
"вказує на помилку."

msgid ""
"Servers that support the XML introspection API support some common methods "
"grouped under the reserved :attr:`~ServerProxy.system` attribute:"
msgstr ""
"Сервери, які підтримують API інтроспекції XML, підтримують деякі загальні "
"методи, згруповані в зарезервованому атрибуті :attr:`~ServerProxy.system`:"

msgid ""
"This method returns a list of strings, one for each (non-system) method "
"supported by the XML-RPC server."
msgstr ""
"Цей метод повертає список рядків, по одному для кожного (несистемного) "
"методу, який підтримує сервер XML-RPC."

msgid ""
"This method takes one parameter, the name of a method implemented by the XML-"
"RPC server. It returns an array of possible signatures for this method. A "
"signature is an array of types. The first of these types is the return type "
"of the method, the rest are parameters."
msgstr ""
"Цей метод приймає один параметр, назву методу, реалізованого сервером XML-"
"RPC. Він повертає масив можливих підписів для цього методу. Підпис — це "
"масив типів. Перший із цих типів є типом повернення методу, решта є "
"параметрами."

msgid ""
"Because multiple signatures (ie. overloading) is permitted, this method "
"returns a list of signatures rather than a singleton."
msgstr ""
"Оскільки дозволено кілька підписів (тобто перевантаження), цей метод "
"повертає список підписів, а не одиночний."

msgid ""
"Signatures themselves are restricted to the top level parameters expected by "
"a method. For instance if a method expects one array of structs as a "
"parameter, and it returns a string, its signature is simply \"string, "
"array\". If it expects three integers and returns a string, its signature is "
"\"string, int, int, int\"."
msgstr ""
"Самі підписи обмежені параметрами верхнього рівня, очікуваними методом. "
"Наприклад, якщо метод очікує один масив структур як параметр і повертає "
"рядок, його підпис буде просто \"рядок, масив\". Якщо він очікує три цілі "
"числа та повертає рядок, його підписом є \"рядок, int, int, int\"."

msgid ""
"If no signature is defined for the method, a non-array value is returned. In "
"Python this means that the type of the returned  value will be something "
"other than list."
msgstr ""
"Якщо для методу не визначено підпису, повертається немасивне значення. У "
"Python це означає, що типом поверненого значення буде щось інше, ніж список."

msgid ""
"This method takes one parameter, the name of a method implemented by the XML-"
"RPC server.  It returns a documentation string describing the use of that "
"method. If no such string is available, an empty string is returned. The "
"documentation string may contain HTML markup."
msgstr ""
"Цей метод приймає один параметр, назву методу, реалізованого сервером XML-"
"RPC. Він повертає рядок документації, що описує використання цього методу. "
"Якщо такий рядок недоступний, повертається порожній рядок. Рядок "
"документації може містити розмітку HTML."

msgid ""
"Instances of :class:`ServerProxy` support the :term:`context manager` "
"protocol for closing the underlying transport."
msgstr ""
"Екземпляри :class:`ServerProxy` підтримують протокол :term:`context manager` "
"для закриття основного транспорту."

msgid "A working example follows. The server code::"
msgstr "Нижче наведено робочий приклад. Код сервера::"

msgid "The client code for the preceding server::"
msgstr "Код клієнта для попереднього сервера::"

msgid "DateTime Objects"
msgstr "Об’єкти DateTime"

msgid ""
"This class may be initialized with seconds since the epoch, a time tuple, an "
"ISO 8601 time/date string, or a :class:`datetime.datetime` instance.  It has "
"the following methods, supported mainly for internal use by the marshalling/"
"unmarshalling code:"
msgstr ""
"Цей клас може бути ініціалізований секундами з епохи, кортежем часу, рядком "
"часу/дати ISO 8601 або екземпляром :class:`datetime.datetime`. Він має такі "
"методи, які підтримуються головним чином для внутрішнього використання кодом "
"маршалінгу/демаршалінгу:"

msgid "Accept a string as the instance's new time value."
msgstr "Прийняти рядок як нове значення часу екземпляра."

msgid ""
"Write the XML-RPC encoding of this :class:`DateTime` item to the *out* "
"stream object."
msgstr ""
"Запишіть кодування XML-RPC цього елемента :class:`DateTime` в об’єкт потоку "
"*out*."

msgid ""
"It also supports certain of Python's built-in operators through rich "
"comparison and :meth:`__repr__` methods."
msgstr ""
"Він також підтримує певні вбудовані оператори Python через розширене "
"порівняння та методи :meth:`__repr__`."

msgid "Binary Objects"
msgstr "Двійкові об'єкти"

msgid ""
"This class may be initialized from bytes data (which may include NULs). The "
"primary access to the content of a :class:`Binary` object is provided by an "
"attribute:"
msgstr ""
"Цей клас може бути ініціалізований з даних байтів (які можуть включати NUL). "
"Основний доступ до вмісту об’єкта :class:`Binary` забезпечується атрибутом:"

msgid ""
"The binary data encapsulated by the :class:`Binary` instance.  The data is "
"provided as a :class:`bytes` object."
msgstr ""
"Двійкові дані, інкапсульовані екземпляром :class:`Binary`. Дані надаються як "
"об’єкт :class:`bytes`."

msgid ""
":class:`Binary` objects have the following methods, supported mainly for "
"internal use by the marshalling/unmarshalling code:"
msgstr ""
":class:`Binary` об’єкти мають такі методи, які підтримуються переважно для "
"внутрішнього використання кодом маршалінгу/демаршалінгу:"

msgid ""
"Accept a base64 :class:`bytes` object and decode it as the instance's new "
"data."
msgstr ""
"Прийміть об’єкт base64 :class:`bytes` і декодуйте його як нові дані "
"екземпляра."

msgid ""
"Write the XML-RPC base 64 encoding of this binary item to the *out* stream "
"object."
msgstr ""
"Запишіть кодування XML-RPC base 64 цього бінарного елемента в об’єкт потоку "
"*out*."

msgid ""
"The encoded data will have newlines every 76 characters as per :rfc:`RFC "
"2045 section 6.8 <2045#section-6.8>`, which was the de facto standard base64 "
"specification when the XML-RPC spec was written."
msgstr ""
"Закодовані дані матимуть символи нового рядка через кожні 76 символів "
"відповідно до :rfc:`RFC 2045, розділ 6.8 <2045#section-6.8>`, який був де-"
"факто стандартною специфікацією base64 на момент написання специфікації XML-"
"RPC."

msgid ""
"It also supports certain of Python's built-in operators through :meth:"
"`__eq__` and :meth:`__ne__` methods."
msgstr ""
"Він також підтримує певні вбудовані оператори Python через методи :meth:"
"`__eq__` і :meth:`__ne__`."

msgid ""
"Example usage of the binary objects.  We're going to transfer an image over "
"XMLRPC::"
msgstr ""
"Приклад використання бінарних об'єктів. Ми збираємося передати зображення "
"через XMLRPC::"

msgid "The client gets the image and saves it to a file::"
msgstr "Клієнт отримує зображення та зберігає його у файл::"

msgid "Fault Objects"
msgstr "Об'єкти несправності"

msgid ""
"A :class:`Fault` object encapsulates the content of an XML-RPC fault tag. "
"Fault objects have the following attributes:"
msgstr ""
"Об’єкт :class:`Fault` інкапсулює вміст тегу помилки XML-RPC. Об'єкти "
"несправностей мають такі атрибути:"

msgid "An int indicating the fault type."
msgstr "Int, що вказує на тип помилки."

msgid "A string containing a diagnostic message associated with the fault."
msgstr "Рядок, що містить діагностичне повідомлення, пов’язане з несправністю."

msgid ""
"In the following example we're going to intentionally cause a :exc:`Fault` "
"by returning a complex type object.  The server code::"
msgstr ""
"У наступному прикладі ми навмисно спричинимо :exc:`Fault`, повернувши об’єкт "
"складного типу. Код сервера::"

msgid "ProtocolError Objects"
msgstr "Об’єкти ProtocolError"

msgid ""
"A :class:`ProtocolError` object describes a protocol error in the underlying "
"transport layer (such as a 404 'not found' error if the server named by the "
"URI does not exist).  It has the following attributes:"
msgstr ""
"Об’єкт :class:`ProtocolError` описує помилку протоколу на базовому "
"транспортному рівні (наприклад, помилку 404 \"не знайдено\", якщо сервер, "
"названий URI, не існує). Він має такі атрибути:"

msgid "The URI or URL that triggered the error."
msgstr "URI або URL-адреса, яка викликала помилку."

msgid "The error code."
msgstr "Код помилки."

msgid "The error message or diagnostic string."
msgstr "Повідомлення про помилку або діагностичний рядок."

msgid ""
"A dict containing the headers of the HTTP/HTTPS request that triggered the "
"error."
msgstr "Dict, що містить заголовки запиту HTTP/HTTPS, який викликав помилку."

msgid ""
"In the following example we're going to intentionally cause a :exc:"
"`ProtocolError` by providing an invalid URI::"
msgstr ""
"У наступному прикладі ми навмисно спричинимо :exc:`ProtocolError`, вказавши "
"недійсний URI::"

msgid "MultiCall Objects"
msgstr "Об’єкти MultiCall"

msgid ""
"The :class:`MultiCall` object provides a way to encapsulate multiple calls "
"to a remote server into a single request [#]_."
msgstr ""
"Об’єкт :class:`MultiCall` забезпечує спосіб інкапсулювати кілька викликів до "
"віддаленого сервера в один запит [#]_."

msgid ""
"Create an object used to boxcar method calls. *server* is the eventual "
"target of the call. Calls can be made to the result object, but they will "
"immediately return ``None``, and only store the call name and parameters in "
"the :class:`MultiCall` object. Calling the object itself causes all stored "
"calls to be transmitted as a single ``system.multicall`` request. The result "
"of this call is a :term:`generator`; iterating over this generator yields "
"the individual results."
msgstr ""
"Створіть об’єкт, який використовується для викликів методу boxcar. *сервер* "
"є кінцевою метою виклику. Виклики можна здійснювати до об’єкта результату, "
"але вони негайно повертатимуть ``None`` і зберігають лише назву виклику та "
"параметри в об’єкті :class:`MultiCall`. Виклик самого об’єкта призводить до "
"того, що всі збережені виклики передаються як єдиний запит ``system."
"multicall``. Результатом цього виклику є :term:`generator`; ітерація по "
"цьому генератору дає окремі результати."

msgid "A usage example of this class follows.  The server code::"
msgstr "Нижче наведено приклад використання цього класу. Код сервера::"

msgid "Convenience Functions"
msgstr "Функції зручності"

msgid ""
"Convert *params* into an XML-RPC request. or into a response if "
"*methodresponse* is true. *params* can be either a tuple of arguments or an "
"instance of the :exc:`Fault` exception class.  If *methodresponse* is true, "
"only a single value can be returned, meaning that *params* must be of length "
"1. *encoding*, if supplied, is the encoding to use in the generated XML; the "
"default is UTF-8. Python's :const:`None` value cannot be used in standard "
"XML-RPC; to allow using it via an extension,  provide a true value for "
"*allow_none*."
msgstr ""
"Перетворіть *params* на запит XML-RPC. або у відповідь, якщо "
"*methodresponse* має значення true. *params* може бути або кортежем "
"аргументів, або екземпляром класу винятків :exc:`Fault`. Якщо "
"*methodresponse* має значення true, можна повернути лише одне значення, "
"тобто *params* має мати довжину 1. *encoding*, якщо вказано, це кодування, "
"яке буде використовуватися у створеному XML; типовим є UTF-8. Значення "
"Python :const:`None` не можна використовувати в стандартному XML-RPC; щоб "
"дозволити використовувати його через розширення, надайте справжнє значення "
"*allow_none*."

msgid ""
"Convert an XML-RPC request or response into Python objects, a ``(params, "
"methodname)``.  *params* is a tuple of argument; *methodname* is a string, "
"or ``None`` if no method name is present in the packet. If the XML-RPC "
"packet represents a fault condition, this function will raise a :exc:`Fault` "
"exception. The *use_builtin_types* flag can be used to cause date/time "
"values to be presented as :class:`datetime.datetime` objects and binary data "
"to be presented as :class:`bytes` objects; this flag is false by default."
msgstr ""
"Перетворення запиту чи відповіді XML-RPC на об’єкти Python, ``(params, "
"methodname)``. *params* — це кортеж аргументів; *methodname* — це рядок або "
"``None``, якщо в пакеті немає імені методу. Якщо пакет XML-RPC представляє "
"стан помилки, ця функція викличе виняток :exc:`Fault`. Прапор "
"*use_builtin_types* можна використовувати, щоб значення дати/часу "
"відображалися як об’єкти :class:`datetime.datetime`, а двійкові дані — як "
"об’єкти :class:`bytes`; цей прапор за замовчуванням false."

msgid ""
"The obsolete *use_datetime* flag is similar to *use_builtin_types* but it "
"applies only to date/time values."
msgstr ""
"Застарілий прапор *use_datetime* подібний до *use_builtin_types*, але він "
"застосовується лише до значень дати/часу."

msgid "Example of Client Usage"
msgstr "Приклад використання клієнта"

msgid ""
"To access an XML-RPC server through a HTTP proxy, you need to define a "
"custom transport.  The following example shows how::"
msgstr ""
"Щоб отримати доступ до сервера XML-RPC через проксі-сервер HTTP, вам "
"потрібно визначити настроюваний транспорт. У наступному прикладі показано, "
"як:"

msgid "Example of Client and Server Usage"
msgstr "Приклад використання клієнта та сервера"

msgid "See :ref:`simplexmlrpcserver-example`."
msgstr "Див. :ref:`simplexmlrpcserver-example`."

msgid "Footnotes"
msgstr "Виноски"

msgid ""
"This approach has been first presented in `a discussion on xmlrpc.com "
"<https://web.archive.org/web/20060624230303/http://www.xmlrpc.com/discuss/"
"msgReader$1208?mode=topic>`_."
msgstr ""
"Цей підхід вперше було представлено в `обговоренні на xmlrpc.com <https://"
"web.archive.org/web/20060624230303/http://www.xmlrpc.com/discuss/"
"msgReader$1208?mode=topic>`_."
