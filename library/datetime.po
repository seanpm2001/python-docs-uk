# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 01:04+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid ":mod:`datetime` --- Basic date and time types"
msgstr ":mod:`datetime` --- Основні типи дати та часу"

msgid "**Source code:** :source:`Lib/datetime.py`"
msgstr "**Вихідний код:** :source:`Lib/datetime.py`"

msgid ""
"The :mod:`datetime` module supplies classes for manipulating dates and times."
msgstr "Модуль :mod:`datetime` надає класи для роботи з датами та часом."

msgid ""
"While date and time arithmetic is supported, the focus of the implementation "
"is on efficient attribute extraction for output formatting and manipulation."
msgstr ""
"Хоча арифметика дати й часу підтримується, основна увага при реалізації "
"зосереджена на ефективному вилученні атрибутів для форматування виводу та "
"обробки."

msgid "Module :mod:`calendar`"
msgstr "Модуль :mod:`calendar`"

msgid "General calendar related functions."
msgstr "Загальні функції, пов’язані з календарем."

msgid "Module :mod:`time`"
msgstr "Модуль :mod:`time`"

msgid "Time access and conversions."
msgstr "Доступ до часу та перетворення."

msgid "Module :mod:`zoneinfo`"
msgstr "Модуль :mod:`zoneinfo`"

msgid "Concrete time zones representing the IANA time zone database."
msgstr ""
"Конкретні часові пояси, що представляють базу даних часових поясів IANA."

msgid "Package `dateutil <https://dateutil.readthedocs.io/en/stable/>`_"
msgstr "Пакет `dateutil <https://dateutil.readthedocs.io/en/stable/>`_"

msgid "Third-party library with expanded time zone and parsing support."
msgstr ""
"Бібліотека третьої сторони з розширеним часовим поясом і підтримкою аналізу."

msgid "Aware and Naive Objects"
msgstr "Обізнані та наївні об’єкти"

msgid ""
"Date and time objects may be categorized as \"aware\" or \"naive\" depending "
"on whether or not they include timezone information."
msgstr ""
"Об’єкти дати та часу можуть бути класифіковані як \"відомі\" або \"наївні\" "
"залежно від того, чи містять вони інформацію про часовий пояс."

msgid ""
"With sufficient knowledge of applicable algorithmic and political time "
"adjustments, such as time zone and daylight saving time information, an "
"**aware** object can locate itself relative to other aware objects. An aware "
"object represents a specific moment in time that is not open to "
"interpretation. [#]_"
msgstr ""
"Завдяки достатнім знанням застосовних алгоритмів і політичних коригувань "
"часу, таких як інформація про часовий пояс і літній час, **свідомий** об’єкт "
"може визначити своє місцезнаходження відносно інших обізнаних об’єктів. "
"Усвідомлюваний об'єкт представляє конкретний момент часу, який не піддається "
"інтерпретації. [#]_"

msgid ""
"A **naive** object does not contain enough information to unambiguously "
"locate itself relative to other date/time objects. Whether a naive object "
"represents Coordinated Universal Time (UTC), local time, or time in some "
"other timezone is purely up to the program, just like it is up to the "
"program whether a particular number represents metres, miles, or mass. Naive "
"objects are easy to understand and to work with, at the cost of ignoring "
"some aspects of reality."
msgstr ""
"**Наївний** об’єкт не містить достатньо інформації, щоб однозначно визначити "
"його місцезнаходження відносно інших об’єктів дати/часу. Програма вирішує, "
"чи відображатиме простий об’єкт всесвітній координований час (UTC), місцевий "
"час чи час в якомусь іншому часовому поясі, так само як програма вирішує, чи "
"позначає конкретне число метри, милі чи масу. Наївні об’єкти легко зрозуміти "
"і з ними легко працювати, ціною ігнорування деяких аспектів реальності."

msgid ""
"For applications requiring aware objects, :class:`.datetime` and :class:`."
"time` objects have an optional time zone information attribute, :attr:`!"
"tzinfo`, that can be set to an instance of a subclass of the abstract :class:"
"`tzinfo` class. These :class:`tzinfo` objects capture information about the "
"offset from UTC time, the time zone name, and whether daylight saving time "
"is in effect."
msgstr ""
"Для додатків, яким потрібні об’єкти, об’єкти :class:`.datetime` і :class:`."
"time` мають необов’язковий атрибут інформації про часовий пояс, :attr:`!"
"tzinfo`, який можна встановити як екземпляр підкласу абстрактний :class:"
"`tzinfo` клас. Ці об’єкти :class:`tzinfo` зберігають інформацію про зміщення "
"від часу UTC, назву часового поясу та чи діє літній час."

msgid ""
"Only one concrete :class:`tzinfo` class, the :class:`timezone` class, is "
"supplied by the :mod:`datetime` module. The :class:`timezone` class can "
"represent simple timezones with fixed offsets from UTC, such as UTC itself "
"or North American EST and EDT timezones. Supporting timezones at deeper "
"levels of detail is up to the application. The rules for time adjustment "
"across the world are more political than rational, change frequently, and "
"there is no standard suitable for every application aside from UTC."
msgstr ""
"Тільки один конкретний клас :class:`tzinfo`, клас :class:`timezone`, "
"надається модулем :mod:`datetime`. Клас :class:`timezone` може представляти "
"прості часові пояси з фіксованими зсувами відносно UTC, наприклад сам UTC "
"або північноамериканські часові пояси EST і EDT. Підтримка часових поясів на "
"глибшому рівні деталізації залежить від програми. Правила коригування часу в "
"усьому світі є більше політичними, ніж раціональними, часто змінюються, і "
"немає стандарту, який підходить для кожного застосування, крім UTC."

msgid "Constants"
msgstr "Константи"

msgid "The :mod:`datetime` module exports the following constants:"
msgstr "Модуль :mod:`datetime` експортує такі константи:"

msgid ""
"The smallest year number allowed in a :class:`date` or :class:`.datetime` "
"object. :const:`MINYEAR` is ``1``."
msgstr ""
"Найменше число року, дозволене в об’єкті :class:`date` або :class:`."
"datetime`. :const:`MINYEAR` — це ``1``."

msgid ""
"The largest year number allowed in a :class:`date` or :class:`.datetime` "
"object. :const:`MAXYEAR` is ``9999``."
msgstr ""
"Найбільший номер року, дозволений в об’єкті :class:`date` або :class:`."
"datetime`. :const:`MAXYEAR` дорівнює ``9999``."

msgid "Alias for the UTC timezone singleton :attr:`datetime.timezone.utc`."
msgstr ""

msgid "Available Types"
msgstr "Доступні типи"

msgid ""
"An idealized naive date, assuming the current Gregorian calendar always was, "
"and always will be, in effect. Attributes: :attr:`year`, :attr:`month`, and :"
"attr:`day`."
msgstr ""
"Ідеалізована наївна дата, припускаючи, що поточний григоріанський календар "
"завжди був і завжди буде в силі. Атрибути: :attr:`year`, :attr:`month` і :"
"attr:`day`."

msgid ""
"An idealized time, independent of any particular day, assuming that every "
"day has exactly 24\\*60\\*60 seconds.  (There is no notion of \"leap "
"seconds\" here.) Attributes: :attr:`hour`, :attr:`minute`, :attr:`second`, :"
"attr:`microsecond`, and :attr:`.tzinfo`."
msgstr ""
"Ідеалізований час, незалежний від будь-якого конкретного дня, припускаючи, "
"що кожен день має рівно 24\\*60\\*60 секунд. (Тут немає поняття \"високосні "
"секунди\".) Атрибути: :attr:`hour`, :attr:`minute`, :attr:`second`, :attr:"
"`microsecond` і :attr:`.tzinfo`."

msgid ""
"A combination of a date and a time. Attributes: :attr:`year`, :attr:"
"`month`, :attr:`day`, :attr:`hour`, :attr:`minute`, :attr:`second`, :attr:"
"`microsecond`, and :attr:`.tzinfo`."
msgstr ""
"Поєднання дати й часу. Атрибути: :attr:`year`, :attr:`month`, :attr:`day`, :"
"attr:`hour`, :attr:`minute`, :attr:`second`, :attr:`microsecond` і :attr:`."
"tzinfo`."

msgid ""
"A duration expressing the difference between two :class:`date`, :class:`."
"time`, or :class:`.datetime` instances to microsecond resolution."
msgstr ""
"Тривалість, яка виражає різницю між двома екземплярами :class:`date`, :class:"
"`.time` або :class:`.datetime` у мікросекундах."

msgid ""
"An abstract base class for time zone information objects. These are used by "
"the :class:`.datetime` and :class:`.time` classes to provide a customizable "
"notion of time adjustment (for example, to account for time zone and/or "
"daylight saving time)."
msgstr ""
"Абстрактний базовий клас для інформаційних об’єктів часового поясу. Вони "
"використовуються класами :class:`.datetime` і :class:`.time` для надання "
"настроюваного поняття коригування часу (наприклад, для врахування часового "
"поясу та/або літнього часу)."

msgid ""
"A class that implements the :class:`tzinfo` abstract base class as a fixed "
"offset from the UTC."
msgstr ""
"Клас, який реалізує :class:`tzinfo` абстрактний базовий клас як фіксоване "
"зміщення від UTC."

msgid "Objects of these types are immutable."
msgstr "Об'єкти цих типів незмінні."

msgid "Subclass relationships::"
msgstr "Відносини підкласів::"

msgid "Common Properties"
msgstr "Загальні властивості"

msgid ""
"The :class:`date`, :class:`.datetime`, :class:`.time`, and :class:`timezone` "
"types share these common features:"
msgstr ""
"Типи :class:`date`, :class:`.datetime`, :class:`.time` і :class:`timezone` "
"мають такі спільні риси:"

msgid ""
"Objects of these types are hashable, meaning that they can be used as "
"dictionary keys."
msgstr ""
"Об’єкти цих типів можна хешувати, тобто їх можна використовувати як ключі "
"словника."

msgid ""
"Objects of these types support efficient pickling via the :mod:`pickle` "
"module."
msgstr ""
"Об’єкти цих типів підтримують ефективне маринування за допомогою модуля :mod:"
"`pickle`."

msgid "Determining if an Object is Aware or Naive"
msgstr "Визначення того, чи є об’єкт усвідомленим чи наївним"

msgid "Objects of the :class:`date` type are always naive."
msgstr "Об’єкти типу :class:`date` завжди наївні."

msgid ""
"An object of type :class:`.time` or :class:`.datetime` may be aware or naive."
msgstr ""
"Об’єкт типу :class:`.time` або :class:`.datetime` може бути обізнаним або "
"наївним."

msgid "A :class:`.datetime` object *d* is aware if both of the following hold:"
msgstr ""
"Об’єкт :class:`.datetime` *d* відомий, якщо виконуються обидва наступні "
"умови:"

msgid "``d.tzinfo`` is not ``None``"
msgstr "``d.tzinfo`` не є ``None``"

msgid "``d.tzinfo.utcoffset(d)`` does not return ``None``"
msgstr "``d.tzinfo.utcoffset(d)`` не повертає ``None``"

msgid "Otherwise, *d* is naive."
msgstr "Інакше *d* наївно."

msgid "A :class:`.time` object *t* is aware if both of the following hold:"
msgstr ""
"Об’єкт :class:`.time` *t* усвідомлює, якщо виконуються обидва наступні умови:"

msgid "``t.tzinfo`` is not ``None``"
msgstr "``t.tzinfo`` не є ``None``"

msgid "``t.tzinfo.utcoffset(None)`` does not return ``None``."
msgstr "``t.tzinfo.utcoffset(None)`` не повертає ``None``."

msgid "Otherwise, *t* is naive."
msgstr "В іншому випадку *t* наївний."

msgid ""
"The distinction between aware and naive doesn't apply to :class:`timedelta` "
"objects."
msgstr ""
"Розрізнення між обізнаним і наївним не стосується об’єктів :class:"
"`timedelta`."

msgid ":class:`timedelta` Objects"
msgstr ":class:`timedelta` Об'єкти"

msgid ""
"A :class:`timedelta` object represents a duration, the difference between "
"two dates or times."
msgstr ""
"Об’єкт :class:`timedelta` представляє тривалість, різницю між двома датами "
"або часом."

msgid ""
"All arguments are optional and default to ``0``. Arguments may be integers "
"or floats, and may be positive or negative."
msgstr ""
"Усі аргументи є необов’язковими та за умовчанням мають значення ``0``. "
"Аргументи можуть бути цілими числами або числами з плаваючою речовиною, а "
"також бути позитивними або негативними."

msgid ""
"Only *days*, *seconds* and *microseconds* are stored internally. Arguments "
"are converted to those units:"
msgstr ""
"Усередині зберігаються лише *дні*, *секунди* та *мікросекунди*. Аргументи "
"конвертуються в такі одиниці:"

msgid "A millisecond is converted to 1000 microseconds."
msgstr "Мілісекунда перетворюється на 1000 мікросекунд."

msgid "A minute is converted to 60 seconds."
msgstr "Хвилина перетворюється на 60 секунд."

msgid "An hour is converted to 3600 seconds."
msgstr "Година перетворюється на 3600 секунд."

msgid "A week is converted to 7 days."
msgstr "Тиждень перетворюється на 7 днів."

msgid ""
"and days, seconds and microseconds are then normalized so that the "
"representation is unique, with"
msgstr ""
"і дні, секунди та мікросекунди потім нормалізуються, щоб представлення було "
"унікальним, з"

msgid "``0 <= microseconds < 1000000``"
msgstr "``0 <= мікросекунди < 1000000``"

msgid "``0 <= seconds < 3600*24`` (the number of seconds in one day)"
msgstr "``0 <= секунд < 3600*24`` (кількість секунд в одному дні)"

msgid "``-999999999 <= days <= 999999999``"
msgstr "``-999999999 <= днів <= 999999999``"

msgid ""
"The following example illustrates how any arguments besides *days*, "
"*seconds* and *microseconds* are \"merged\" and normalized into those three "
"resulting attributes::"
msgstr ""
"У наступному прикладі показано, як будь-які аргументи, окрім *днів*, "
"*секунд* і *мікросекунд*, \"об’єднуються\" та нормалізуються в ці три "
"отримані атрибути:"

msgid ""
"If any argument is a float and there are fractional microseconds, the "
"fractional microseconds left over from all arguments are combined and their "
"sum is rounded to the nearest microsecond using round-half-to-even "
"tiebreaker. If no argument is a float, the conversion and normalization "
"processes are exact (no information is lost)."
msgstr ""
"Якщо будь-який аргумент є числом із плаваючою точкою та є дробові "
"мікросекунди, дробові мікросекунди, що залишилися від усіх аргументів, "
"об’єднуються, а їхня сума округлюється до найближчої мікросекунди за "
"допомогою тай-брейку округлення від половини до навіть. Якщо жоден аргумент "
"не є числом з плаваючою речовиною, процеси перетворення та нормалізації є "
"точними (інформація не втрачається)."

msgid ""
"If the normalized value of days lies outside the indicated range, :exc:"
"`OverflowError` is raised."
msgstr ""
"Якщо нормалізоване значення днів лежить за межами зазначеного діапазону, "
"виникає :exc:`OverflowError`."

msgid ""
"Note that normalization of negative values may be surprising at first. For "
"example::"
msgstr ""
"Зверніть увагу, що нормалізація від’ємних значень спочатку може викликати "
"подив. Наприклад::"

msgid "Class attributes:"
msgstr "Атрибути класу:"

msgid "The most negative :class:`timedelta` object, ``timedelta(-999999999)``."
msgstr ""
"Найбільш негативний об’єкт :class:`timedelta`, ``timedelta(-999999999)``."

msgid ""
"The most positive :class:`timedelta` object, ``timedelta(days=999999999, "
"hours=23, minutes=59, seconds=59, microseconds=999999)``."
msgstr ""
"Найбільш позитивний об’єкт :class:`timedelta`, ``timedelta(days=999999999, "
"hours=23, minutes=59, seconds=59, microseconds=999999)``."

msgid ""
"The smallest possible difference between non-equal :class:`timedelta` "
"objects, ``timedelta(microseconds=1)``."
msgstr ""
"Найменша можлива різниця між нерівними об’єктами :class:`timedelta`, "
"``timedelta(microseconds=1)``."

msgid ""
"Note that, because of normalization, ``timedelta.max`` > ``-timedelta.min``. "
"``-timedelta.max`` is not representable as a :class:`timedelta` object."
msgstr ""
"Зауважте, що через нормалізацію ``timedelta.max`` > ``-timedelta.min``. ``-"
"timedelta.max`` не можна представити як об’єкт :class:`timedelta`."

msgid "Instance attributes (read-only):"
msgstr "Атрибути екземпляра (тільки для читання):"

msgid "Attribute"
msgstr "Атрибут"

msgid "Value"
msgstr "Значення"

msgid "``days``"
msgstr "``дні``"

msgid "Between -999999999 and 999999999 inclusive"
msgstr "Від -999999999 до 999999999 включно"

msgid "``seconds``"
msgstr "``секунди``"

msgid "Between 0 and 86399 inclusive"
msgstr "Від 0 до 86399 включно"

msgid "``microseconds``"
msgstr "``мікросекунди``"

msgid "Between 0 and 999999 inclusive"
msgstr "Від 0 до 999999 включно"

msgid "Supported operations:"
msgstr "Підтримувані операції:"

msgid "Operation"
msgstr "Операція"

msgid "Result"
msgstr "Результат"

msgid "``t1 = t2 + t3``"
msgstr "``t1 = t2 + t3``"

msgid ""
"Sum of *t2* and *t3*. Afterwards *t1*-*t2* == *t3* and *t1*-*t3* == *t2* are "
"true. (1)"
msgstr ""
"Сума *t2* і *t3*. Після цього *t1*-*t2* == *t3* і *t1*-*t3* == *t2* вірні. "
"(1)"

msgid "``t1 = t2 - t3``"
msgstr "``t1 = t2 - t3``"

msgid ""
"Difference of *t2* and *t3*. Afterwards *t1* == *t2* - *t3* and *t2* == *t1* "
"+ *t3* are true. (1)(6)"
msgstr ""
"Різниця *t2* і *t3*. Після цього *t1* == *t2* - *t3* і *t2* == *t1* + *t3* "
"вірні. (1)(6)"

msgid "``t1 = t2 * i or t1 = i * t2``"
msgstr "``t1 = t2 * i або t1 = i * t2``"

msgid ""
"Delta multiplied by an integer. Afterwards *t1* // i == *t2* is true, "
"provided ``i != 0``."
msgstr ""
"Дельта, помножена на ціле число. Після цього *t1* // i == *t2* є істинним, "
"якщо ``i != 0``."

msgid "In general, *t1* \\* i == *t1* \\* (i-1) + *t1* is true. (1)"
msgstr "Загалом *t1* \\* i == *t1* \\* (i-1) + *t1* вірно. (1)"

msgid "``t1 = t2 * f or t1 = f * t2``"
msgstr "``t1 = t2 * f або t1 = f * t2``"

msgid ""
"Delta multiplied by a float. The result is rounded to the nearest multiple "
"of timedelta.resolution using round-half-to-even."
msgstr ""
"Дельта, помножена на float. Результат округлюється до найближчого кратного "
"timedelta.resolution за допомогою округлення від половини до навіть."

msgid "``f = t2 / t3``"
msgstr "``f = t2 / t3``"

msgid ""
"Division (3) of overall duration *t2* by interval unit *t3*. Returns a :"
"class:`float` object."
msgstr ""
"Поділ (3) загальної тривалості *t2* на одиницю інтервалу *t3*. Повертає "
"об’єкт :class:`float`."

msgid "``t1 = t2 / f or t1 = t2 / i``"
msgstr "``t1 = t2 / f або t1 = t2 / i``"

msgid ""
"Delta divided by a float or an int. The result is rounded to the nearest "
"multiple of timedelta.resolution using round-half-to-even."
msgstr ""
"Дельта, поділена на float або int. Результат округлюється до найближчого "
"кратного timedelta.resolution за допомогою округлення від половини до навіть."

msgid "``t1 = t2 // i`` or ``t1 = t2 // t3``"
msgstr "``t1 = t2 // i`` або ``t1 = t2 // t3``"

msgid ""
"The floor is computed and the remainder (if any) is thrown away. In the "
"second case, an integer is returned. (3)"
msgstr ""
"Підлога обчислюється, а залишок (якщо є) викидається. У другому випадку "
"повертається ціле число. (3)"

msgid "``t1 = t2 % t3``"
msgstr "``t1 = t2 % t3``"

msgid "The remainder is computed as a :class:`timedelta` object. (3)"
msgstr "Залишок обчислюється як об’єкт :class:`timedelta`. (3)"

msgid "``q, r = divmod(t1, t2)``"
msgstr "``q, r = divmod(t1, t2)``"

msgid ""
"Computes the quotient and the remainder: ``q = t1 // t2`` (3) and ``r = t1 % "
"t2``. q is an integer and r is a :class:`timedelta` object."
msgstr ""
"Обчислює частку та залишок: ``q = t1 // t2`` (3) і ``r = t1 % t2``. q — ціле "
"число, а r — об’єкт :class:`timedelta`."

msgid "``+t1``"
msgstr "``+t1``"

msgid "Returns a :class:`timedelta` object with the same value. (2)"
msgstr "Повертає об’єкт :class:`timedelta` з тим самим значенням. (2)"

msgid "``-t1``"
msgstr "``-t1``"

msgid ""
"equivalent to :class:`timedelta`\\ (-*t1.days*, -*t1.seconds*, -*t1."
"microseconds*), and to *t1*\\* -1. (1)(4)"
msgstr ""
"еквівалентно :class:`timedelta`\\ (-*t1.days*, -*t1.seconds*, -*t1."
"microseconds*) і *t1*\\* -1. (1)(4)"

msgid "``abs(t)``"
msgstr "``abs(t)``"

msgid ""
"equivalent to +\\ *t* when ``t.days >= 0``, and to -*t* when ``t.days < 0``. "
"(2)"
msgstr ""
"еквівалент +\\ *t*, коли ``t.days >= 0``, і до -*t*, коли ``t.days < 0``. (2)"

msgid "``str(t)``"
msgstr "``str(t)``"

msgid ""
"Returns a string in the form ``[D day[s], ][H]H:MM:SS[.UUUUUU]``, where D is "
"negative for negative ``t``. (5)"
msgstr ""
"Повертає рядок у формі ``[D day[s], ][H]H:MM:SS[.UUUUUU]``, де D є від’ємним "
"для від’ємного ``t``. (5)"

msgid "``repr(t)``"
msgstr "``repr(t)``"

msgid ""
"Returns a string representation of the :class:`timedelta` object as a "
"constructor call with canonical attribute values."
msgstr ""
"Повертає рядкове представлення об’єкта :class:`timedelta` як виклик "
"конструктора з канонічними значеннями атрибутів."

msgid "Notes:"
msgstr "Примітки:"

msgid "This is exact but may overflow."
msgstr "Це точно, але може переповнюватись."

msgid "This is exact and cannot overflow."
msgstr "Це точно і не може переповнюватися."

msgid "Division by 0 raises :exc:`ZeroDivisionError`."
msgstr "Ділення на 0 викликає :exc:`ZeroDivisionError`."

msgid "-*timedelta.max* is not representable as a :class:`timedelta` object."
msgstr "-*timedelta.max* не можна представити як об’єкт :class:`timedelta`."

msgid ""
"String representations of :class:`timedelta` objects are normalized "
"similarly to their internal representation. This leads to somewhat unusual "
"results for negative timedeltas. For example::"
msgstr ""
"Рядкові представлення об’єктів :class:`timedelta` нормалізуються подібно до "
"їх внутрішнього представлення. Це призводить до дещо незвичайних результатів "
"для негативних часових дельт. Наприклад::"

msgid ""
"The expression ``t2 - t3`` will always be equal to the expression ``t2 + (-"
"t3)`` except when t3 is equal to ``timedelta.max``; in that case the former "
"will produce a result while the latter will overflow."
msgstr ""
"Вираз ``t2 - t3`` завжди дорівнюватиме виразу ``t2 + (-t3)``, за винятком "
"випадків, коли t3 дорівнює ``timedelta.max``; у цьому випадку перший дасть "
"результат, а другий переповниться."

msgid ""
"In addition to the operations listed above, :class:`timedelta` objects "
"support certain additions and subtractions with :class:`date` and :class:`."
"datetime` objects (see below)."
msgstr ""
"Окрім перерахованих вище операцій, об’єкти :class:`timedelta` підтримують "
"певні додавання та віднімання за допомогою об’єктів :class:`date` і :class:`."
"datetime` (див. нижче)."

msgid ""
"Floor division and true division of a :class:`timedelta` object by another :"
"class:`timedelta` object are now supported, as are remainder operations and "
"the :func:`divmod` function. True division and multiplication of a :class:"
"`timedelta` object by a :class:`float` object are now supported."
msgstr ""
"Тепер підтримується поділ на поверх і справжній поділ об’єкта :class:"
"`timedelta` на інший об’єкт :class:`timedelta`, а також операції з залишком "
"і функція :func:`divmod`. Тепер підтримується справжнє ділення та множення "
"об’єкта :class:`timedelta` на об’єкт :class:`float`."

msgid ""
"Comparisons of :class:`timedelta` objects are supported, with some caveats."
msgstr ""
"Порівняння об’єктів :class:`timedelta` підтримуються з деякими "
"застереженнями."

msgid ""
"The comparisons ``==`` or ``!=`` *always* return a :class:`bool`, no matter "
"the type of the compared object::"
msgstr ""
"Порівняння ``==`` або ``!=`` *завжди* повертає :class:`bool`, незалежно від "
"типу порівнюваного об’єкта::"

msgid ""
"For all other comparisons (such as ``<`` and ``>``), when a :class:"
"`timedelta` object is compared to an object of a different type, :exc:"
"`TypeError` is raised::"
msgstr ""
"Для всіх інших порівнянь (таких як ``<`` and ``>``), коли об’єкт :class:"
"`timedelta` порівнюється з об’єктом іншого типу, виникає :exc:`TypeError`::"

msgid ""
"In Boolean contexts, a :class:`timedelta` object is considered to be true if "
"and only if it isn't equal to ``timedelta(0)``."
msgstr ""
"У логічних контекстах об’єкт :class:`timedelta` вважається істинним тоді і "
"тільки тоді, коли він не дорівнює ``timedelta(0)``."

msgid "Instance methods:"
msgstr "Методи екземплярів:"

msgid ""
"Return the total number of seconds contained in the duration. Equivalent to "
"``td / timedelta(seconds=1)``. For interval units other than seconds, use "
"the division form directly (e.g. ``td / timedelta(microseconds=1)``)."
msgstr ""
"Повертає загальну кількість секунд, що міститься в тривалості. Еквівалент "
"``td / timedelta(seconds=1)``. Для одиниць інтервалу, відмінних від секунд, "
"використовуйте напряму форму ділення (наприклад, ``td / "
"timedelta(мікросекунди=1)``)."

msgid ""
"Note that for very large time intervals (greater than 270 years on most "
"platforms) this method will lose microsecond accuracy."
msgstr ""
"Зауважте, що для дуже великих інтервалів часу (понад 270 років на більшості "
"платформ) цей метод втратить мікросекундну точність."

msgid "Examples of usage: :class:`timedelta`"
msgstr "Приклади використання: :class:`timedelta`"

msgid "An additional example of normalization::"
msgstr "Додатковий приклад нормалізації::"

msgid "Examples of :class:`timedelta` arithmetic::"
msgstr "Приклади арифметики :class:`timedelta`::"

msgid ":class:`date` Objects"
msgstr ":class:`date` Об'єкти"

msgid ""
"A :class:`date` object represents a date (year, month and day) in an "
"idealized calendar, the current Gregorian calendar indefinitely extended in "
"both directions."
msgstr ""
"Об’єкт :class:`date` представляє дату (рік, місяць і день) в ідеалізованому "
"календарі, поточний григоріанський календар необмежено розширений в обох "
"напрямках."

msgid ""
"January 1 of year 1 is called day number 1, January 2 of year 1 is called "
"day number 2, and so on. [#]_"
msgstr ""
"1 січня року 1 називається днем номер 1, 2 січня року 1 називається днем "
"номер 2 і так далі. [#]_"

msgid ""
"All arguments are required. Arguments must be integers, in the following "
"ranges:"
msgstr ""
"Всі аргументи необхідні. Аргументи мають бути цілими числами в таких "
"діапазонах:"

msgid "``MINYEAR <= year <= MAXYEAR``"
msgstr "``MINYEAR <= рік <= MAXYEAR``"

msgid "``1 <= month <= 12``"
msgstr "``1 <= місяць <= 12``"

msgid "``1 <= day <= number of days in the given month and year``"
msgstr "``1 <= день <= кількість днів у заданому місяці та році``"

msgid ""
"If an argument outside those ranges is given, :exc:`ValueError` is raised."
msgstr ""
"Якщо вказано аргумент поза цими діапазонами, виникає :exc:`ValueError`."

msgid "Other constructors, all class methods:"
msgstr "Інші конструктори, усі методи класу:"

msgid "Return the current local date."
msgstr "Повернути поточну місцеву дату."

msgid "This is equivalent to ``date.fromtimestamp(time.time())``."
msgstr "Це еквівалентно ``date.fromtimestamp(time.time())``."

msgid ""
"Return the local date corresponding to the POSIX timestamp, such as is "
"returned by :func:`time.time`."
msgstr ""
"Повертає місцеву дату, що відповідає мітці часу POSIX, наприклад, яку "
"повертає :func:`time.time`."

msgid ""
"This may raise :exc:`OverflowError`, if the timestamp is out of the range of "
"values supported by the platform C :c:func:`localtime` function, and :exc:"
"`OSError` on :c:func:`localtime` failure. It's common for this to be "
"restricted to years from 1970 through 2038. Note that on non-POSIX systems "
"that include leap seconds in their notion of a timestamp, leap seconds are "
"ignored by :meth:`fromtimestamp`."
msgstr ""
"Це може спричинити помилку :exc:`OverflowError`, якщо позначка часу виходить "
"за межі діапазону значень, які підтримує функція C :c:func:`localtime`, і :"
"exc:`OSError` у :c:func:`localtime` невдача. Зазвичай це обмежується роками "
"з 1970 по 2038 рік. Зауважте, що в системах без POSIX, які включають "
"високосні секунди в своє поняття позначки часу, високосні секунди "
"ігноруються :meth:`fromtimestamp`."

msgid ""
"Raise :exc:`OverflowError` instead of :exc:`ValueError` if the timestamp is "
"out of the range of values supported by the platform C :c:func:`localtime` "
"function. Raise :exc:`OSError` instead of :exc:`ValueError` on :c:func:"
"`localtime` failure."
msgstr ""
"Викликайте :exc:`OverflowError` замість :exc:`ValueError`, якщо позначка "
"часу виходить за межі діапазону значень, які підтримує функція C :c:func:"
"`localtime` платформи. Викликати :exc:`OSError` замість :exc:`ValueError` у "
"разі помилки :c:func:`localtime`."

msgid ""
"Return the date corresponding to the proleptic Gregorian ordinal, where "
"January 1 of year 1 has ordinal 1."
msgstr ""
"Повертає дату, що відповідає пролептичному григоріанському порядковому "
"номеру, де 1 січня 1 року має порядковий номер 1."

msgid ""
":exc:`ValueError` is raised unless ``1 <= ordinal <= date.max.toordinal()``. "
"For any date *d*, ``date.fromordinal(d.toordinal()) == d``."
msgstr ""
":exc:`ValueError` викликається, якщо не ``1 <= ordinal <= date.max."
"toordinal()``. Для будь-якої дати *d* ``date.fromordinal(d.toordinal()) == "
"d``."

msgid ""
"Return a :class:`date` corresponding to a *date_string* given in any valid "
"ISO 8601 format, except ordinal dates (e.g. ``YYYY-DDD``)::"
msgstr ""

msgid "Previously, this method only supported the format ``YYYY-MM-DD``."
msgstr ""

msgid ""
"Return a :class:`date` corresponding to the ISO calendar date specified by "
"year, week and day. This is the inverse of the function :meth:`date."
"isocalendar`."
msgstr ""
"Повертає :class:`date`, що відповідає календарній даті ISO, визначеній "
"роком, тижнем і днем. Це зворотна функція :meth:`date.isocalendar`."

msgid "The earliest representable date, ``date(MINYEAR, 1, 1)``."
msgstr "Найраніша дата, яку можна представити, ``date(MINYEAR, 1, 1)``."

msgid "The latest representable date, ``date(MAXYEAR, 12, 31)``."
msgstr "Остання представлена дата, ``date(MAXYEAR, 12, 31)``."

msgid ""
"The smallest possible difference between non-equal date objects, "
"``timedelta(days=1)``."
msgstr ""
"Найменша можлива різниця між об’єктами нерівних дат, ``timedelta(days=1)``."

msgid "Between :const:`MINYEAR` and :const:`MAXYEAR` inclusive."
msgstr "Між :const:`MINYEAR` і :const:`MAXYEAR` включно."

msgid "Between 1 and 12 inclusive."
msgstr "Від 1 до 12 включно."

msgid "Between 1 and the number of days in the given month of the given year."
msgstr "Від 1 до числа днів у даному місяці даного року."

msgid "``date2 = date1 + timedelta``"
msgstr "``дата2 = дата1 + дельта часу``"

msgid "*date2* will be ``timedelta.days`` days after *date1*. (1)"
msgstr ""

msgid "``date2 = date1 - timedelta``"
msgstr "``дата2 = дата1 - дельта часу``"

msgid "Computes *date2* such that ``date2 + timedelta == date1``. (2)"
msgstr "Обчислює *date2* таким чином, що ``date2 + timedelta == date1``. (2)"

msgid "``timedelta = date1 - date2``"
msgstr "``timedelta = дата1 - дата2``"

msgid "\\(3)"
msgstr "\\(3)"

msgid "``date1 < date2``"
msgstr "``дата1 < дата2``"

msgid ""
"*date1* is considered less than *date2* when *date1* precedes *date2* in "
"time. (4)"
msgstr ""
"*date1* вважається меншим за *date2*, якщо *date1* передує *date2* за часом. "
"(4)"

msgid ""
"*date2* is moved forward in time if ``timedelta.days > 0``, or backward if "
"``timedelta.days < 0``. Afterward ``date2 - date1 == timedelta.days``. "
"``timedelta.seconds`` and ``timedelta.microseconds`` are ignored. :exc:"
"`OverflowError` is raised if ``date2.year`` would be smaller than :const:"
"`MINYEAR` or larger than :const:`MAXYEAR`."
msgstr ""
"*date2* пересувається вперед у часі, якщо ``timedelta.days > 0``, або назад, "
"``timedelta.days < 0``. Після цього ``date2 - date1 == timedelta.days``. "
"``timedelta.seconds`` і ``timedelta.microseconds`` ігноруються. :exc:"
"`OverflowError` виникає, якщо ``date2.year`` буде меншим за :const:`MINYEAR` "
"або більшим за :const:`MAXYEAR`."

msgid "``timedelta.seconds`` and ``timedelta.microseconds`` are ignored."
msgstr "``timedelta.seconds`` і ``timedelta.microseconds`` ігноруються."

msgid ""
"This is exact, and cannot overflow. timedelta.seconds and timedelta."
"microseconds are 0, and date2 + timedelta == date1 after."
msgstr ""
"Це точно і не може переповнюватися. timedelta.seconds і timedelta."
"microseconds дорівнюють 0, а date2 + timedelta == date1 після."

msgid ""
"In other words, ``date1 < date2`` if and only if ``date1.toordinal() < date2."
"toordinal()``. Date comparison raises :exc:`TypeError` if the other "
"comparand isn't also a :class:`date` object. However, ``NotImplemented`` is "
"returned instead if the other comparand has a :meth:`timetuple` attribute. "
"This hook gives other kinds of date objects a chance at implementing mixed-"
"type comparison. If not, when a :class:`date` object is compared to an "
"object of a different type, :exc:`TypeError` is raised unless the comparison "
"is ``==`` or ``!=``. The latter cases return :const:`False` or :const:"
"`True`, respectively."
msgstr ""
"Іншими словами, ``date1 < date2`` тоді і тільки тоді, коли ``date1."
"toordinal() < date2.toordinal()``. Порівняння дат викликає :exc:`TypeError`, "
"якщо інший компаранд не є також об’єктом :class:`date`. Однак натомість "
"повертається ``NotImplemented``, якщо інший компаранд має атрибут :meth:"
"`timetuple`. Цей хук дає іншим видам об’єктів дати можливість реалізувати "
"порівняння змішаного типу. Якщо ні, коли об’єкт :class:`date` порівнюється з "
"об’єктом іншого типу, виникає :exc:`TypeError`, якщо порівняння не ``==`` "
"або ``!=``. Останні випадки повертають :const:`False` або :const:`True` "
"відповідно."

msgid ""
"In Boolean contexts, all :class:`date` objects are considered to be true."
msgstr "У логічних контекстах усі об’єкти :class:`date` вважаються істинними."

msgid ""
"Return a date with the same value, except for those parameters given new "
"values by whichever keyword arguments are specified."
msgstr ""
"Повертає дату з тим самим значенням, за винятком тих параметрів, яким надано "
"нові значення за будь-якими аргументами ключового слова."

msgid "Example::"
msgstr "Приклад::"

msgid ""
"Return a :class:`time.struct_time` such as returned by :func:`time."
"localtime`."
msgstr ""
"Повертає :class:`time.struct_time`, наприклад, повертає :func:`time."
"localtime`."

msgid "The hours, minutes and seconds are 0, and the DST flag is -1."
msgstr ""
"Години, хвилини та секунди дорівнюють 0, а позначка літнього часу дорівнює "
"-1."

msgid "``d.timetuple()`` is equivalent to::"
msgstr "``d.timetuple()`` еквівалентний:"

msgid ""
"where ``yday = d.toordinal() - date(d.year, 1, 1).toordinal() + 1`` is the "
"day number within the current year starting with ``1`` for January 1st."
msgstr ""
"де ``yday = d.toordinal() - date(d.year, 1, 1).toordinal() + 1`` — це номер "
"дня в поточному році, починаючи з ``1`` для 1 січня."

msgid ""
"Return the proleptic Gregorian ordinal of the date, where January 1 of year "
"1 has ordinal 1. For any :class:`date` object *d*, ``date.fromordinal(d."
"toordinal()) == d``."
msgstr ""
"Повертає пролептичний григоріанський порядковий номер дати, де 1 січня року "
"1 має порядковий номер 1. Для будь-якого об’єкта :class:`date` *d*, ``date."
"fromordinal(d.toordinal()) == d``."

msgid ""
"Return the day of the week as an integer, where Monday is 0 and Sunday is 6. "
"For example, ``date(2002, 12, 4).weekday() == 2``, a Wednesday. See also :"
"meth:`isoweekday`."
msgstr ""
"Повертає день тижня як ціле число, де понеділок — 0, а неділя — 6. "
"Наприклад, ``date(2002, 12, 4).weekday() == 2``, середа. Дивіться також :"
"meth:`isoweekday`."

msgid ""
"Return the day of the week as an integer, where Monday is 1 and Sunday is 7. "
"For example, ``date(2002, 12, 4).isoweekday() == 3``, a Wednesday. See also :"
"meth:`weekday`, :meth:`isocalendar`."
msgstr ""
"Повертає день тижня як ціле число, де понеділок — 1, а неділя — 7. "
"Наприклад, ``date(2002, 12, 4).isoweekday() == 3``, середа. Дивіться також :"
"meth:`weekday`, :meth:`isocalendar`."

msgid ""
"Return a :term:`named tuple` object with three components: ``year``, "
"``week`` and ``weekday``."
msgstr ""
"Повертає об’єкт :term:`named tuple` із трьома компонентами: ``year``, "
"``week`` і ``weekday``."

msgid ""
"The ISO calendar is a widely used variant of the Gregorian calendar. [#]_"
msgstr ""
"Календар ISO є широко використовуваним варіантом григоріанського календаря. "
"[#]_"

msgid ""
"The ISO year consists of 52 or 53 full weeks, and where a week starts on a "
"Monday and ends on a Sunday. The first week of an ISO year is the first "
"(Gregorian) calendar week of a year containing a Thursday. This is called "
"week number 1, and the ISO year of that Thursday is the same as its "
"Gregorian year."
msgstr ""
"Рік ISO складається з 52 або 53 повних тижнів, де тиждень починається в "
"понеділок і закінчується в неділю. Перший тиждень року ISO — це перший "
"(григоріанський) календарний тиждень року, що містить четвер. Це називається "
"тижнем номер 1, і рік ISO того четверга такий же, як його григоріанський рік."

msgid ""
"For example, 2004 begins on a Thursday, so the first week of ISO year 2004 "
"begins on Monday, 29 Dec 2003 and ends on Sunday, 4 Jan 2004::"
msgstr ""
"Наприклад, 2004 рік починається в четвер, тому перший тиждень 2004 року ISO "
"починається в понеділок, 29 грудня 2003 року, і закінчується в неділю, 4 "
"січня 2004 року:"

msgid "Result changed from a tuple to a :term:`named tuple`."
msgstr "Результат змінено з кортежу на :term:`named tuple`."

msgid ""
"Return a string representing the date in ISO 8601 format, ``YYYY-MM-DD``::"
msgstr ""
"Повертає рядок, що представляє дату у форматі ISO 8601, ``РРРР-ММ-ДД``::"

msgid "For a date *d*, ``str(d)`` is equivalent to ``d.isoformat()``."
msgstr "Для дати *d* ``str(d)`` еквівалентно ``d.isoformat()``."

msgid "Return a string representing the date::"
msgstr "Повертає рядок, що представляє дату::"

msgid "``d.ctime()`` is equivalent to::"
msgstr "``d.ctime()`` еквівалентний:"

msgid ""
"on platforms where the native C :c:func:`ctime` function (which :func:`time."
"ctime` invokes, but which :meth:`date.ctime` does not invoke) conforms to "
"the C standard."
msgstr ""
"на платформах, де рідна функція C :c:func:`ctime` (яку :func:`time.ctime` "
"викликає, але яку :meth:`date.ctime` не викликає) відповідає стандарту C."

msgid ""
"Return a string representing the date, controlled by an explicit format "
"string. Format codes referring to hours, minutes or seconds will see 0 "
"values. For a complete list of formatting directives, see :ref:`strftime-"
"strptime-behavior`."
msgstr ""
"Повертає рядок, що представляє дату, керовану рядком явного формату. Коди "
"формату, які стосуються годин, хвилин або секунд, матимуть значення 0. Щоб "
"отримати повний список директив форматування, перегляньте :ref:`strftime-"
"strptime-behavior`."

msgid ""
"Same as :meth:`.date.strftime`. This makes it possible to specify a format "
"string for a :class:`.date` object in :ref:`formatted string literals <f-"
"strings>` and when using :meth:`str.format`. For a complete list of "
"formatting directives, see :ref:`strftime-strptime-behavior`."
msgstr ""
"Те саме, що :meth:`.date.strftime`. Це дає змогу вказати рядок формату для "
"об’єкта :class:`.date` у :ref:`форматованих рядкових літералах <f-strings>` "
"і при використанні :meth:`str.format`. Щоб отримати повний список директив "
"форматування, перегляньте :ref:`strftime-strptime-behavior`."

msgid "Examples of Usage: :class:`date`"
msgstr "Приклади використання: :class:`date`"

msgid "Example of counting days to an event::"
msgstr "Приклад підрахунку днів до події::"

msgid "More examples of working with :class:`date`:"
msgstr "Ще приклади роботи з :class:`date`:"

msgid ":class:`.datetime` Objects"
msgstr ":class:`.datetime` Об'єкти"

msgid ""
"A :class:`.datetime` object is a single object containing all the "
"information from a :class:`date` object and a :class:`.time` object."
msgstr ""
"Об’єкт :class:`.datetime` — це єдиний об’єкт, який містить всю інформацію з "
"об’єктів :class:`date` і :class:`.time`."

msgid ""
"Like a :class:`date` object, :class:`.datetime` assumes the current "
"Gregorian calendar extended in both directions; like a :class:`.time` "
"object, :class:`.datetime` assumes there are exactly 3600\\*24 seconds in "
"every day."
msgstr ""
"Як і об’єкт :class:`date`, :class:`.datetime` передбачає поточний "
"григоріанський календар, розширений в обох напрямках; як і об’єкт :class:`."
"time`, :class:`.datetime` припускає, що кожен день становить рівно 3600\\*24 "
"секунди."

msgid "Constructor:"
msgstr "Конструктор:"

msgid ""
"The *year*, *month* and *day* arguments are required. *tzinfo* may be "
"``None``, or an instance of a :class:`tzinfo` subclass. The remaining "
"arguments must be integers in the following ranges:"
msgstr ""
"Аргументи *рік*, *місяць* і *день* є обов’язковими. *tzinfo* може бути "
"``None`` або екземпляром підкласу :class:`tzinfo`. Решта аргументів мають "
"бути цілими числами в таких діапазонах:"

msgid "``MINYEAR <= year <= MAXYEAR``,"
msgstr "``MINYEAR <= рік <= MAXYEAR``,"

msgid "``1 <= month <= 12``,"
msgstr "``1 <= місяць <= 12``,"

msgid "``1 <= day <= number of days in the given month and year``,"
msgstr "``1 <= день <= кількість днів у заданому місяці та році``,"

msgid "``0 <= hour < 24``,"
msgstr "``0 <= година < 24``,"

msgid "``0 <= minute < 60``,"
msgstr "``0 <= хвилина < 60``,"

msgid "``0 <= second < 60``,"
msgstr "``0 <= секунда < 60``,"

msgid "``0 <= microsecond < 1000000``,"
msgstr "``0 <= мікросекунда < 1000000``,"

msgid "``fold in [0, 1]``."
msgstr "``згорнути [0, 1]``."

msgid "Added the ``fold`` argument."
msgstr "Додано аргумент ``fold``."

msgid "Return the current local datetime, with :attr:`.tzinfo` ``None``."
msgstr ""
"Повертає поточну локальну дату та час за допомогою :attr:`.tzinfo` ``None``."

msgid "Equivalent to::"
msgstr "Дорівнює::"

msgid "See also :meth:`now`, :meth:`fromtimestamp`."
msgstr "Дивіться також :meth:`now`, :meth:`fromtimestamp`."

msgid ""
"This method is functionally equivalent to :meth:`now`, but without a ``tz`` "
"parameter."
msgstr ""
"Цей метод функціонально еквівалентний :meth:`now`, але без параметра ``tz``."

msgid "Return the current local date and time."
msgstr "Повернути поточну місцеву дату й час."

msgid ""
"If optional argument *tz* is ``None`` or not specified, this is like :meth:"
"`today`, but, if possible, supplies more precision than can be gotten from "
"going through a :func:`time.time` timestamp (for example, this may be "
"possible on platforms supplying the C :c:func:`gettimeofday` function)."
msgstr ""
"Якщо необов’язковий аргумент *tz* має значення ``None`` або не вказано, це "
"схоже на :meth:`today`, але, якщо можливо, надає більшу точність, ніж можна "
"отримати, пройшовши через :func:`time.time` мітка часу (наприклад, це "
"можливо на платформах, що забезпечують функцію C :c:func:`gettimeofday`)."

msgid ""
"If *tz* is not ``None``, it must be an instance of a :class:`tzinfo` "
"subclass, and the current date and time are converted to *tz*’s time zone."
msgstr ""
"Якщо *tz* не є ``None``, він має бути екземпляром підкласу :class:`tzinfo`, "
"а поточні дата й час перетворюються на часовий пояс *tz*."

msgid "This function is preferred over :meth:`today` and :meth:`utcnow`."
msgstr "Цій функції надається перевага над :meth:`today` і :meth:`utcnow`."

msgid "Return the current UTC date and time, with :attr:`.tzinfo` ``None``."
msgstr ""
"Повертає поточну дату й час за UTC за допомогою :attr:`.tzinfo` ``None``."

msgid ""
"This is like :meth:`now`, but returns the current UTC date and time, as a "
"naive :class:`.datetime` object. An aware current UTC datetime can be "
"obtained by calling ``datetime.now(timezone.utc)``. See also :meth:`now`."
msgstr ""
"Це схоже на :meth:`now`, але повертає поточну дату та час у форматі UTC як "
"простий об’єкт :class:`.datetime`. Відомий поточний UTC datetime можна "
"отримати, викликавши ``datetime.now(timezone.utc)``. Дивіться також :meth:"
"`now`."

msgid ""
"Because naive ``datetime`` objects are treated by many ``datetime`` methods "
"as local times, it is preferred to use aware datetimes to represent times in "
"UTC. As such, the recommended way to create an object representing the "
"current time in UTC is by calling ``datetime.now(timezone.utc)``."
msgstr ""
"Оскільки наївні об’єкти ``datetime`` розглядаються багатьма методами "
"``datetime`` як місцевий час, бажано використовувати відомі дати для "
"представлення часу в UTC. Таким чином, рекомендований спосіб створити "
"об’єкт, що представляє поточний час у UTC, — це викликати ``datetime."
"now(timezone.utc)``."

msgid ""
"Return the local date and time corresponding to the POSIX timestamp, such as "
"is returned by :func:`time.time`. If optional argument *tz* is ``None`` or "
"not specified, the timestamp is converted to the platform's local date and "
"time, and the returned :class:`.datetime` object is naive."
msgstr ""
"Повертає локальну дату й час, що відповідають мітці часу POSIX, наприклад, "
"повертає :func:`time.time`. Якщо необов’язковий аргумент *tz* має значення "
"``None`` або не вказано, позначка часу перетворюється на локальну дату й час "
"платформи, а повернутий об’єкт :class:`.datetime` є простим."

msgid ""
"If *tz* is not ``None``, it must be an instance of a :class:`tzinfo` "
"subclass, and the timestamp is converted to *tz*’s time zone."
msgstr ""
"Якщо *tz* не є ``None``, він має бути екземпляром підкласу :class:`tzinfo`, "
"а мітка часу перетворюється на часовий пояс *tz*."

msgid ""
":meth:`fromtimestamp` may raise :exc:`OverflowError`, if the timestamp is "
"out of the range of values supported by the platform C :c:func:`localtime` "
"or :c:func:`gmtime` functions, and :exc:`OSError` on :c:func:`localtime` or :"
"c:func:`gmtime` failure. It's common for this to be restricted to years in "
"1970 through 2038. Note that on non-POSIX systems that include leap seconds "
"in their notion of a timestamp, leap seconds are ignored by :meth:"
"`fromtimestamp`, and then it's possible to have two timestamps differing by "
"a second that yield identical :class:`.datetime` objects. This method is "
"preferred over :meth:`utcfromtimestamp`."
msgstr ""
":meth:`fromtimestamp` може викликати :exc:`OverflowError`, якщо мітка часу "
"виходить за межі діапазону значень, які підтримуються функціями платформи C :"
"c:func:`localtime` або :c:func:`gmtime`, і :exc:`OSError` під час помилки :c:"
"func:`localtime` або :c:func:`gmtime`. Зазвичай це обмежується роками з 1970 "
"по 2038 рік. Зауважте, що в системах без POSIX, які включають високосні "
"секунди в своє поняття позначки часу, високосні секунди ігноруються :meth:"
"`fromtimestamp`, і тоді можна мати дві мітки часу, що відрізняються на "
"секунду, що дає ідентичні об’єкти :class:`.datetime`. Цей метод є кращим "
"перед :meth:`utcfromtimestamp`."

msgid ""
"Raise :exc:`OverflowError` instead of :exc:`ValueError` if the timestamp is "
"out of the range of values supported by the platform C :c:func:`localtime` "
"or :c:func:`gmtime` functions. Raise :exc:`OSError` instead of :exc:"
"`ValueError` on :c:func:`localtime` or :c:func:`gmtime` failure."
msgstr ""
"Викликайте :exc:`OverflowError` замість :exc:`ValueError`, якщо позначка "
"часу виходить за межі діапазону значень, які підтримують функції C :c:func:"
"`localtime` або :c:func:`gmtime` платформи. Викликати :exc:`OSError` "
"замість :exc:`ValueError` у разі помилки :c:func:`localtime` або :c:func:"
"`gmtime`."

msgid ":meth:`fromtimestamp` may return instances with :attr:`.fold` set to 1."
msgstr ""
":meth:`fromtimestamp` може повертати екземпляри з :attr:`.fold`, "
"встановленим на 1."

msgid ""
"Return the UTC :class:`.datetime` corresponding to the POSIX timestamp, "
"with :attr:`.tzinfo` ``None``.  (The resulting object is naive.)"
msgstr ""
"Повертає UTC :class:`.datetime`, що відповідає мітці часу POSIX, з :attr:`."
"tzinfo` ``None``. (Отриманий об’єкт наївний.)"

msgid ""
"This may raise :exc:`OverflowError`, if the timestamp is out of the range of "
"values supported by the platform C :c:func:`gmtime` function, and :exc:"
"`OSError` on :c:func:`gmtime` failure. It's common for this to be restricted "
"to years in 1970 through 2038."
msgstr ""
"Це може спричинити помилку :exc:`OverflowError`, якщо позначка часу виходить "
"за межі значень, які підтримує функція платформи C :c:func:`gmtime`, і :exc:"
"`OSError` на :c:func:`gmtime` невдача. Зазвичай це обмежується роками з 1970 "
"по 2038 рік."

msgid "To get an aware :class:`.datetime` object, call :meth:`fromtimestamp`::"
msgstr ""
"Щоб отримати відомий об’єкт :class:`.datetime`, викличте :meth:"
"`fromtimestamp`::"

msgid ""
"On the POSIX compliant platforms, it is equivalent to the following "
"expression::"
msgstr "На POSIX-сумісних платформах це еквівалентно такому виразу::"

msgid ""
"except the latter formula always supports the full years range: between :"
"const:`MINYEAR` and :const:`MAXYEAR` inclusive."
msgstr ""
"за винятком останньої формули, яка завжди підтримує повний діапазон років: "
"від :const:`MINYEAR` до :const:`MAXYEAR` включно."

msgid ""
"Because naive ``datetime`` objects are treated by many ``datetime`` methods "
"as local times, it is preferred to use aware datetimes to represent times in "
"UTC. As such, the recommended way to create an object representing a "
"specific timestamp in UTC is by calling ``datetime.fromtimestamp(timestamp, "
"tz=timezone.utc)``."
msgstr ""
"Оскільки наївні об’єкти ``datetime`` розглядаються багатьма методами "
"``datetime`` як місцевий час, бажано використовувати відомі дати для "
"представлення часу в UTC. Таким чином, рекомендований спосіб створити "
"об’єкт, що представляє конкретну позначку часу в UTC, — це викликати "
"``datetime.fromtimestamp(timestamp, tz=timezone.utc)``."

msgid ""
"Raise :exc:`OverflowError` instead of :exc:`ValueError` if the timestamp is "
"out of the range of values supported by the platform C :c:func:`gmtime` "
"function. Raise :exc:`OSError` instead of :exc:`ValueError` on :c:func:"
"`gmtime` failure."
msgstr ""
"Викликайте :exc:`OverflowError` замість :exc:`ValueError`, якщо позначка "
"часу виходить за межі діапазону значень, які підтримує функція C :c:func:"
"`gmtime` платформи. Викликати :exc:`OSError` замість :exc:`ValueError` у "
"разі помилки :c:func:`gmtime`."

msgid ""
"Return the :class:`.datetime` corresponding to the proleptic Gregorian "
"ordinal, where January 1 of year 1 has ordinal 1. :exc:`ValueError` is "
"raised unless ``1 <= ordinal <= datetime.max.toordinal()``. The hour, "
"minute, second and microsecond of the result are all 0, and :attr:`.tzinfo` "
"is ``None``."
msgstr ""
"Повертає :class:`.datetime`, що відповідає пролептичному григоріанському "
"порядковому номеру, де 1 січня року 1 має порядковий номер 1. :exc:"
"`ValueError` виникає, якщо не ``1 <= порядковий <= datetime.max."
"toordinal()``. Година, хвилина, секунда та мікросекунда результату "
"дорівнюють 0, а :attr:`.tzinfo` — ``None``."

msgid ""
"Return a new :class:`.datetime` object whose date components are equal to "
"the given :class:`date` object's, and whose time components are equal to the "
"given :class:`.time` object's. If the *tzinfo* argument is provided, its "
"value is used to set the :attr:`.tzinfo` attribute of the result, otherwise "
"the :attr:`~.time.tzinfo` attribute of the *time* argument is used."
msgstr ""
"Повертає новий об’єкт :class:`.datetime`, компоненти дати якого дорівнюють "
"заданому об’єкту :class:`date`, а компоненти часу дорівнюють заданому "
"об’єкту :class:`.time`. Якщо надано аргумент *tzinfo*, його значення "
"використовується для встановлення атрибута :attr:`.tzinfo` результату, "
"інакше використовується атрибут :attr:`~.time.tzinfo` аргументу *time*."

msgid ""
"For any :class:`.datetime` object *d*, ``d == datetime.combine(d.date(), d."
"time(), d.tzinfo)``. If date is a :class:`.datetime` object, its time "
"components and :attr:`.tzinfo` attributes are ignored."
msgstr ""
"Для будь-якого об’єкта :class:`.datetime` *d*, ``d == datetime.combine(d."
"date(), d.time(), d.tzinfo)``. Якщо date є об’єктом :class:`.datetime`, його "
"компоненти часу та атрибути :attr:`.tzinfo` ігноруються."

msgid "Added the *tzinfo* argument."
msgstr "Додано аргумент *tzinfo*."

msgid ""
"Return a :class:`.datetime` corresponding to a *date_string* in any valid "
"ISO 8601 format, with the following exceptions:"
msgstr ""

msgid "Time zone offsets may have fractional seconds."
msgstr ""

msgid "The ``T`` separator may be replaced by any single unicode character."
msgstr ""

msgid "Ordinal dates are not currently supported."
msgstr ""

msgid "Fractional hours and minutes are not supported."
msgstr ""

msgid "Examples::"
msgstr "Приклади::"

msgid ""
"Previously, this method only supported formats that could be emitted by :"
"meth:`date.isoformat()` or :meth:`datetime.isoformat()`."
msgstr ""

msgid ""
"Return a :class:`.datetime` corresponding to the ISO calendar date specified "
"by year, week and day. The non-date components of the datetime are populated "
"with their normal default values. This is the inverse of the function :meth:"
"`datetime.isocalendar`."
msgstr ""
"Повертає :class:`.datetime`, що відповідає календарній даті ISO, визначеній "
"роком, тижнем і днем. Компоненти datetime, що не є датою, заповнюються "
"стандартними значеннями за замовчуванням. Це зворотна функція :meth:"
"`datetime.isocalendar`."

msgid ""
"Return a :class:`.datetime` corresponding to *date_string*, parsed according "
"to *format*."
msgstr ""
"Повертає :class:`.datetime`, що відповідає *рядку_дати*, розібраному "
"відповідно до *формату*."

msgid "This is equivalent to::"
msgstr "Це еквівалентно::"

msgid ""
":exc:`ValueError` is raised if the date_string and format can't be parsed "
"by :func:`time.strptime` or if it returns a value which isn't a time tuple. "
"For a complete list of formatting directives, see :ref:`strftime-strptime-"
"behavior`."
msgstr ""
":exc:`ValueError` виникає, якщо date_string і формат не можуть бути "
"проаналізовані :func:`time.strptime` або якщо він повертає значення, яке не "
"є кортежем часу. Щоб отримати повний список директив форматування, "
"перегляньте :ref:`strftime-strptime-behavior`."

msgid ""
"The earliest representable :class:`.datetime`, ``datetime(MINYEAR, 1, 1, "
"tzinfo=None)``."
msgstr ""
"Найраніший репрезентований :class:`.datetime`, ``datetime(MINYEAR, 1, 1, "
"tzinfo=None)``."

msgid ""
"The latest representable :class:`.datetime`, ``datetime(MAXYEAR, 12, 31, 23, "
"59, 59, 999999, tzinfo=None)``."
msgstr ""
"Останній представлений :class:`.datetime`, ``datetime(MAXYEAR, 12, 31, 23, "
"59, 59, 999999, tzinfo=None)``."

msgid ""
"The smallest possible difference between non-equal :class:`.datetime` "
"objects, ``timedelta(microseconds=1)``."
msgstr ""
"Найменша можлива різниця між нерівними об’єктами :class:`.datetime`, "
"``timedelta(microseconds=1)``."

msgid "In ``range(24)``."
msgstr "У діапазоні (24)."

msgid "In ``range(60)``."
msgstr "У ``діапазоні (60)``."

msgid "In ``range(1000000)``."
msgstr "У ``діапазоні (1000 000)``."

msgid ""
"The object passed as the *tzinfo* argument to the :class:`.datetime` "
"constructor, or ``None`` if none was passed."
msgstr ""
"Об’єкт передається як аргумент *tzinfo* конструктору :class:`.datetime` або "
"``None``, якщо жодного не було передано."

msgid ""
"In ``[0, 1]``. Used to disambiguate wall times during a repeated interval. "
"(A repeated interval occurs when clocks are rolled back at the end of "
"daylight saving time or when the UTC offset for the current zone is "
"decreased for political reasons.) The value 0 (1) represents the earlier "
"(later) of the two moments with the same wall time representation."
msgstr ""
"У ``[0, 1]``. Використовується для усунення неоднозначності часу стіни "
"протягом повторюваного інтервалу. (Повторюваний інтервал виникає, коли "
"годинники повертаються назад наприкінці літнього часу або коли зсув UTC для "
"поточної зони зменшується з політичних причин.) Значення 0 (1) представляє "
"ранній (пізніший) із двох моментів із однакове представлення часу на стіні."

msgid "``datetime2 = datetime1 + timedelta``"
msgstr "``datetime2 = datetime1 + timedelta``"

msgid "\\(1)"
msgstr "\\(1)"

msgid "``datetime2 = datetime1 - timedelta``"
msgstr "``datetime2 = datetime1 - timedelta``"

msgid "\\(2)"
msgstr "\\(2)"

msgid "``timedelta = datetime1 - datetime2``"
msgstr "``timedelta = datetime1 - datetime2``"

msgid "``datetime1 < datetime2``"
msgstr "``датачас1 < датачас2``"

msgid "Compares :class:`.datetime` to :class:`.datetime`. (4)"
msgstr "Порівнює :class:`.datetime` з :class:`.datetime`. (4)"

msgid ""
"datetime2 is a duration of timedelta removed from datetime1, moving forward "
"in time if ``timedelta.days`` > 0, or backward if ``timedelta.days`` < 0. "
"The result has the same :attr:`~.datetime.tzinfo` attribute as the input "
"datetime, and datetime2 - datetime1 == timedelta after. :exc:`OverflowError` "
"is raised if datetime2.year would be smaller than :const:`MINYEAR` or larger "
"than :const:`MAXYEAR`. Note that no time zone adjustments are done even if "
"the input is an aware object."
msgstr ""
"datetime2 — це тривалість дельти часу, вилученої з datetime1, переміщення "
"вперед у часі, якщо ``timedelta.days`` > 0, або назад, якщо ``timedelta."
"days`` < 0. Результат має той самий :attr:`~.datetime .tzinfo` атрибут як "
"вхідна дата і час, а datetime2 - datetime1 == timedelta після. :exc:"
"`OverflowError` виникає, якщо datetime2.year буде меншим за :const:`MINYEAR` "
"або більшим за :const:`MAXYEAR`. Зауважте, що коригування часового поясу не "
"виконується, навіть якщо введенням є відомий об’єкт."

msgid ""
"Computes the datetime2 such that datetime2 + timedelta == datetime1. As for "
"addition, the result has the same :attr:`~.datetime.tzinfo` attribute as the "
"input datetime, and no time zone adjustments are done even if the input is "
"aware."
msgstr ""
"Обчислює datetime2 так, що datetime2 + timedelta == datetime1. Що стосується "
"додавання, результат має той самий атрибут :attr:`~.datetime.tzinfo`, що й "
"дата-час введення, і коригування часового поясу не виконується, навіть якщо "
"введення відоме."

msgid ""
"Subtraction of a :class:`.datetime` from a :class:`.datetime` is defined "
"only if both operands are naive, or if both are aware. If one is aware and "
"the other is naive, :exc:`TypeError` is raised."
msgstr ""
"Віднімання :class:`.datetime` від :class:`.datetime` визначається, лише якщо "
"обидва операнди наївні, або якщо обидва знають. Якщо один знає, а інший "
"наївний, виникає :exc:`TypeError`."

msgid ""
"If both are naive, or both are aware and have the same :attr:`~.datetime."
"tzinfo` attribute, the :attr:`~.datetime.tzinfo` attributes are ignored, and "
"the result is a :class:`timedelta` object *t* such that ``datetime2 + t == "
"datetime1``. No time zone adjustments are done in this case."
msgstr ""
"Якщо обидва наївні, або обидва знають і мають однаковий атрибут :attr:`~."
"datetime.tzinfo`, атрибути :attr:`~.datetime.tzinfo` ігноруються, і "
"результатом є :class:`timedelta` об’єкт *t* такий, що ``datetime2 + t == "
"datetime1``. У цьому випадку коригування часового поясу не виконується."

msgid ""
"If both are aware and have different :attr:`~.datetime.tzinfo` attributes, "
"``a-b`` acts as if *a* and *b* were first converted to naive UTC datetimes "
"first. The result is ``(a.replace(tzinfo=None) - a.utcoffset()) - (b."
"replace(tzinfo=None) - b.utcoffset())`` except that the implementation never "
"overflows."
msgstr ""
"Якщо обидва знають і мають різні атрибути :attr:`~.datetime.tzinfo`, ``a-b`` "
"діє так, ніби *a* і *b* спочатку були перетворені на звичайні UTC дати та "
"часи. Результатом є ``(a.replace(tzinfo=None) - a.utcoffset()) - (b."
"replace(tzinfo=None) - b.utcoffset())`` за винятком того, що реалізація "
"ніколи не переповнюється."

msgid ""
"*datetime1* is considered less than *datetime2* when *datetime1* precedes "
"*datetime2* in time."
msgstr ""
"*datetime1* вважається меншим за *datetime2*, якщо *datetime1* передує "
"*datetime2* за часом."

msgid ""
"If one comparand is naive and the other is aware, :exc:`TypeError` is raised "
"if an order comparison is attempted. For equality comparisons, naive "
"instances are never equal to aware instances."
msgstr ""
"Якщо один компаранд наївний, а інший відомий, :exc:`TypeError` викликається "
"під час спроби порівняння порядку. Для порівняння рівності наївні екземпляри "
"ніколи не дорівнюють усвідомленим екземплярам."

msgid ""
"If both comparands are aware, and have the same :attr:`~.datetime.tzinfo` "
"attribute, the common :attr:`~.datetime.tzinfo` attribute is ignored and the "
"base datetimes are compared. If both comparands are aware and have "
"different :attr:`~.datetime.tzinfo` attributes, the comparands are first "
"adjusted by subtracting their UTC offsets (obtained from ``self."
"utcoffset()``)."
msgstr ""
"Якщо обидва компаранди знають і мають однаковий атрибут :attr:`~.datetime."
"tzinfo`, загальний атрибут :attr:`~.datetime.tzinfo` ігнорується, а базові "
"дати-часи порівнюються. Якщо обидва компаранди знають і мають різні "
"атрибути :attr:`~.datetime.tzinfo`, компаранди спочатку коригуються шляхом "
"віднімання їхніх зсувів UTC (отриманих із ``self.utcoffset()``)."

msgid ""
"Equality comparisons between aware and naive :class:`.datetime` instances "
"don't raise :exc:`TypeError`."
msgstr ""
"Порівняння рівності між обізнаними та наївними екземплярами :class:`."
"datetime` не викликає :exc:`TypeError`."

msgid ""
"In order to stop comparison from falling back to the default scheme of "
"comparing object addresses, datetime comparison normally raises :exc:"
"`TypeError` if the other comparand isn't also a :class:`.datetime` object. "
"However, ``NotImplemented`` is returned instead if the other comparand has "
"a :meth:`timetuple` attribute. This hook gives other kinds of date objects a "
"chance at implementing mixed-type comparison. If not, when a :class:`."
"datetime` object is compared to an object of a different type, :exc:"
"`TypeError` is raised unless the comparison is ``==`` or ``!=``. The latter "
"cases return :const:`False` or :const:`True`, respectively."
msgstr ""
"Щоб зупинити порівняння від повернення до типової схеми порівняння адрес "
"об’єктів, порівняння дати й часу зазвичай викликає :exc:`TypeError`, якщо "
"інший порівнюваний не є також об’єктом :class:`.datetime`. Однак натомість "
"повертається ``NotImplemented``, якщо інший компаранд має атрибут :meth:"
"`timetuple`. Цей хук дає іншим видам об’єктів дати можливість реалізувати "
"порівняння змішаного типу. Якщо ні, коли об’єкт :class:`.datetime` "
"порівнюється з об’єктом іншого типу, виникає :exc:`TypeError`, якщо "
"порівняння не ``==`` або ``!=``. Останні випадки повертають :const:`False` "
"або :const:`True` відповідно."

msgid "Return :class:`date` object with same year, month and day."
msgstr "Повертає об’єкт :class:`date` з тим самим роком, місяцем і днем."

msgid ""
"Return :class:`.time` object with same hour, minute, second, microsecond and "
"fold. :attr:`.tzinfo` is ``None``. See also method :meth:`timetz`."
msgstr ""
"Повертає об’єкт :class:`.time` із тією самою годиною, хвилиною, секундою, "
"мікросекундою та згортанням. :attr:`.tzinfo` — це ``None``. Дивіться також "
"метод :meth:`timetz`."

msgid "The fold value is copied to the returned :class:`.time` object."
msgstr "Значення згортання копіюється до повернутого об’єкта :class:`.time`."

msgid ""
"Return :class:`.time` object with same hour, minute, second, microsecond, "
"fold, and tzinfo attributes. See also method :meth:`time`."
msgstr ""
"Повертає об’єкт :class:`.time` з такими самими атрибутами: година, хвилина, "
"секунда, мікросекунда, згортання та tzinfo. Дивіться також метод :meth:"
"`time`."

msgid ""
"Return a datetime with the same attributes, except for those attributes "
"given new values by whichever keyword arguments are specified. Note that "
"``tzinfo=None`` can be specified to create a naive datetime from an aware "
"datetime with no conversion of date and time data."
msgstr ""
"Повертає дату й час із тими самими атрибутами, за винятком тих атрибутів, "
"яким надано нові значення за будь-якими аргументами ключового слова. "
"Зауважте, що ``tzinfo=None`` можна вказати для створення простої дати-часу з "
"усвідомленої дати-часу без перетворення даних дати й часу."

msgid ""
"Return a :class:`.datetime` object with new :attr:`.tzinfo` attribute *tz*, "
"adjusting the date and time data so the result is the same UTC time as "
"*self*, but in *tz*'s local time."
msgstr ""
"Повертає об’єкт :class:`.datetime` з новим атрибутом :attr:`.tzinfo` *tz*, "
"регулюючи дані дати й часу таким чином, щоб результат був таким самим часом "
"UTC, як *self*, але в *tz* місцевий час."

msgid ""
"If provided, *tz* must be an instance of a :class:`tzinfo` subclass, and "
"its :meth:`utcoffset` and :meth:`dst` methods must not return ``None``. If "
"*self* is naive, it is presumed to represent time in the system timezone."
msgstr ""
"Якщо вказано, *tz* має бути екземпляром підкласу :class:`tzinfo`, а його "
"методи :meth:`utcoffset` і :meth:`dst` не повинні повертати ``None``. Якщо "
"*self* наївний, вважається, що він представляє час у часовому поясі системи."

msgid ""
"If called without arguments (or with ``tz=None``) the system local timezone "
"is assumed for the target timezone. The ``.tzinfo`` attribute of the "
"converted datetime instance will be set to an instance of :class:`timezone` "
"with the zone name and offset obtained from the OS."
msgstr ""
"Якщо викликати без аргументів (або з ``tz=None``), системний локальний "
"часовий пояс передбачається як цільовий часовий пояс. Атрибут ``.tzinfo`` "
"перетвореного екземпляра datetime буде встановлено на екземпляр :class:"
"`timezone` з назвою зони та зміщенням, отриманими від ОС."

msgid ""
"If ``self.tzinfo`` is *tz*, ``self.astimezone(tz)`` is equal to *self*:  no "
"adjustment of date or time data is performed. Else the result is local time "
"in the timezone *tz*, representing the same UTC time as *self*:  after "
"``astz = dt.astimezone(tz)``, ``astz - astz.utcoffset()`` will have the same "
"date and time data as ``dt - dt.utcoffset()``."
msgstr ""
"Якщо ``self.tzinfo`` дорівнює *tz*, ``self.astimezone(tz)`` дорівнює *self*: "
"коригування даних дати чи часу не виконується. Інакше результатом є місцевий "
"час у часовому поясі *tz*, який представляє той самий час UTC, що й *self*: "
"після ``astz = dt.astimezone(tz)``, ``astz - astz.utcoffset()`` матиме ті "
"самі дані про дату й час, що й у ``dt - dt.utcoffset()``."

msgid ""
"If you merely want to attach a time zone object *tz* to a datetime *dt* "
"without adjustment of date and time data, use ``dt.replace(tzinfo=tz)``. If "
"you merely want to remove the time zone object from an aware datetime *dt* "
"without conversion of date and time data, use ``dt.replace(tzinfo=None)``."
msgstr ""
"Якщо ви просто хочете приєднати об’єкт часового поясу *tz* до дати і часу "
"*dt* без коригування даних дати й часу, використовуйте ``dt."
"replace(tzinfo=tz)``. Якщо ви просто хочете видалити об’єкт часового поясу з "
"відомого datetime *dt* без перетворення даних дати та часу, використовуйте "
"``dt.replace(tzinfo=None)``."

msgid ""
"Note that the default :meth:`tzinfo.fromutc` method can be overridden in a :"
"class:`tzinfo` subclass to affect the result returned by :meth:`astimezone`. "
"Ignoring error cases, :meth:`astimezone` acts like::"
msgstr ""
"Зауважте, що стандартний метод :meth:`tzinfo.fromutc` можна замінити в "
"підкласі :class:`tzinfo`, щоб вплинути на результат, який повертає :meth:"
"`astimezone`. Ігноруючи випадки помилок, :meth:`astimezone` діє як:"

msgid "*tz* now can be omitted."
msgstr "*tz* тепер можна опустити."

msgid ""
"The :meth:`astimezone` method can now be called on naive instances that are "
"presumed to represent system local time."
msgstr ""
"Метод :meth:`astimezone` тепер можна викликати в простих екземплярах, які, "
"як припускається, представляють місцевий час системи."

msgid ""
"If :attr:`.tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"utcoffset(self)``, and raises an exception if the latter doesn't return "
"``None`` or a :class:`timedelta` object with magnitude less than one day."
msgstr ""
"Якщо :attr:`.tzinfo` має значення ``None``, повертає ``None``, інакше "
"повертає ``self.tzinfo.utcoffset(self)`` і викликає виняток, якщо останній "
"не повертає ``None`` або об’єкт :class:`timedelta` з величиною менше одного "
"дня."

msgid "The UTC offset is not restricted to a whole number of minutes."
msgstr "Зсув UTC не обмежений цілою кількістю хвилин."

msgid ""
"If :attr:`.tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"dst(self)``, and raises an exception if the latter doesn't return ``None`` "
"or a :class:`timedelta` object with magnitude less than one day."
msgstr ""
"Якщо :attr:`.tzinfo` має значення ``None``, повертає ``None``, інакше "
"повертає ``self.tzinfo.dst(self)`` і викликає виняток, якщо останній не "
"повертає ``None`` або об’єкт :class:`timedelta` з величиною менше одного дня."

msgid "The DST offset is not restricted to a whole number of minutes."
msgstr "Зміщення літнього часу не обмежується цілою кількістю хвилин."

msgid ""
"If :attr:`.tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"tzname(self)``, raises an exception if the latter doesn't return ``None`` or "
"a string object,"
msgstr ""
"Якщо :attr:`.tzinfo` має значення ``None``, повертає ``None``, інакше "
"повертає ``self.tzinfo.tzname(self)``, викликає виняток, якщо останній не "
"повертає ``None`` або рядковий об’єкт,"

msgid ""
"where ``yday = d.toordinal() - date(d.year, 1, 1).toordinal() + 1`` is the "
"day number within the current year starting with ``1`` for January 1st. The :"
"attr:`tm_isdst` flag of the result is set according to the :meth:`dst` "
"method: :attr:`.tzinfo` is ``None`` or :meth:`dst` returns ``None``, :attr:"
"`tm_isdst` is set to ``-1``; else if :meth:`dst` returns a non-zero value, :"
"attr:`tm_isdst` is set to ``1``; else :attr:`tm_isdst` is set to ``0``."
msgstr ""
"де ``yday = d.toordinal() - date(d.year, 1, 1).toordinal() + 1`` — це номер "
"дня в поточному році, починаючи з ``1`` для 1 січня. Прапорець :attr:"
"`tm_isdst` результату встановлюється відповідно до методу :meth:`dst` :attr:"
"`.tzinfo` має значення ``None`` або :meth:`dst` повертає ``None`` , :attr:"
"`tm_isdst` має значення ``-1``; інакше, якщо :meth:`dst` повертає ненульове "
"значення, :attr:`tm_isdst` встановлюється на ``1``; інакше :attr:`tm_isdst` "
"встановлено на ``0``."

msgid ""
"If :class:`.datetime` instance *d* is naive, this is the same as ``d."
"timetuple()`` except that :attr:`tm_isdst` is forced to 0 regardless of what "
"``d.dst()`` returns. DST is never in effect for a UTC time."
msgstr ""
"Якщо :class:`.datetime` екземпляр *d* є простим, це те саме, що ``d."
"timetuple()``, за винятком того, що :attr:`tm_isdst` має значення 0 "
"незалежно від того, що ``d.dst( )`` повертається. Літній час ніколи не діє "
"протягом UTC."

msgid ""
"If *d* is aware, *d* is normalized to UTC time, by subtracting ``d."
"utcoffset()``, and a :class:`time.struct_time` for the normalized time is "
"returned. :attr:`tm_isdst` is forced to 0. Note that an :exc:`OverflowError` "
"may be raised if *d*.year was ``MINYEAR`` or ``MAXYEAR`` and UTC adjustment "
"spills over a year boundary."
msgstr ""
"Якщо *d* відомо, *d* нормалізується до часу UTC шляхом віднімання ``d."
"utcoffset()``, і повертається :class:`time.struct_time` для нормалізованого "
"часу. :attr:`tm_isdst` має значення 0. Зауважте, що :exc:`OverflowError` "
"може виникнути, якщо *d*.year був ``MINYEAR`` або ``MAXYEAR``, а коригування "
"UTC виходить за межі року."

msgid ""
"Because naive ``datetime`` objects are treated by many ``datetime`` methods "
"as local times, it is preferred to use aware datetimes to represent times in "
"UTC; as a result, using ``utcfromtimetuple`` may give misleading results. If "
"you have a naive ``datetime`` representing UTC, use ``datetime."
"replace(tzinfo=timezone.utc)`` to make it aware, at which point you can use :"
"meth:`.datetime.timetuple`."
msgstr ""
"Оскільки наївні об’єкти ``datetime`` обробляються багатьма методами "
"``datetime`` як місцевий час, бажано використовувати відомі дати для "
"представлення часу в UTC; в результаті використання ``utcfromtimetuple`` "
"може дати оманливі результати. Якщо у вас є простий ``datetime``, який "
"представляє UTC, використовуйте ``datetime.replace(tzinfo=timezone.utc)``, "
"щоб це було відомо, після чого ви можете використовувати :meth:`.datetime."
"timetuple`."

msgid ""
"Return the proleptic Gregorian ordinal of the date. The same as ``self."
"date().toordinal()``."
msgstr ""
"Повертає пролептичний григоріанський порядковий номер дати. Те саме, що "
"``self.date().toordinal()``."

msgid ""
"Return POSIX timestamp corresponding to the :class:`.datetime` instance. The "
"return value is a :class:`float` similar to that returned by :func:`time."
"time`."
msgstr ""
"Повертає позначку часу POSIX, що відповідає екземпляру :class:`.datetime`. "
"Значення, що повертається, є :class:`float`, подібне до того, яке повертає :"
"func:`time.time`."

msgid ""
"Naive :class:`.datetime` instances are assumed to represent local time and "
"this method relies on the platform C :c:func:`mktime` function to perform "
"the conversion. Since :class:`.datetime` supports wider range of values "
"than :c:func:`mktime` on many platforms, this method may raise :exc:"
"`OverflowError` for times far in the past or far in the future."
msgstr ""
"Передбачається, що наивні екземпляри :class:`.datetime` представляють "
"місцевий час, і цей метод покладається на функцію C :c:func:`mktime` "
"платформи для виконання перетворення. Оскільки :class:`.datetime` підтримує "
"ширший діапазон значень, ніж :c:func:`mktime` на багатьох платформах, цей "
"метод може викликати :exc:`OverflowError` для часів далеко в минулому або "
"далекого майбутнього."

msgid ""
"For aware :class:`.datetime` instances, the return value is computed as::"
msgstr ""
"Для екземплярів aware :class:`.datetime` значення, що повертається, "
"обчислюється як:"

msgid ""
"The :meth:`timestamp` method uses the :attr:`.fold` attribute to "
"disambiguate the times during a repeated interval."
msgstr ""
"Метод :meth:`timestamp` використовує атрибут :attr:`.fold`, щоб усунути "
"неоднозначність часу протягом повторюваного інтервалу."

msgid ""
"There is no method to obtain the POSIX timestamp directly from a naive :"
"class:`.datetime` instance representing UTC time. If your application uses "
"this convention and your system timezone is not set to UTC, you can obtain "
"the POSIX timestamp by supplying ``tzinfo=timezone.utc``::"
msgstr ""
"Немає способу отримати мітку часу POSIX безпосередньо з простого екземпляра :"
"class:`.datetime`, що представляє час UTC. Якщо ваша програма використовує "
"цю угоду, а системний часовий пояс не встановлено на UTC, ви можете отримати "
"мітку часу POSIX, надавши ``tzinfo=timezone.utc``::"

msgid "or by calculating the timestamp directly::"
msgstr "або шляхом безпосереднього обчислення позначки часу:"

msgid ""
"Return the day of the week as an integer, where Monday is 0 and Sunday is 6. "
"The same as ``self.date().weekday()``. See also :meth:`isoweekday`."
msgstr ""
"Повертає день тижня як ціле число, де понеділок дорівнює 0, а неділя – 6. Те "
"саме, що ``self.date().weekday()``. Дивіться також :meth:`isoweekday`."

msgid ""
"Return the day of the week as an integer, where Monday is 1 and Sunday is 7. "
"The same as ``self.date().isoweekday()``. See also :meth:`weekday`, :meth:"
"`isocalendar`."
msgstr ""
"Повертає день тижня як ціле число, де понеділок — 1, а неділя — 7. Те саме, "
"що ``self.date().isoweekday()``. Дивіться також :meth:`weekday`, :meth:"
"`isocalendar`."

msgid ""
"Return a :term:`named tuple` with three components: ``year``, ``week`` and "
"``weekday``. The same as ``self.date().isocalendar()``."
msgstr ""
"Повертає :term:`named tuple` із трьома компонентами: ``рік``, ``тиждень`` і "
"``день тижня``. Те саме, що ``self.date().isocalendar()``."

msgid "Return a string representing the date and time in ISO 8601 format:"
msgstr "Повертає рядок, що представляє дату й час у форматі ISO 8601:"

msgid "``YYYY-MM-DDTHH:MM:SS.ffffff``, if :attr:`microsecond` is not 0"
msgstr "``РРРР-ММ-ДДТГГ:ММ:СС.ffffff``, якщо :attr:`microsecond` не дорівнює 0"

msgid "``YYYY-MM-DDTHH:MM:SS``, if :attr:`microsecond` is 0"
msgstr "``РРРР-ММ-ДДТГГ:ХМ:СС``, якщо :attr:`microsecond` дорівнює 0"

msgid ""
"If :meth:`utcoffset` does not return ``None``, a string is appended, giving "
"the UTC offset:"
msgstr ""
"Якщо :meth:`utcoffset` не повертає ``None``, додається рядок із зміщенням "
"UTC:"

msgid ""
"``YYYY-MM-DDTHH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]``, if :attr:`microsecond` "
"is not 0"
msgstr ""
"``РРРР-ММ-ДДТГГ:ММ:СС.ffffff+ГГ:ММ[:СС[.ffffff]]``, якщо :attr:`microsecond` "
"не дорівнює 0"

msgid ""
"``YYYY-MM-DDTHH:MM:SS+HH:MM[:SS[.ffffff]]``,  if :attr:`microsecond` is 0"
msgstr ""
"``РРРР-ММ-ДДТГГ:ММ:СС+ГГ:ХМ[:СС[.ffffff]]``, якщо :attr:`microsecond` "
"дорівнює 0"

msgid ""
"The optional argument *sep* (default ``'T'``) is a one-character separator, "
"placed between the date and time portions of the result. For example::"
msgstr ""
"Необов’язковий аргумент *sep* (за замовчуванням ``'T'``) є односимвольним "
"роздільником, який розміщується між частинами дати та часу результату. "
"Наприклад::"

msgid ""
"The optional argument *timespec* specifies the number of additional "
"components of the time to include (the default is ``'auto'``). It can be one "
"of the following:"
msgstr ""
"Необов'язковий аргумент *timespec* визначає кількість додаткових компонентів "
"часу, які потрібно включити (за замовчуванням це ``'auto'``). Це може бути "
"одне з наступного:"

msgid ""
"``'auto'``: Same as ``'seconds'`` if :attr:`microsecond` is 0, same as "
"``'microseconds'`` otherwise."
msgstr ""
"``'auto'``: те саме, що ``'seconds'``, якщо :attr:`microsecond` дорівнює 0, "
"те ж саме, що ``'microseconds'`` інакше."

msgid "``'hours'``: Include the :attr:`hour` in the two-digit ``HH`` format."
msgstr "``'hours'``: Додайте :attr:`hour` у двозначному форматі ``HH``."

msgid ""
"``'minutes'``: Include :attr:`hour` and :attr:`minute` in ``HH:MM`` format."
msgstr ""
"``'хвилини'``: включайте :attr:`hour` і :attr:`minute` у форматі ``ГГ:ХХ``."

msgid ""
"``'seconds'``: Include :attr:`hour`, :attr:`minute`, and :attr:`second` in "
"``HH:MM:SS`` format."
msgstr ""
"``'seconds'``: включайте :attr:`hour`, :attr:`minute` і :attr:`second` у "
"форматі ``HH:MM:SS``."

msgid ""
"``'milliseconds'``: Include full time, but truncate fractional second part "
"to milliseconds. ``HH:MM:SS.sss`` format."
msgstr ""
"``'мілісекунди``: включити повний час, але скоротити дробову другу частину "
"до мілісекунд. Формат ``HH:MM:SS.sss``."

msgid "``'microseconds'``: Include full time in ``HH:MM:SS.ffffff`` format."
msgstr "``'мікросекунди``: включіть повний час у форматі ``ГГ:ХХ:СС.ffffff``."

msgid "Excluded time components are truncated, not rounded."
msgstr "Виключені компоненти часу скорочуються, а не округлюються."

msgid ":exc:`ValueError` will be raised on an invalid *timespec* argument::"
msgstr ":exc:`ValueError` буде викликано через недійсний аргумент *timespec*::"

msgid "Added the *timespec* argument."
msgstr "Додано аргумент *timespec*."

msgid ""
"For a :class:`.datetime` instance *d*, ``str(d)`` is equivalent to ``d."
"isoformat(' ')``."
msgstr ""
"Для екземпляра :class:`.datetime` *d*, ``str(d)`` еквівалентно ``d."
"isoformat(' ')``."

msgid "Return a string representing the date and time::"
msgstr "Повертає рядок, що представляє дату й час::"

msgid ""
"The output string will *not* include time zone information, regardless of "
"whether the input is aware or naive."
msgstr ""
"Рядок виводу *не* включатиме інформацію про часовий пояс, незалежно від "
"того, чи є введення відомим чи простим."

msgid ""
"on platforms where the native C :c:func:`ctime` function (which :func:`time."
"ctime` invokes, but which :meth:`datetime.ctime` does not invoke) conforms "
"to the C standard."
msgstr ""
"на платформах, де рідна функція C :c:func:`ctime` (яку :func:`time.ctime` "
"викликає, але яку :meth:`datetime.ctime` не викликає) відповідає стандарту C."

msgid ""
"Return a string representing the date and time, controlled by an explicit "
"format string. For a complete list of formatting directives, see :ref:"
"`strftime-strptime-behavior`."
msgstr ""
"Повертає рядок, що представляє дату й час, керований рядком явного формату. "
"Щоб отримати повний список директив форматування, перегляньте :ref:`strftime-"
"strptime-behavior`."

msgid ""
"Same as :meth:`.datetime.strftime`. This makes it possible to specify a "
"format string for a :class:`.datetime` object in :ref:`formatted string "
"literals <f-strings>` and when using :meth:`str.format`. For a complete list "
"of formatting directives, see :ref:`strftime-strptime-behavior`."
msgstr ""
"Те саме, що :meth:`.datetime.strftime`. Це дає змогу вказати рядок формату "
"для об’єкта :class:`.datetime` у :ref:`форматованих рядкових літералах <f-"
"strings>` і при використанні :meth:`str.format`. Щоб отримати повний список "
"директив форматування, перегляньте :ref:`strftime-strptime-behavior`."

msgid "Examples of Usage: :class:`.datetime`"
msgstr "Приклади використання: :class:`.datetime`"

msgid "Examples of working with :class:`~datetime.datetime` objects:"
msgstr "Приклади роботи з об'єктами :class:`~datetime.datetime`:"

msgid ""
"The example below defines a :class:`tzinfo` subclass capturing time zone "
"information for Kabul, Afghanistan, which used +4 UTC until 1945 and then "
"+4:30 UTC thereafter::"
msgstr ""
"У наведеному нижче прикладі визначено підклас :class:`tzinfo`, який збирає "
"інформацію про часовий пояс для Кабула, Афганістан, який використовував +4 "
"UTC до 1945 року, а потім +4:30 UTC після цього::"

msgid "Usage of ``KabulTz`` from above::"
msgstr "Використання ``KabulTz`` зверху::"

msgid ":class:`.time` Objects"
msgstr ":class:`.time` Об'єкти"

msgid ""
"A :class:`time` object represents a (local) time of day, independent of any "
"particular day, and subject to adjustment via a :class:`tzinfo` object."
msgstr ""
"Об’єкт :class:`time` представляє (локальний) час доби, незалежний від будь-"
"якого конкретного дня, і підлягає налаштуванню через об’єкт :class:`tzinfo`."

msgid ""
"All arguments are optional. *tzinfo* may be ``None``, or an instance of a :"
"class:`tzinfo` subclass. The remaining arguments must be integers in the "
"following ranges:"
msgstr ""
"Усі аргументи необов’язкові. *tzinfo* може бути ``None`` або екземпляром "
"підкласу :class:`tzinfo`. Решта аргументів мають бути цілими числами в таких "
"діапазонах:"

msgid ""
"If an argument outside those ranges is given, :exc:`ValueError` is raised. "
"All default to ``0`` except *tzinfo*, which defaults to :const:`None`."
msgstr ""
"Якщо вказано аргумент поза цими діапазонами, виникає :exc:`ValueError`. Усі "
"за замовчуванням мають значення ``0``, крім *tzinfo*, для якого за "
"замовчуванням :const:`None`."

msgid "The earliest representable :class:`.time`, ``time(0, 0, 0, 0)``."
msgstr "Найперший представлений :class:`.time`, ``time(0, 0, 0, 0)``."

msgid "The latest representable :class:`.time`, ``time(23, 59, 59, 999999)``."
msgstr "Останній представлений :class:`.time`, ``time(23, 59, 59, 999999)``."

msgid ""
"The smallest possible difference between non-equal :class:`.time` objects, "
"``timedelta(microseconds=1)``, although note that arithmetic on :class:`."
"time` objects is not supported."
msgstr ""
"Найменша можлива різниця між нерівними об’єктами :class:`.time`, "
"``timedelta(microseconds=1)``, хоча зауважте, що арифметика в об’єктах :"
"class:`.time` не підтримується."

msgid ""
"The object passed as the tzinfo argument to the :class:`.time` constructor, "
"or ``None`` if none was passed."
msgstr ""
"Об’єкт, переданий як аргумент tzinfo конструктору :class:`.time`, або "
"``None``, якщо жодного не було передано."

msgid ""
":class:`.time` objects support comparison of :class:`.time` to :class:`."
"time`, where *a* is considered less than *b* when *a* precedes *b* in time. "
"If one comparand is naive and the other is aware, :exc:`TypeError` is raised "
"if an order comparison is attempted. For equality comparisons, naive "
"instances are never equal to aware instances."
msgstr ""
"Об’єкти :class:`.time` підтримують порівняння :class:`.time` з :class:`."
"time`, де *a* вважається меншим за *b*, коли *a* передує *b* за часом. Якщо "
"один компаранд наївний, а інший відомий, :exc:`TypeError` викликається під "
"час спроби порівняння порядку. Для порівняння рівності наївні екземпляри "
"ніколи не дорівнюють усвідомленим екземплярам."

msgid ""
"If both comparands are aware, and have the same :attr:`~time.tzinfo` "
"attribute, the common :attr:`~time.tzinfo` attribute is ignored and the base "
"times are compared. If both comparands are aware and have different :attr:"
"`~time.tzinfo` attributes, the comparands are first adjusted by subtracting "
"their UTC offsets (obtained from ``self.utcoffset()``). In order to stop "
"mixed-type comparisons from falling back to the default comparison by object "
"address, when a :class:`.time` object is compared to an object of a "
"different type, :exc:`TypeError` is raised unless the comparison is ``==`` "
"or ``!=``. The latter cases return :const:`False` or :const:`True`, "
"respectively."
msgstr ""
"Якщо обидва компаранди знають і мають однаковий атрибут :attr:`~time."
"tzinfo`, загальний атрибут :attr:`~time.tzinfo` ігнорується, а базовий час "
"порівнюється. Якщо обидва компаранди знають і мають різні атрибути :attr:"
"`~time.tzinfo`, компаранди спочатку коригуються шляхом віднімання їхніх "
"зсувів UTC (отриманих із ``self.utcoffset()``). Щоб зупинити порівняння "
"змішаного типу від повернення до стандартного порівняння за адресою об’єкта, "
"коли об’єкт :class:`.time` порівнюється з об’єктом іншого типу, виникає :exc:"
"`TypeError`, якщо порівняння не це ``==`` або ``!=``. Останні випадки "
"повертають :const:`False` або :const:`True` відповідно."

msgid ""
"Equality comparisons between aware and naive :class:`~datetime.time` "
"instances don't raise :exc:`TypeError`."
msgstr ""
"Порівняння рівності між усвідомленими та наївними екземплярами :class:"
"`~datetime.time` не викликає :exc:`TypeError`."

msgid ""
"In Boolean contexts, a :class:`.time` object is always considered to be true."
msgstr ""
"У логічних контекстах об’єкт :class:`.time` завжди вважається істинним."

msgid ""
"Before Python 3.5, a :class:`.time` object was considered to be false if it "
"represented midnight in UTC. This behavior was considered obscure and error-"
"prone and has been removed in Python 3.5. See :issue:`13936` for full "
"details."
msgstr ""
"До Python 3.5 об’єкт :class:`.time` вважався хибним, якщо він представляв "
"північ за UTC. Така поведінка вважалася незрозумілою та спроможною до "
"помилок, і її було видалено в Python 3.5. Дивіться :issue:`13936` для "
"отримання повної інформації."

msgid "Other constructor:"
msgstr "Інший конструктор:"

msgid ""
"Return a :class:`.time` corresponding to a *time_string* in any valid ISO "
"8601 format, with the following exceptions:"
msgstr ""

msgid ""
"The leading ``T``, normally required in cases where there may be ambiguity "
"between a date and a time, is not required."
msgstr ""

msgid ""
"Fractional seconds may have any number of digits (anything beyond 6 will be "
"truncated)."
msgstr ""

msgid ""
"Previously, this method only supported formats that could be emitted by :"
"meth:`time.isoformat()`."
msgstr ""

msgid ""
"Return a :class:`.time` with the same value, except for those attributes "
"given new values by whichever keyword arguments are specified. Note that "
"``tzinfo=None`` can be specified to create a naive :class:`.time` from an "
"aware :class:`.time`, without conversion of the time data."
msgstr ""
"Повертає :class:`.time` з тим самим значенням, за винятком тих атрибутів, "
"яким надано нові значення за будь-якими аргументами ключового слова. "
"Зауважте, що ``tzinfo=None`` можна вказати для створення простого :class:`."
"time` із відомого :class:`.time` без перетворення даних часу."

msgid "Return a string representing the time in ISO 8601 format, one of:"
msgstr "Повертає рядок, що представляє час у форматі ISO 8601, один із:"

msgid "``HH:MM:SS.ffffff``, if :attr:`microsecond` is not 0"
msgstr "``HH:MM:SS.ffffff``, якщо :attr:`microsecond` не дорівнює 0"

msgid "``HH:MM:SS``, if :attr:`microsecond` is 0"
msgstr "``ГГ:ХХ:СС``, якщо :attr:`microsecond` дорівнює 0"

msgid ""
"``HH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]``, if :meth:`utcoffset` does not "
"return ``None``"
msgstr ""
"``HH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]``, якщо :meth:`utcoffset` не повертає "
"``None``"

msgid ""
"``HH:MM:SS+HH:MM[:SS[.ffffff]]``, if :attr:`microsecond` is 0 and :meth:"
"`utcoffset` does not return ``None``"
msgstr ""
"``ГГ:ХМ:СС+ГГ:ХМ[:СС[.ffffff]]``, якщо :attr:`microsecond` дорівнює 0 і :"
"meth:`utcoffset` не повертає ``None``"

msgid ":exc:`ValueError` will be raised on an invalid *timespec* argument."
msgstr ":exc:`ValueError` буде викликано через недійсний аргумент *timespec*."

msgid "For a time *t*, ``str(t)`` is equivalent to ``t.isoformat()``."
msgstr "Протягом часу *t* ``str(t)`` еквівалентно ``t.isoformat()``."

msgid ""
"Return a string representing the time, controlled by an explicit format "
"string. For a complete list of formatting directives, see :ref:`strftime-"
"strptime-behavior`."
msgstr ""
"Повертає рядок, що представляє час, керований рядком явного формату. Щоб "
"отримати повний список директив форматування, перегляньте :ref:`strftime-"
"strptime-behavior`."

msgid ""
"Same as :meth:`.time.strftime`. This makes it possible to specify a format "
"string for a :class:`.time` object in :ref:`formatted string literals <f-"
"strings>` and when using :meth:`str.format`. For a complete list of "
"formatting directives, see :ref:`strftime-strptime-behavior`."
msgstr ""
"Те саме, що :meth:`.time.strftime`. Це дає змогу вказати рядок формату для "
"об’єкта :class:`.time` у :ref:`форматованих рядкових літералах <f-strings>` "
"і при використанні :meth:`str.format`. Щоб отримати повний список директив "
"форматування, перегляньте :ref:`strftime-strptime-behavior`."

msgid ""
"If :attr:`.tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"utcoffset(None)``, and raises an exception if the latter doesn't return "
"``None`` or a :class:`timedelta` object with magnitude less than one day."
msgstr ""
"Якщо :attr:`.tzinfo` має значення ``None``, повертає ``None``, інакше "
"повертає ``self.tzinfo.utcoffset(None)`` і викликає виняток, якщо останній "
"не повертає ``None`` або об’єкт :class:`timedelta` з величиною менше одного "
"дня."

msgid ""
"If :attr:`.tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"dst(None)``, and raises an exception if the latter doesn't return ``None``, "
"or a :class:`timedelta` object with magnitude less than one day."
msgstr ""
"Якщо :attr:`.tzinfo` має значення ``None``, повертає ``None``, інакше "
"повертає ``self.tzinfo.dst(None)`` і викликає виняток, якщо останній не "
"повертає ``None`` або об’єкт :class:`timedelta` з величиною менше одного дня."

msgid ""
"If :attr:`.tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"tzname(None)``, or raises an exception if the latter doesn't return ``None`` "
"or a string object."
msgstr ""
"Якщо :attr:`.tzinfo` має значення ``None``, повертає ``None``, інакше "
"повертає ``self.tzinfo.tzname(None)`` або викликає виняток, якщо останній не "
"повертає ``None`` або рядковий об’єкт."

msgid "Examples of Usage: :class:`.time`"
msgstr "Приклади використання: :class:`.time`"

msgid "Examples of working with a :class:`.time` object::"
msgstr "Приклади роботи з об'єктом :class:`.time`::"

msgid ":class:`tzinfo` Objects"
msgstr ":class:`tzinfo` Об'єкти"

msgid ""
"This is an abstract base class, meaning that this class should not be "
"instantiated directly.  Define a subclass of :class:`tzinfo` to capture "
"information about a particular time zone."
msgstr ""
"Це абстрактний базовий клас, що означає, що цей клас не повинен створюватися "
"безпосередньо. Визначте підклас :class:`tzinfo` для отримання інформації про "
"певний часовий пояс."

msgid ""
"An instance of (a concrete subclass of) :class:`tzinfo` can be passed to the "
"constructors for :class:`.datetime` and :class:`.time` objects. The latter "
"objects view their attributes as being in local time, and the :class:"
"`tzinfo` object supports methods revealing offset of local time from UTC, "
"the name of the time zone, and DST offset, all relative to a date or time "
"object passed to them."
msgstr ""
"Екземпляр (конкретного підкласу) :class:`tzinfo` можна передати "
"конструкторам для об’єктів :class:`.datetime` і :class:`.time`. Останні "
"об’єкти розглядають свої атрибути як місцевий час, а об’єкт :class:`tzinfo` "
"підтримує методи, які виявляють зміщення місцевого часу від UTC, назви "
"часового поясу та зміщення літнього часу, усе відносно об’єкта дати чи часу "
"передано їм."

msgid ""
"You need to derive a concrete subclass, and (at least) supply "
"implementations of the standard :class:`tzinfo` methods needed by the :class:"
"`.datetime` methods you use. The :mod:`datetime` module provides :class:"
"`timezone`, a simple concrete subclass of :class:`tzinfo` which can "
"represent timezones with fixed offset from UTC such as UTC itself or North "
"American EST and EDT."
msgstr ""
"Вам потрібно вивести конкретний підклас і (принаймні) забезпечити реалізації "
"стандартних методів :class:`tzinfo`, необхідних для методів :class:`."
"datetime`, які ви використовуєте. Модуль :mod:`datetime` надає :class:"
"`timezone`, простий конкретний підклас :class:`tzinfo`, який може "
"представляти часові пояси з фіксованим зсувом відносно UTC, як-от сам UTC "
"або північноамериканський EST і EDT."

msgid ""
"Special requirement for pickling:  A :class:`tzinfo` subclass must have an :"
"meth:`__init__` method that can be called with no arguments, otherwise it "
"can be pickled but possibly not unpickled again. This is a technical "
"requirement that may be relaxed in the future."
msgstr ""
"Спеціальна вимога до маринування: підклас :class:`tzinfo` повинен мати "
"метод :meth:`__init__`, який можна викликати без аргументів, інакше його "
"можна маринувати, але, можливо, не скасувати знову. Це технічна вимога, яку "
"в майбутньому можуть послабити."

msgid ""
"A concrete subclass of :class:`tzinfo` may need to implement the following "
"methods. Exactly which methods are needed depends on the uses made of aware :"
"mod:`datetime` objects. If in doubt, simply implement all of them."
msgstr ""
"Конкретний підклас :class:`tzinfo` може потребувати реалізації наступних "
"методів. Які саме методи потрібні, залежить від використання відомих "
"об’єктів :mod:`datetime`. Якщо сумніваєтеся, просто застосуйте їх усі."

msgid ""
"Return offset of local time from UTC, as a :class:`timedelta` object that is "
"positive east of UTC. If local time is west of UTC, this should be negative."
msgstr ""
"Повертає зміщення місцевого часу від UTC, як об’єкт :class:`timedelta`, який "
"є позитивним на схід від UTC. Якщо місцевий час на захід від UTC, це "
"значення має бути від’ємним."

msgid ""
"This represents the *total* offset from UTC; for example, if a :class:"
"`tzinfo` object represents both time zone and DST adjustments, :meth:"
"`utcoffset` should return their sum. If the UTC offset isn't known, return "
"``None``. Else the value returned must be a :class:`timedelta` object "
"strictly between ``-timedelta(hours=24)`` and ``timedelta(hours=24)`` (the "
"magnitude of the offset must be less than one day). Most implementations of :"
"meth:`utcoffset` will probably look like one of these two::"
msgstr ""
"Це *загальне* зміщення від UTC; наприклад, якщо об’єкт :class:`tzinfo` "
"представляє коригування часового поясу та літнього часу, :meth:`utcoffset` "
"має повернути їх суму. Якщо зсув UTC невідомий, поверніть ``None``. Інакше "
"повернене значення має бути об’єктом :class:`timedelta` строго між ``-"
"timedelta(hours=24)`` і ``timedelta(hours=24)`` (величина зміщення має бути "
"меншою за один день ). Більшість реалізацій :meth:`utcoffset`, ймовірно, "
"виглядатимуть як одне з цих двох:"

msgid ""
"If :meth:`utcoffset` does not return ``None``, :meth:`dst` should not return "
"``None`` either."
msgstr ""
"Якщо :meth:`utcoffset` не повертає ``None``, :meth:`dst` також не має "
"повертати ``None``."

msgid ""
"The default implementation of :meth:`utcoffset` raises :exc:"
"`NotImplementedError`."
msgstr ""
"Стандартна реалізація :meth:`utcoffset` викликає :exc:`NotImplementedError`."

msgid ""
"Return the daylight saving time (DST) adjustment, as a :class:`timedelta` "
"object or ``None`` if DST information isn't known."
msgstr ""
"Повертає коригування літнього часу (DST) як об’єкт :class:`timedelta` або "
"``None``, якщо інформація про літній час невідома."

msgid ""
"Return ``timedelta(0)`` if DST is not in effect. If DST is in effect, return "
"the offset as a :class:`timedelta` object (see :meth:`utcoffset` for "
"details). Note that DST offset, if applicable, has already been added to the "
"UTC offset returned by :meth:`utcoffset`, so there's no need to consult :"
"meth:`dst` unless you're interested in obtaining DST info separately. For "
"example, :meth:`datetime.timetuple` calls its :attr:`~.datetime.tzinfo` "
"attribute's :meth:`dst` method to determine how the :attr:`tm_isdst` flag "
"should be set, and :meth:`tzinfo.fromutc` calls :meth:`dst` to account for "
"DST changes when crossing time zones."
msgstr ""
"Повертає ``timedelta(0)``, якщо літній час не діє. Якщо діє літній час, "
"поверніть зсув як об’єкт :class:`timedelta` (докладніше див. у :meth:"
"`utcoffset`). Зверніть увагу, що зсув літнього часу, якщо він застосовний, "
"уже додано до зсуву UTC, який повертає :meth:`utcoffset`, тому немає потреби "
"звертатися до :meth:`dst`, якщо ви не зацікавлені в отриманні інформації про "
"літній час окремо. Наприклад, :meth:`datetime.timetuple` викликає метод :"
"meth:`dst` свого атрибута :attr:`~.datetime.tzinfo`, щоб визначити, як слід "
"встановити прапор :attr:`tm_isdst`, і :meth:`tzinfo.fromutc` викликає :meth:"
"`dst` для врахування змін літнього часу під час перетину часових поясів."

msgid ""
"An instance *tz* of a :class:`tzinfo` subclass that models both standard and "
"daylight times must be consistent in this sense:"
msgstr ""
"Екземпляр *tz* підкласу :class:`tzinfo`, який моделює як стандартний, так і "
"денний час, має бути послідовним у цьому сенсі:"

msgid "``tz.utcoffset(dt) - tz.dst(dt)``"
msgstr "``tz.utcoffset(dt) - tz.dst(dt)``"

msgid ""
"must return the same result for every :class:`.datetime` *dt* with ``dt."
"tzinfo == tz``  For sane :class:`tzinfo` subclasses, this expression yields "
"the time zone's \"standard offset\", which should not depend on the date or "
"the time, but only on geographic location. The implementation of :meth:"
"`datetime.astimezone` relies on this, but cannot detect violations; it's the "
"programmer's responsibility to ensure it. If a :class:`tzinfo` subclass "
"cannot guarantee this, it may be able to override the default implementation "
"of :meth:`tzinfo.fromutc` to work correctly with :meth:`astimezone` "
"regardless."
msgstr ""
"повинен повертати той самий результат для кожного :class:`.datetime` *dt* з "
"``dt.tzinfo == tz`` Для розумних підкласів :class:`tzinfo` цей вираз дає "
"\"стандартний зсув\" часового поясу, який має залежати не від дати чи часу, "
"а лише від географічного розташування. Реалізація :meth:`datetime."
"astimezone` покладається на це, але не може виявити порушення; це "
"відповідальність програміста забезпечити це. Якщо підклас :class:`tzinfo` не "
"може гарантувати це, він може замінити реалізацію за замовчуванням :meth:"
"`tzinfo.fromutc` для правильної роботи з :meth:`astimezone` незалежно від "
"цього."

msgid ""
"Most implementations of :meth:`dst` will probably look like one of these "
"two::"
msgstr ""
"Більшість реалізацій :meth:`dst`, ймовірно, виглядатимуть як одна з цих двох:"

msgid "or::"
msgstr "або::"

msgid ""
"The default implementation of :meth:`dst` raises :exc:`NotImplementedError`."
msgstr "Стандартна реалізація :meth:`dst` викликає :exc:`NotImplementedError`."

msgid ""
"Return the time zone name corresponding to the :class:`.datetime` object "
"*dt*, as a string. Nothing about string names is defined by the :mod:"
"`datetime` module, and there's no requirement that it mean anything in "
"particular. For example, \"GMT\", \"UTC\", \"-500\", \"-5:00\", \"EDT\", "
"\"US/Eastern\", \"America/New York\" are all valid replies. Return ``None`` "
"if a string name isn't known. Note that this is a method rather than a fixed "
"string primarily because some :class:`tzinfo` subclasses will wish to return "
"different names depending on the specific value of *dt* passed, especially "
"if the :class:`tzinfo` class is accounting for daylight time."
msgstr ""
"Повертає назву часового поясу, що відповідає об’єкту :class:`.datetime` "
"*dt*, у вигляді рядка. Модуль :mod:`datetime` нічого не визначає щодо назв "
"рядків, і немає жодних вимог, щоб вони означали щось конкретне. Наприклад, "
"\"GMT\", \"UTC\", \"-500\", \"-5:00\", \"EDT\", \"US/Eastern\", \"America/"
"New York\" — усі дійсні відповіді. Повертає ``None``, якщо назва рядка "
"невідома. Зауважте, що це метод, а не фіксований рядок, перш за все тому, що "
"деякі підкласи :class:`tzinfo` бажають повертати різні імена залежно від "
"конкретного переданого значення *dt*, особливо якщо клас :class:`tzinfo` є "
"обліковим для світлового часу."

msgid ""
"The default implementation of :meth:`tzname` raises :exc:"
"`NotImplementedError`."
msgstr ""
"Стандартна реалізація :meth:`tzname` викликає :exc:`NotImplementedError`."

msgid ""
"These methods are called by a :class:`.datetime` or :class:`.time` object, "
"in response to their methods of the same names. A :class:`.datetime` object "
"passes itself as the argument, and a :class:`.time` object passes ``None`` "
"as the argument. A :class:`tzinfo` subclass's methods should therefore be "
"prepared to accept a *dt* argument of ``None``, or of class :class:`."
"datetime`."
msgstr ""
"Ці методи викликаються об’єктом :class:`.datetime` або :class:`.time` у "
"відповідь на їх однойменні методи. Об’єкт :class:`.datetime` передає себе як "
"аргумент, а об’єкт :class:`.time` передає ``None`` як аргумент. Таким чином, "
"методи підкласу :class:`tzinfo` повинні бути готові прийняти аргумент *dt* "
"``None`` або клас :class:`.datetime`."

msgid ""
"When ``None`` is passed, it's up to the class designer to decide the best "
"response. For example, returning ``None`` is appropriate if the class wishes "
"to say that time objects don't participate in the :class:`tzinfo` protocols. "
"It may be more useful for ``utcoffset(None)`` to return the standard UTC "
"offset, as there is no other convention for discovering the standard offset."
msgstr ""
"Коли передається ``None``, розробник класу вирішує найкращу відповідь. "
"Наприклад, повернення ``None`` є доцільним, якщо клас хоче сказати, що "
"об’єкти часу не беруть участі в протоколах :class:`tzinfo`. Може бути "
"кориснішим для ``utcoffset(None)`` повертати стандартне зміщення UTC, "
"оскільки немає іншої угоди для виявлення стандартного зсуву."

msgid ""
"When a :class:`.datetime` object is passed in response to a :class:`."
"datetime` method, ``dt.tzinfo`` is the same object as *self*. :class:"
"`tzinfo` methods can rely on this, unless user code calls :class:`tzinfo` "
"methods directly. The intent is that the :class:`tzinfo` methods interpret "
"*dt* as being in local time, and not need worry about objects in other "
"timezones."
msgstr ""
"Коли об’єкт :class:`.datetime` передається у відповідь на метод :class:`."
"datetime`, ``dt.tzinfo`` є тим самим об’єктом, що і *self*. Методи :class:"
"`tzinfo` можуть покладатися на це, якщо код користувача не викликає "
"безпосередньо методи :class:`tzinfo`. Метою є те, що методи :class:`tzinfo` "
"інтерпретують *dt* як місцевий час, і не потрібно турбуватися про об’єкти в "
"інших часових поясах."

msgid ""
"There is one more :class:`tzinfo` method that a subclass may wish to "
"override:"
msgstr ""
"Є ще один метод :class:`tzinfo`, який підклас може захотіти перевизначити:"

msgid ""
"This is called from the default :class:`datetime.astimezone()` "
"implementation. When called from that, ``dt.tzinfo`` is *self*, and *dt*'s "
"date and time data are to be viewed as expressing a UTC time. The purpose "
"of :meth:`fromutc` is to adjust the date and time data, returning an "
"equivalent datetime in *self*'s local time."
msgstr ""
"Це викликається із стандартної реалізації :class:`datetime.astimezone()`. "
"При виклику з нього ``dt.tzinfo`` є *власним*, а дані дати і часу *dt* "
"повинні розглядатися як такі, що виражають час UTC. Метою :meth:`fromutc` є "
"коригування даних дати й часу, повертаючи еквівалентну дату й час у "
"місцевому часі *self*."

msgid ""
"Most :class:`tzinfo` subclasses should be able to inherit the default :meth:"
"`fromutc` implementation without problems. It's strong enough to handle "
"fixed-offset time zones, and time zones accounting for both standard and "
"daylight time, and the latter even if the DST transition times differ in "
"different years. An example of a time zone the default :meth:`fromutc` "
"implementation may not handle correctly in all cases is one where the "
"standard offset (from UTC) depends on the specific date and time passed, "
"which can happen for political reasons. The default implementations of :meth:"
"`astimezone` and :meth:`fromutc` may not produce the result you want if the "
"result is one of the hours straddling the moment the standard offset changes."
msgstr ""
"Більшість підкласів :class:`tzinfo` повинні мати можливість без проблем "
"успадковувати реалізацію :meth:`fromutc` за умовчанням. Він достатньо "
"потужний, щоб обробляти часові пояси з фіксованим зміщенням, а також часові "
"пояси, що враховують як стандартний, так і денний час, причому останній, "
"навіть якщо час переходу на літній час відрізняється в різні роки. Прикладом "
"часового поясу, який стандартна реалізація :meth:`fromutc` може не обробляти "
"належним чином у всіх випадках, є той, де стандартне зміщення (від UTC) "
"залежить від конкретної дати та часу, що минули, що може статися з "
"політичних причин. Реалізації за замовчуванням :meth:`astimezone` і :meth:"
"`fromutc` можуть не дати бажаного результату, якщо результатом є одна з "
"годин, що перетинає момент зміни стандартного зсуву."

msgid ""
"Skipping code for error cases, the default :meth:`fromutc` implementation "
"acts like::"
msgstr ""
"Пропускаючи код для випадків помилки, реалізація за замовчуванням :meth:"
"`fromutc` діє як:"

msgid ""
"In the following :download:`tzinfo_examples.py <../includes/tzinfo_examples."
"py>` file there are some examples of :class:`tzinfo` classes:"
msgstr ""
"У наступному файлі :download:`tzinfo_examples.py <../includes/"
"tzinfo_examples.py>` є кілька прикладів класів :class:`tzinfo`:"

msgid ""
"Note that there are unavoidable subtleties twice per year in a :class:"
"`tzinfo` subclass accounting for both standard and daylight time, at the DST "
"transition points. For concreteness, consider US Eastern (UTC -0500), where "
"EDT begins the minute after 1:59 (EST) on the second Sunday in March, and "
"ends the minute after 1:59 (EDT) on the first Sunday in November::"
msgstr ""
"Зауважте, що є неминучі тонкощі двічі на рік у підкласі :class:`tzinfo`, що "
"враховує як стандартний, так і денний час, у точках переходу на літній час. "
"Для конкретності розглянемо Східну США (UTC -0500), де EDT починається через "
"хвилину після 1:59 (EST) у другу неділю березня та закінчується через "
"хвилину після 1:59 (EST) у першу неділю листопада:"

msgid ""
"When DST starts (the \"start\" line), the local wall clock leaps from 1:59 "
"to 3:00. A wall time of the form 2:MM doesn't really make sense on that day, "
"so ``astimezone(Eastern)`` won't deliver a result with ``hour == 2`` on the "
"day DST begins. For example, at the Spring forward transition of 2016, we "
"get::"
msgstr ""
"Коли починається літній час (рядок \"початок\"), місцевий настінний годинник "
"переходить з 1:59 на 3:00. Настінний час у формі 2:MM насправді не має сенсу "
"в цей день, тому ``astimezone(Eastern)`` не надасть результат з ``hour == "
"2`` у день початку літнього часу. Наприклад, під час весняного переходу "
"вперед 2016 року ми отримуємо:"

msgid ""
"When DST ends (the \"end\" line), there's a potentially worse problem: "
"there's an hour that can't be spelled unambiguously in local wall time: the "
"last hour of daylight time. In Eastern, that's times of the form 5:MM UTC on "
"the day daylight time ends. The local wall clock leaps from 1:59 (daylight "
"time) back to 1:00 (standard time) again. Local times of the form 1:MM are "
"ambiguous. :meth:`astimezone` mimics the local clock's behavior by mapping "
"two adjacent UTC hours into the same local hour then. In the Eastern "
"example, UTC times of the form 5:MM and 6:MM both map to 1:MM when converted "
"to Eastern, but earlier times have the :attr:`~datetime.fold` attribute set "
"to 0 and the later times have it set to 1. For example, at the Fall back "
"transition of 2016, we get::"
msgstr ""
"Коли літній час закінчується (рядок \"кінець\"), виникає потенційно гірша "
"проблема: є година, яку неможливо однозначно написати за місцевим настінним "
"часом: остання година денного часу. На Сході це час у формі 5:MM UTC на "
"кінець дня. Місцевий настінний годинник знову повертається з 1:59 (за денним "
"часом) до 1:00 (за стандартним часом). Місцевий час у формі 1:MM "
"неоднозначний. :meth:`astimezone` імітує поведінку місцевого годинника, "
"відображаючи дві суміжні години UTC в ту саму місцеву годину. У східному "
"прикладі час UTC у формі 5:MM і 6:MM відображається на 1:MM, коли "
"перетворюється на східний час, але попередній час має атрибут :attr:"
"`~datetime.fold`, встановлений на 0, а пізніший час встановіть його на 1. "
"Наприклад, під час осіннього переходу 2016 року ми отримуємо:"

msgid ""
"Note that the :class:`.datetime` instances that differ only by the value of "
"the :attr:`~datetime.fold` attribute are considered equal in comparisons."
msgstr ""
"Зауважте, що екземпляри :class:`.datetime`, які відрізняються лише значенням "
"атрибута :attr:`~datetime.fold`, вважаються рівними в порівнянні."

msgid ""
"Applications that can't bear wall-time ambiguities should explicitly check "
"the value of the :attr:`~datetime.fold` attribute or avoid using hybrid :"
"class:`tzinfo` subclasses; there are no ambiguities when using :class:"
"`timezone`, or any other fixed-offset :class:`tzinfo` subclass (such as a "
"class representing only EST (fixed offset -5 hours), or only EDT (fixed "
"offset -4 hours))."
msgstr ""
"Програми, які не можуть витримувати неоднозначність настінного часу, повинні "
"явно перевіряти значення атрибута :attr:`~datetime.fold` або уникати "
"використання гібридних підкласів :class:`tzinfo`; при використанні :class:"
"`timezone` або будь-якого іншого підкласу :class:`tzinfo` із фіксованим "
"зсувом немає жодних двозначностей (наприклад, клас, що представляє лише EST "
"(фіксований зсув -5 годин) або лише EDT (фіксований зсув -4) години))."

msgid ":mod:`zoneinfo`"
msgstr ":mod:`zoneinfo`"

msgid ""
"The :mod:`datetime` module has a basic :class:`timezone` class (for handling "
"arbitrary fixed offsets from UTC) and its :attr:`timezone.utc` attribute (a "
"UTC timezone instance)."
msgstr ""
"Модуль :mod:`datetime` має базовий клас :class:`timezone` (для обробки "
"довільних фіксованих зміщень від UTC) і його атрибут :attr:`timezone.utc` "
"(екземпляр часового поясу UTC)."

msgid ""
"``zoneinfo`` brings the *IANA timezone database* (also known as the Olson "
"database) to Python, and its usage is recommended."
msgstr ""
"``zoneinfo`` переносить *базу даних часових поясів IANA* (також відому як "
"база даних Olson) до Python, і її використання рекомендовано."

msgid "`IANA timezone database <https://www.iana.org/time-zones>`_"
msgstr "`База даних часових поясів IANA <https://www.iana.org/time-zones>`_"

msgid ""
"The Time Zone Database (often called tz, tzdata or zoneinfo) contains code "
"and data that represent the history of local time for many representative "
"locations around the globe. It is updated periodically to reflect changes "
"made by political bodies to time zone boundaries, UTC offsets, and daylight-"
"saving rules."
msgstr ""
"База даних часових поясів (часто називається tz, tzdata або zoneinfo) "
"містить код і дані, які представляють історію місцевого часу для багатьох "
"репрезентативних місць у всьому світі. Він періодично оновлюється, щоб "
"відобразити зміни, внесені політичними органами в межі часових поясів, "
"зміщення UTC і правила переходу на літній час."

msgid ":class:`timezone` Objects"
msgstr ":class:`timezone` Об'єкти"

msgid ""
"The :class:`timezone` class is a subclass of :class:`tzinfo`, each instance "
"of which represents a timezone defined by a fixed offset from UTC."
msgstr ""
"Клас :class:`timezone` є підкласом :class:`tzinfo`, кожен екземпляр якого "
"представляє часовий пояс, визначений фіксованим зміщенням від UTC."

msgid ""
"Objects of this class cannot be used to represent timezone information in "
"the locations where different offsets are used in different days of the year "
"or where historical changes have been made to civil time."
msgstr ""
"Об’єкти цього класу не можна використовувати для представлення інформації "
"про часові пояси в місцях, де використовуються різні зсуви в різні дні року "
"або де історичні зміни були внесені до цивільного часу."

msgid ""
"The *offset* argument must be specified as a :class:`timedelta` object "
"representing the difference between the local time and UTC. It must be "
"strictly between ``-timedelta(hours=24)`` and ``timedelta(hours=24)``, "
"otherwise :exc:`ValueError` is raised."
msgstr ""
"Аргумент *offset* має бути вказаний як об’єкт :class:`timedelta`, що "
"представляє різницю між місцевим часом і UTC. Воно має бути між ``-"
"timedelta(hours=24)`` і ``timedelta(hours=24)``, інакше :exc:`ValueError` "
"викликається."

msgid ""
"The *name* argument is optional. If specified it must be a string that will "
"be used as the value returned by the :meth:`datetime.tzname` method."
msgstr ""
"Аргумент *name* необов’язковий. Якщо вказано, це має бути рядок, який "
"використовуватиметься як значення, яке повертає метод :meth:`datetime."
"tzname`."

msgid ""
"Return the fixed value specified when the :class:`timezone` instance is "
"constructed."
msgstr ""
"Повертає фіксоване значення, указане під час створення екземпляра :class:"
"`timezone`."

msgid ""
"The *dt* argument is ignored. The return value is a :class:`timedelta` "
"instance equal to the difference between the local time and UTC."
msgstr ""
"Аргумент *dt* ігнорується. Повернене значення є екземпляром :class:"
"`timedelta`, що дорівнює різниці між місцевим часом і UTC."

msgid ""
"If *name* is not provided in the constructor, the name returned by "
"``tzname(dt)`` is generated from the value of the ``offset`` as follows. If "
"*offset* is ``timedelta(0)``, the name is \"UTC\", otherwise it is a string "
"in the format ``UTC±HH:MM``, where ± is the sign of ``offset``, HH and MM "
"are two digits of ``offset.hours`` and ``offset.minutes`` respectively."
msgstr ""
"Якщо *name* не вказано в конструкторі, ім’я, яке повертає ``tzname(dt)``, "
"генерується зі значення ``offset`` наступним чином. Якщо *offset* дорівнює "
"``timedelta(0)``, ім'я - \"UTC\", інакше це рядок у форматі ``UTC±HH:MM``, "
"де ± є знаком ``offset`` , HH і MM – це дві цифри ``offset.hours`` і "
"``offset.minutes`` відповідно."

msgid ""
"Name generated from ``offset=timedelta(0)`` is now plain ``'UTC'``, not "
"``'UTC+00:00'``."
msgstr ""

msgid "Always returns ``None``."
msgstr "Завжди повертає ``None``."

msgid ""
"Return ``dt + offset``. The *dt* argument must be an aware :class:`."
"datetime` instance, with ``tzinfo`` set to ``self``."
msgstr ""
"Повернути ``dt + offset``. Аргумент *dt* має бути відомим екземпляром :class:"
"`.datetime` із значенням ``tzinfo`` значення ``self``."

msgid "The UTC timezone, ``timezone(timedelta(0))``."
msgstr "Часовий пояс UTC, ``timezone(timedelta(0))``."

msgid ":meth:`strftime` and :meth:`strptime` Behavior"
msgstr "Поведінка :meth:`strftime` і :meth:`strptime`"

msgid ""
":class:`date`, :class:`.datetime`, and :class:`.time` objects all support a "
"``strftime(format)`` method, to create a string representing the time under "
"the control of an explicit format string."
msgstr ""
"Об’єкти :class:`date`, :class:`.datetime` і :class:`.time` підтримують метод "
"``strftime(format)`` для створення рядка, що представляє час під контролем "
"явного рядок форматування."

msgid ""
"Conversely, the :meth:`datetime.strptime` class method creates a :class:`."
"datetime` object from a string representing a date and time and a "
"corresponding format string."
msgstr ""
"І навпаки, метод класу :meth:`datetime.strptime` створює об’єкт :class:`."
"datetime` із рядка, що представляє дату й час, і відповідного рядка формату."

msgid ""
"The table below provides a high-level comparison of :meth:`strftime` versus :"
"meth:`strptime`:"
msgstr ""
"У наведеній нижче таблиці представлено високорівневе порівняння :meth:"
"`strftime` проти :meth:`strptime`:"

msgid "``strftime``"
msgstr "``strftime``"

msgid "``strptime``"
msgstr "``strptime``"

msgid "Usage"
msgstr "Використання"

msgid "Convert object to a string according to a given format"
msgstr "Перетворити об’єкт на рядок відповідно до заданого формату"

msgid ""
"Parse a string into a :class:`.datetime` object given a corresponding format"
msgstr "Розібрати рядок у об’єкт :class:`.datetime` із відповідним форматом"

msgid "Type of method"
msgstr "Тип методу"

msgid "Instance method"
msgstr "Метод екземпляра"

msgid "Class method"
msgstr "Метод класу"

msgid "Method of"
msgstr "Метод"

msgid ":class:`date`; :class:`.datetime`; :class:`.time`"
msgstr ":class:`date`; :class:`.datetime`; :class:`.time`"

msgid ":class:`.datetime`"
msgstr ":class:`.datetime`"

msgid "Signature"
msgstr "Підпис"

msgid "``strftime(format)``"
msgstr "``strftime(format)``"

msgid "``strptime(date_string, format)``"
msgstr "``strptime(date_string, format)``"

msgid ":meth:`strftime` and :meth:`strptime` Format Codes"
msgstr "Коди форматів :meth:`strftime` і :meth:`strptime`"

msgid ""
"The following is a list of all the format codes that the 1989 C standard "
"requires, and these work on all platforms with a standard C implementation."
msgstr ""
"Нижче наведено список усіх кодів форматів, яких вимагає стандарт C 1989 "
"року, і вони працюють на всіх платформах зі стандартною реалізацією C."

msgid "Directive"
msgstr "Директива"

msgid "Meaning"
msgstr "Значення"

msgid "Example"
msgstr "приклад"

msgid "Notes"
msgstr "Примітки"

msgid "``%a``"
msgstr "``%a``"

msgid "Weekday as locale's abbreviated name."
msgstr "День тижня як скорочена назва локалі."

msgid "Sun, Mon, ..., Sat (en_US);"
msgstr "Нд, Пн, ..., Сб (en_US);"

msgid "So, Mo, ..., Sa (de_DE)"
msgstr "Отже, Пн, ..., Сб (de_DE)"

msgid "``%A``"
msgstr "``%A``"

msgid "Weekday as locale's full name."
msgstr "День тижня як повна назва локалі."

msgid "Sunday, Monday, ..., Saturday (en_US);"
msgstr "неділя, понеділок, ..., субота (en_US);"

msgid "Sonntag, Montag, ..., Samstag (de_DE)"
msgstr "Sonntag, Montag, ..., Samstag (de_DE)"

msgid "``%w``"
msgstr "``%w``"

msgid "Weekday as a decimal number, where 0 is Sunday and 6 is Saturday."
msgstr "День тижня як десяткове число, де 0 – неділя, а 6 – субота."

msgid "0, 1, ..., 6"
msgstr "0, 1, ..., 6"

msgid "``%d``"
msgstr "``%d``"

msgid "Day of the month as a zero-padded decimal number."
msgstr "День місяця як десяткове число з доповненням нуля."

msgid "01, 02, ..., 31"
msgstr "01, 02, ..., 31"

msgid "\\(9)"
msgstr "\\(9)"

msgid "``%b``"
msgstr "``%b``"

msgid "Month as locale's abbreviated name."
msgstr "Місяць як скорочена назва локалі."

msgid "Jan, Feb, ..., Dec (en_US);"
msgstr "січ, лютий, ..., грудень (en_US);"

msgid "Jan, Feb, ..., Dez (de_DE)"
msgstr "січ, лютий, ..., дек (de_DE)"

msgid "``%B``"
msgstr "``%B``"

msgid "Month as locale's full name."
msgstr "Місяць як повна назва локалі."

msgid "January, February, ..., December (en_US);"
msgstr "січень, лютий, ..., грудень (en_US);"

msgid "Januar, Februar, ..., Dezember (de_DE)"
msgstr "січень, лютий, ..., грудень (de_DE)"

msgid "``%m``"
msgstr "``%m``"

msgid "Month as a zero-padded decimal number."
msgstr "Місяць як десяткове число з доповненням нуля."

msgid "01, 02, ..., 12"
msgstr "01, 02, ..., 12"

msgid "``%y``"
msgstr "``%y``"

msgid "Year without century as a zero-padded decimal number."
msgstr "Рік без століття як десяткове число з доповненням нуля."

msgid "00, 01, ..., 99"
msgstr "00, 01, ..., 99"

msgid "``%Y``"
msgstr "``%Y``"

msgid "Year with century as a decimal number."
msgstr "Рік із століттям як десяткове число."

msgid "0001, 0002, ..., 2013, 2014, ..., 9998, 9999"
msgstr "0001, 0002, ..., 2013, 2014, ..., 9998, 9999"

msgid "``%H``"
msgstr "``%H``"

msgid "Hour (24-hour clock) as a zero-padded decimal number."
msgstr "Година (24-годинний формат) як десяткове число з доповненням нуля."

msgid "00, 01, ..., 23"
msgstr "00, 01, ..., 23"

msgid "``%I``"
msgstr "``%I``"

msgid "Hour (12-hour clock) as a zero-padded decimal number."
msgstr "Година (12-годинний годинник) як десяткове число з доповненням нуля."

msgid "``%p``"
msgstr "``%p``"

msgid "Locale's equivalent of either AM or PM."
msgstr "Локальний еквівалент AM або PM."

msgid "AM, PM (en_US);"
msgstr "AM, PM (en_US);"

msgid "am, pm (de_DE)"
msgstr "am, pm (de_DE)"

msgid "\\(1), \\(3)"
msgstr "\\(1), \\(3)"

msgid "``%M``"
msgstr "``%M``"

msgid "Minute as a zero-padded decimal number."
msgstr "Хвилина як десяткове число з доповненням нуля."

msgid "00, 01, ..., 59"
msgstr "00, 01, ..., 59"

msgid "``%S``"
msgstr "``%S``"

msgid "Second as a zero-padded decimal number."
msgstr "Секунда як десяткове число з доповненням нуля."

msgid "\\(4), \\(9)"
msgstr "\\(4), \\(9)"

msgid "``%f``"
msgstr "``%f``"

msgid "Microsecond as a decimal number, zero-padded to 6 digits."
msgstr "Мікросекунда як десяткове число, доповнене нулями до 6 цифр."

msgid "000000, 000001, ..., 999999"
msgstr "000000, 000001, ..., 999999"

msgid "\\(5)"
msgstr "\\(5)"

msgid "``%z``"
msgstr "``%z``"

msgid ""
"UTC offset in the form ``±HHMM[SS[.ffffff]]`` (empty string if the object is "
"naive)."
msgstr ""
"Зміщення UTC у формі ``±HHMM[SS[.ffffff]]`` (порожній рядок, якщо об’єкт "
"наївний)."

msgid "(empty), +0000, -0400, +1030, +063415, -030712.345216"
msgstr "(порожній), +0000, -0400, +1030, +063415, -030712.345216"

msgid "\\(6)"
msgstr "\\(6)"

msgid "``%Z``"
msgstr "``%Z``"

msgid "Time zone name (empty string if the object is naive)."
msgstr "Назва часового поясу (пустий рядок, якщо об’єкт наївний)."

msgid "(empty), UTC, GMT"
msgstr "(пусто), UTC, GMT"

msgid "``%j``"
msgstr "``%j``"

msgid "Day of the year as a zero-padded decimal number."
msgstr "День року як десяткове число з доповненням нуля."

msgid "001, 002, ..., 366"
msgstr "001, 002, ..., 366"

msgid "``%U``"
msgstr "``%U``"

msgid ""
"Week number of the year (Sunday as the first day of the week) as a zero-"
"padded decimal number. All days in a new year preceding the first Sunday are "
"considered to be in week 0."
msgstr ""
"Номер тижня року (неділя як перший день тижня) як десяткове число з "
"доповненням нуля. Усі дні в новому році, що передують першій неділі, "
"вважаються нульовим тижнем."

msgid "00, 01, ..., 53"
msgstr "00, 01, ..., 53"

msgid "\\(7), \\(9)"
msgstr "\\(7), \\(9)"

msgid "``%W``"
msgstr "``%W``"

msgid ""
"Week number of the year (Monday as the first day of the week) as a zero-"
"padded decimal number. All days in a new year preceding the first Monday are "
"considered to be in week 0."
msgstr ""
"Номер тижня року (понеділок як перший день тижня) як десяткове число з "
"доповненням нуля. Усі дні в новому році, що передують першому понеділку, "
"вважаються нульовим тижнем."

msgid "``%c``"
msgstr "``%c``"

msgid "Locale's appropriate date and time representation."
msgstr "Відповідне представлення дати та часу в локалі."

msgid "Tue Aug 16 21:30:00 1988 (en_US);"
msgstr "Tue Aug 16 21:30:00 1988 (en_US);"

msgid "Di 16 Aug 21:30:00 1988 (de_DE)"
msgstr "16 серпня 21:30:00 1988 (de_DE)"

msgid "``%x``"
msgstr "``%x``"

msgid "Locale's appropriate date representation."
msgstr "Відповідне представлення дати в локалі."

msgid "08/16/88 (None);"
msgstr "16.08.88 (немає);"

msgid "08/16/1988 (en_US);"
msgstr "16.08.1988 (en_US);"

msgid "16.08.1988 (de_DE)"
msgstr "16.08.1988 (de_DE)"

msgid "``%X``"
msgstr "``%X``"

msgid "Locale's appropriate time representation."
msgstr "Відповідне представлення часу локалі."

msgid "21:30:00 (en_US);"
msgstr "21:30:00 (en_US);"

msgid "21:30:00 (de_DE)"
msgstr "21:30:00 (de_DE)"

msgid "``%%``"
msgstr "``%%``"

msgid "A literal ``'%'`` character."
msgstr "Буквальний символ ``'%''``."

msgid "%"
msgstr "%"

msgid ""
"Several additional directives not required by the C89 standard are included "
"for convenience. These parameters all correspond to ISO 8601 date values."
msgstr ""
"Для зручності включено кілька додаткових директив, які не вимагаються "
"стандартом C89. Усі ці параметри відповідають значенням дати ISO 8601."

msgid "``%G``"
msgstr "``%G``"

msgid ""
"ISO 8601 year with century representing the year that contains the greater "
"part of the ISO week (``%V``)."
msgstr ""
"Рік ISO 8601 із століттям, що представляє рік, який містить більшу частину "
"тижня ISO (``%V``)."

msgid "\\(8)"
msgstr "\\(8)"

msgid "``%u``"
msgstr "``%u``"

msgid "ISO 8601 weekday as a decimal number where 1 is Monday."
msgstr "День тижня ISO 8601 як десяткове число, де 1 означає понеділок."

msgid "1, 2, ..., 7"
msgstr "1, 2, ..., 7"

msgid "``%V``"
msgstr "``%V``"

msgid ""
"ISO 8601 week as a decimal number with Monday as the first day of the week. "
"Week 01 is the week containing Jan 4."
msgstr ""
"ISO 8601 тиждень як десяткове число з понеділком як першим днем тижня. "
"Тиждень 01 – це тиждень, що містить 4 січня."

msgid "01, 02, ..., 53"
msgstr "01, 02, ..., 53"

msgid "\\(8), \\(9)"
msgstr "\\(8), \\(9)"

msgid ""
"These may not be available on all platforms when used with the :meth:"
"`strftime` method. The ISO 8601 year and ISO 8601 week directives are not "
"interchangeable with the year and week number directives above. Calling :"
"meth:`strptime` with incomplete or ambiguous ISO 8601 directives will raise "
"a :exc:`ValueError`."
msgstr ""
"Вони можуть бути недоступні на всіх платформах, якщо використовуються з "
"методом :meth:`strftime`. Директиви ISO 8601 рік і ISO 8601 тиждень не є "
"взаємозамінними з директивами року і номера тижня вище. Виклик :meth:"
"`strptime` із неповними або неоднозначними директивами ISO 8601 викличе :exc:"
"`ValueError`."

msgid ""
"The full set of format codes supported varies across platforms, because "
"Python calls the platform C library's :func:`strftime` function, and "
"platform variations are common. To see the full set of format codes "
"supported on your platform, consult the :manpage:`strftime(3)` "
"documentation. There are also differences between platforms in handling of "
"unsupported format specifiers."
msgstr ""
"Повний набір підтримуваних кодів формату залежить від платформи, оскільки "
"Python викликає функцію :func:`strftime` бібліотеки платформи C, і варіації "
"платформ є звичайними. Щоб переглянути повний набір кодів форматів, які "
"підтримуються вашою платформою, зверніться до документації :manpage:"
"`strftime(3)`. Існують також відмінності між платформами в обробці "
"непідтримуваних специфікаторів формату."

msgid "``%G``, ``%u`` and ``%V`` were added."
msgstr "Додано ``%G``, ``%u`` і ``%V``."

msgid "Technical Detail"
msgstr "Технічні деталі"

msgid ""
"Broadly speaking, ``d.strftime(fmt)`` acts like the :mod:`time` module's "
"``time.strftime(fmt, d.timetuple())`` although not all objects support a :"
"meth:`timetuple` method."
msgstr ""
"Загалом, ``d.strftime(fmt)`` діє як ``time.strftime(fmt, d.timetuple())`` "
"модуля :mod:`time`, хоча не всі об’єкти підтримують :meth:`timetuple` метод."

msgid ""
"For the :meth:`datetime.strptime` class method, the default value is "
"``1900-01-01T00:00:00.000``: any components not specified in the format "
"string will be pulled from the default value. [#]_"
msgstr ""
"Для методу класу :meth:`datetime.strptime` значенням за замовчуванням є "
"``1900-01-01T00:00:00.000``: будь-які компоненти, не вказані в рядку "
"формату, буде отримано зі значення за замовчуванням. [#]_"

msgid "Using ``datetime.strptime(date_string, format)`` is equivalent to::"
msgstr "Використання ``datetime.strptime(date_string, format)`` еквівалентно:"

msgid ""
"except when the format includes sub-second components or timezone offset "
"information, which are supported in ``datetime.strptime`` but are discarded "
"by ``time.strptime``."
msgstr ""
"за винятком випадків, коли формат включає субсекундні компоненти або "
"інформацію про зміщення часового поясу, які підтримуються в ``datetime."
"strptime``, але відкидаються ``time.strptime``."

msgid ""
"For :class:`.time` objects, the format codes for year, month, and day should "
"not be used, as :class:`time` objects have no such values. If they're used "
"anyway, ``1900`` is substituted for the year, and ``1`` for the month and "
"day."
msgstr ""
"Для об’єктів :class:`.time` не слід використовувати коди формату для року, "
"місяця та дня, оскільки об’єкти :class:`time` не мають таких значень. Якщо "
"вони все одно використовуються, 1900 замінюється на рік, а 1 — на місяць і "
"день."

msgid ""
"For :class:`date` objects, the format codes for hours, minutes, seconds, and "
"microseconds should not be used, as :class:`date` objects have no such "
"values. If they're used anyway, ``0`` is substituted for them."
msgstr ""
"Для об’єктів :class:`date` не слід використовувати коди формату для годин, "
"хвилин, секунд і мікросекунд, оскільки об’єкти :class:`date` не мають таких "
"значень. Якщо вони все одно використовуються, замість них буде замінено "
"``0``."

msgid ""
"For the same reason, handling of format strings containing Unicode code "
"points that can't be represented in the charset of the current locale is "
"also platform-dependent. On some platforms such code points are preserved "
"intact in the output, while on others ``strftime`` may raise :exc:"
"`UnicodeError` or return an empty string instead."
msgstr ""
"З тієї ж причини обробка рядків формату, що містять кодові точки Юнікоду, "
"які не можуть бути представлені в наборі символів поточної локалі, також "
"залежить від платформи. На деяких платформах такі кодові точки зберігаються "
"недоторканими у виводі, тоді як на інших ``strftime`` може викликати :exc:"
"`UnicodeError` або замість цього повертати порожній рядок."

msgid ""
"Because the format depends on the current locale, care should be taken when "
"making assumptions about the output value. Field orderings will vary (for "
"example, \"month/day/year\" versus \"day/month/year\"), and the output may "
"contain Unicode characters encoded using the locale's default encoding (for "
"example, if the current locale is ``ja_JP``, the default encoding could be "
"any one of ``eucJP``, ``SJIS``, or ``utf-8``; use :meth:`locale.getlocale` "
"to determine the current locale's encoding)."
msgstr ""
"Оскільки формат залежить від поточної мови, слід бути обережним, роблячи "
"припущення щодо вихідного значення. Порядок полів буде різним (наприклад, "
"\"місяць/день/рік\" проти \"день/місяць/рік\"), а вихідні дані можуть "
"містити символи Юнікоду, закодовані з використанням стандартного кодування "
"мови (наприклад, якщо поточна мова ``ja_JP``, кодуванням за замовчуванням "
"може бути будь-яке з ``eucJP``, ``SJIS`` або ``utf-8``; використовуйте :meth:"
"`locale.getlocale`, щоб визначити кодування поточної мови)."

msgid ""
"The :meth:`strptime` method can parse years in the full [1, 9999] range, but "
"years < 1000 must be zero-filled to 4-digit width."
msgstr ""
"Метод :meth:`strptime` може аналізувати роки в повному діапазоні [1, 9999], "
"але роки < 1000 повинні бути заповнені нулями до 4-значної ширини."

msgid ""
"In previous versions, :meth:`strftime` method was restricted to years >= "
"1900."
msgstr ""
"У попередніх версіях метод :meth:`strftime` був обмежений роками >= 1900."

msgid ""
"In version 3.2, :meth:`strftime` method was restricted to years >= 1000."
msgstr "У версії 3.2 метод :meth:`strftime` був обмежений роками >= 1000."

msgid ""
"When used with the :meth:`strptime` method, the ``%p`` directive only "
"affects the output hour field if the ``%I`` directive is used to parse the "
"hour."
msgstr ""
"У разі використання з методом :meth:`strptime` директива ``%p`` впливає на "
"поле вихідних годин, лише якщо директива ``%I`` використовується для аналізу "
"години."

msgid ""
"Unlike the :mod:`time` module, the :mod:`datetime` module does not support "
"leap seconds."
msgstr ""
"На відміну від модуля :mod:`time`, модуль :mod:`datetime` не підтримує "
"високосні секунди."

msgid ""
"When used with the :meth:`strptime` method, the ``%f`` directive accepts "
"from one to six digits and zero pads on the right. ``%f`` is an extension to "
"the set of format characters in the C standard (but implemented separately "
"in datetime objects, and therefore always available)."
msgstr ""
"При використанні з методом :meth:`strptime` директива ``%f`` приймає від "
"однієї до шести цифр і нульові поля праворуч. ``%f`` — це розширення набору "
"форматних символів у стандарті C (але реалізоване окремо в об’єктах "
"datetime, і тому завжди доступне)."

msgid ""
"For a naive object, the ``%z`` and ``%Z`` format codes are replaced by empty "
"strings."
msgstr ""
"Для простого об’єкта коди формату ``%z`` і ``%Z`` замінюються порожніми "
"рядками."

msgid "For an aware object:"
msgstr "Для обізнаного об’єкта:"

msgid ""
":meth:`utcoffset` is transformed into a string of the form ``±HHMM[SS[."
"ffffff]]``, where ``HH`` is a 2-digit string giving the number of UTC offset "
"hours, ``MM`` is a 2-digit string giving the number of UTC offset minutes, "
"``SS`` is a 2-digit string giving the number of UTC offset seconds and "
"``ffffff`` is a 6-digit string giving the number of UTC offset microseconds. "
"The ``ffffff`` part is omitted when the offset is a whole number of seconds "
"and both the ``ffffff`` and the ``SS`` part is omitted when the offset is a "
"whole number of minutes. For example, if :meth:`utcoffset` returns "
"``timedelta(hours=-3, minutes=-30)``, ``%z`` is replaced with the string "
"``'-0330'``."
msgstr ""
":meth:`utcoffset` перетворюється на рядок у формі ``±HHMM[SS[.ffffff]]``, де "
"``HH`` — двозначний рядок, що вказує кількість годин зміщення UTC, ``MM`` — "
"це 2-значний рядок, що вказує кількість хвилин зміщення UTC, ``SS`` — це 2-"
"значний рядок, що вказує кількість секунд зміщення UTC, і ``ffffff`` — це 6-"
"значний рядок, що дає число мікросекунд зсуву UTC. Частина ``ffffff`` "
"опускається, якщо зміщення становить ціле число секунд, і частини ``ffffff`` "
"і ``SS`` опускаються, коли зсув становить ціле число хвилин. Наприклад, "
"якщо :meth:`utcoffset` повертає ``timedelta(hours=-3, minutes=-30)``, ``%z`` "
"замінюється на рядок ``'-0330'``."

msgid ""
"When the ``%z`` directive is provided to the  :meth:`strptime` method, the "
"UTC offsets can have a colon as a separator between hours, minutes and "
"seconds. For example, ``'+01:00:00'`` will be parsed as an offset of one "
"hour. In addition, providing ``'Z'`` is identical to ``'+00:00'``."
msgstr ""
"Коли директива ``%z`` надається методу :meth:`strptime`, зміщення UTC можуть "
"мати двокрапку як роздільник між годинами, хвилинами та секундами. "
"Наприклад, \"+01:00:00\" буде проаналізовано як зсув на одну годину. Крім "
"того, надання ``'Z'`` ідентично ``'+00:00'``."

msgid ""
"In :meth:`strftime`, ``%Z`` is replaced by an empty string if :meth:`tzname` "
"returns ``None``; otherwise ``%Z`` is replaced by the returned value, which "
"must be a string."
msgstr ""
"У :meth:`strftime` ``%Z`` замінюється порожнім рядком, якщо :meth:`tzname` "
"повертає ``None``; інакше ``%Z`` замінюється на повернуте значення, яке має "
"бути рядком."

msgid ":meth:`strptime` only accepts certain values for ``%Z``:"
msgstr ":meth:`strptime` приймає лише певні значення для ``%Z``:"

msgid "any value in ``time.tzname`` for your machine's locale"
msgstr "будь-яке значення в ``time.tzname`` для локалі вашої машини"

msgid "the hard-coded values ``UTC`` and ``GMT``"
msgstr "жорстко закодовані значення ``UTC`` і ``GMT``"

msgid ""
"So someone living in Japan may have ``JST``, ``UTC``, and ``GMT`` as valid "
"values, but probably not ``EST``. It will raise ``ValueError`` for invalid "
"values."
msgstr ""
"Тому хтось, хто живе в Японії, може мати дійсні значення ``JST``, ``UTC`` і "
"``GMT``, але, ймовірно, не ``EST``. Це викличе ``ValueError`` для недійсних "
"значень."

msgid ""
"When the ``%z`` directive is provided to the :meth:`strptime` method, an "
"aware :class:`.datetime` object will be produced. The ``tzinfo`` of the "
"result will be set to a :class:`timezone` instance."
msgstr ""
"Коли директива ``%z`` надається методу :meth:`strptime`, буде створено "
"відомий об’єкт :class:`.datetime`. ``tzinfo`` результату буде встановлено на "
"екземпляр :class:`timezone`."

msgid ""
"When used with the :meth:`strptime` method, ``%U`` and ``%W`` are only used "
"in calculations when the day of the week and the calendar year (``%Y``) are "
"specified."
msgstr ""
"При використанні з методом :meth:`strptime`, ``%U`` і ``%W`` "
"використовуються в обчисленнях лише тоді, коли вказано день тижня та "
"календарний рік (``%Y``). ."

msgid ""
"Similar to ``%U`` and ``%W``, ``%V`` is only used in calculations when the "
"day of the week and the ISO year (``%G``) are specified in a :meth:"
"`strptime` format string. Also note that ``%G`` and ``%Y`` are not "
"interchangeable."
msgstr ""
"Подібно до ``%U`` і ``%W``, ``%V`` використовується в обчисленнях лише тоді, "
"коли день тижня та рік ISO (``%G``) указано в :meth:`strptime` форматний "
"рядок. Також зауважте, що ``%G`` і ``%Y`` не є взаємозамінними."

msgid ""
"When used with the :meth:`strptime` method, the leading zero is optional "
"for  formats ``%d``, ``%m``, ``%H``, ``%I``, ``%M``, ``%S``, ``%J``, ``%U``, "
"``%W``, and ``%V``. Format ``%y`` does require a leading zero."
msgstr ""
"У разі використання з методом :meth:`strptime` початковий нуль "
"необов’язковий для форматів ``%d``, ``%m``, ``%H``, ``%I``, ``%M``, ``%S``, "
"``%J``, ``%U``, ``%W`` і ``%V``. Формат \"%y\" вимагає початкового нуля."

msgid "Footnotes"
msgstr "Виноски"

msgid "If, that is, we ignore the effects of Relativity"
msgstr "Якщо, тобто, ми ігноруємо ефекти відносності"

msgid ""
"This matches the definition of the \"proleptic Gregorian\" calendar in "
"Dershowitz and Reingold's book *Calendrical Calculations*, where it's the "
"base calendar for all computations. See the book for algorithms for "
"converting between proleptic Gregorian ordinals and many other calendar "
"systems."
msgstr ""
"Це збігається з визначенням \"пролептичного григоріанського\" календаря в "
"книзі Дершовіца та Рейнгольда \"Календарні розрахунки*\", де це базовий "
"календар для всіх обчислень. Перегляньте книгу для алгоритмів перетворення "
"між пролептичними григоріанськими ординалами та багатьма іншими календарними "
"системами."

msgid ""
"See R. H. van Gent's `guide to the mathematics of the ISO 8601 calendar "
"<https://web.archive.org/web/20220531051136/https://webspace.science.uu.nl/"
"~gent0113/calendar/isocalendar.htm>`_ for a good explanation."
msgstr ""

msgid ""
"Passing ``datetime.strptime('Feb 29', '%b %d')`` will fail since ``1900`` is "
"not a leap year."
msgstr ""
"Передача ``datetime.strptime('Feb 29', '%b %d')`` буде невдалою, оскільки "
"``1900`` не є високосним роком."
