# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 01:07+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid ":mod:`hmac` --- Keyed-Hashing for Message Authentication"
msgstr ":mod:`hmac` --- Ключове хешування для автентифікації повідомлень"

msgid "**Source code:** :source:`Lib/hmac.py`"
msgstr "**Вихідний код:** :source:`Lib/hmac.py`"

msgid "This module implements the HMAC algorithm as described by :rfc:`2104`."
msgstr "Цей модуль реалізує алгоритм HMAC, як описано в :rfc:`2104`."

msgid ""
"Return a new hmac object.  *key* is a bytes or bytearray object giving the "
"secret key.  If *msg* is present, the method call ``update(msg)`` is made. "
"*digestmod* is the digest name, digest constructor or module for the HMAC "
"object to use.  It may be any name suitable to :func:`hashlib.new`. Despite "
"its argument position, it is required."
msgstr ""
"Повернути новий об’єкт hmac. *key* — це об’єкт bytes або bytearray, що надає "
"секретний ключ. Якщо присутній *msg*, виконується виклик методу "
"``update(msg)``. *digestmod* — назва дайджесту, конструктор дайджесту або "
"модуль для використання об’єктом HMAC. Це може бути будь-яке ім’я, яке "
"підходить для :func:`hashlib.new`. Незважаючи на свою аргументовану позицію, "
"вона потрібна."

msgid ""
"Parameter *key* can be a bytes or bytearray object. Parameter *msg* can be "
"of any type supported by :mod:`hashlib`. Parameter *digestmod* can be the "
"name of a hash algorithm."
msgstr ""
"Параметр *key* може бути об’єктом bytes або bytearray. Параметр *msg* може "
"бути будь-якого типу, який підтримується :mod:`hashlib`. Параметр "
"*digestmod* може бути назвою хеш-алгоритму."

msgid ""
"MD5 as implicit default digest for *digestmod* is deprecated. The digestmod "
"parameter is now required.  Pass it as a keyword argument to avoid "
"awkwardness when you do not have an initial msg."
msgstr ""
"MD5 як неявний дайджест за замовчуванням для *digestmod* застарів. Тепер "
"потрібен параметр digestmod. Передайте його як аргумент ключового слова, щоб "
"уникнути незручності, коли у вас немає початкового повідомлення."

msgid ""
"Return digest of *msg* for given secret *key* and *digest*. The function is "
"equivalent to ``HMAC(key, msg, digest).digest()``, but uses an optimized C "
"or inline implementation, which is faster for messages that fit into memory. "
"The parameters *key*, *msg*, and *digest* have the same meaning as in :func:"
"`~hmac.new`."
msgstr ""
"Повернути дайджест *повідомлення* для заданого секретного *ключа* та "
"*дайджесту*. Функція еквівалентна ``HMAC(key, msg, digest).digest()``, але "
"використовує оптимізовану C або вбудовану реалізацію, яка є швидшою для "
"повідомлень, які вміщуються в пам’ять. Параметри *key*, *msg* і *digest* "
"мають те саме значення, що й у :func:`~hmac.new`."

msgid ""
"CPython implementation detail, the optimized C implementation is only used "
"when *digest* is a string and name of a digest algorithm, which is supported "
"by OpenSSL."
msgstr ""
"Деталі реалізації CPython, оптимізована реалізація C використовується лише "
"тоді, коли *digest* є рядком і назвою алгоритму дайджесту, який "
"підтримується OpenSSL."

msgid "An HMAC object has the following methods:"
msgstr "Об’єкт HMAC має такі методи:"

msgid ""
"Update the hmac object with *msg*.  Repeated calls are equivalent to a "
"single call with the concatenation of all the arguments: ``m.update(a); m."
"update(b)`` is equivalent to ``m.update(a + b)``."
msgstr ""
"Оновіть об’єкт hmac за допомогою *msg*. Повторні виклики еквівалентні одному "
"виклику з конкатенацією всіх аргументів: ``m.update(a); m.update(b)`` "
"еквівалентно ``m.update(a + b)``."

msgid "Parameter *msg* can be of any type supported by :mod:`hashlib`."
msgstr ""
"Параметр *msg* може бути будь-якого типу, який підтримується :mod:`hashlib`."

msgid ""
"Return the digest of the bytes passed to the :meth:`update` method so far. "
"This bytes object will be the same length as the *digest_size* of the digest "
"given to the constructor.  It may contain non-ASCII bytes, including NUL "
"bytes."
msgstr ""
"Повертає дайджест байтів, переданих до цього моменту методу :meth:`update`. "
"Цей об’єкт bytes матиме таку саму довжину, що й *digest_size* дайджесту, "
"наданого конструктору. Він може містити байти, відмінні від ASCII, включаючи "
"байти NUL."

msgid ""
"When comparing the output of :meth:`digest` to an externally supplied digest "
"during a verification routine, it is recommended to use the :func:"
"`compare_digest` function instead of the ``==`` operator to reduce the "
"vulnerability to timing attacks."
msgstr ""

msgid ""
"Like :meth:`digest` except the digest is returned as a string twice the "
"length containing only hexadecimal digits.  This may be used to exchange the "
"value safely in email or other non-binary environments."
msgstr ""
"Подібно до :meth:`digest`, за винятком того, що дайджест повертається як "
"рядок подвійної довжини, що містить лише шістнадцяткові цифри. Це можна "
"використовувати для безпечного обміну значенням в електронній пошті чи в "
"інших небінарних середовищах."

msgid ""
"When comparing the output of :meth:`hexdigest` to an externally supplied "
"digest during a verification routine, it is recommended to use the :func:"
"`compare_digest` function instead of the ``==`` operator to reduce the "
"vulnerability to timing attacks."
msgstr ""

msgid ""
"Return a copy (\"clone\") of the hmac object.  This can be used to "
"efficiently compute the digests of strings that share a common initial "
"substring."
msgstr ""
"Повертає копію (\"клон\") об'єкта hmac. Це можна використовувати для "
"ефективного обчислення дайджестів рядків, які мають спільний початковий "
"підрядок."

msgid "A hash object has the following attributes:"
msgstr "Хеш-об’єкт має такі атрибути:"

msgid "The size of the resulting HMAC digest in bytes."
msgstr "Розмір отриманого дайджесту HMAC у байтах."

msgid "The internal block size of the hash algorithm in bytes."
msgstr "Розмір внутрішнього блоку хеш-алгоритму в байтах."

msgid "The canonical name of this HMAC, always lowercase, e.g. ``hmac-md5``."
msgstr ""
"Канонічна назва цього HMAC, завжди в нижньому регістрі, напр. ``hmac-md5``."

msgid ""
"The undocumented attributes ``HMAC.digest_cons``, ``HMAC.inner``, and ``HMAC."
"outer`` are internal implementation details and will be removed in Python "
"3.10."
msgstr ""
"Недокументовані атрибути ``HMAC.digest_cons``, ``HMAC.inner`` і ``HMAC."
"outer`` є деталями внутрішньої реалізації, і їх буде видалено в Python 3.10."

msgid "This module also provides the following helper function:"
msgstr "Цей модуль також надає такі допоміжні функції:"

msgid ""
"Return ``a == b``.  This function uses an approach designed to prevent "
"timing analysis by avoiding content-based short circuiting behaviour, making "
"it appropriate for cryptography.  *a* and *b* must both be of the same type: "
"either :class:`str` (ASCII only, as e.g. returned by :meth:`HMAC."
"hexdigest`), or a :term:`bytes-like object`."
msgstr ""
"Повернути ``a == b``. Ця функція використовує підхід, призначений для "
"запобігання аналізу часу шляхом уникнення короткого замикання на основі "
"вмісту, що робить її придатною для криптографії. *a* і *b* мають бути одного "
"типу: або :class:`str` (тільки ASCII, як, наприклад, повертає :meth:`HMAC."
"hexdigest`), або :term:`bytes-like object`."

msgid ""
"If *a* and *b* are of different lengths, or if an error occurs, a timing "
"attack could theoretically reveal information about the types and lengths of "
"*a* and *b*—but not their values."
msgstr ""
"Якщо *a* і *b* мають різну довжину або якщо сталася помилка, атака на "
"синхронізацію теоретично може відкрити інформацію про типи та довжини *a* і "
"*b*, але не їхні значення."

msgid ""
"The function uses OpenSSL's ``CRYPTO_memcmp()`` internally when available."
msgstr ""
"Функція внутрішньо використовує ``CRYPTO_memcmp()`` OpenSSL, якщо доступний."

msgid "Module :mod:`hashlib`"
msgstr "Модуль :mod:`hashlib`"

msgid "The Python module providing secure hash functions."
msgstr "Модуль Python, що забезпечує безпечні хеш-функції."
