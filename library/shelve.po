# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 01:12+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid ":mod:`shelve` --- Python object persistence"
msgstr ":mod:`shelve` --- збереження об'єкта Python"

msgid "**Source code:** :source:`Lib/shelve.py`"
msgstr "**Вихідний код:** :source:`Lib/shelve.py`"

msgid ""
"A \"shelf\" is a persistent, dictionary-like object.  The difference with "
"\"dbm\" databases is that the values (not the keys!) in a shelf can be "
"essentially arbitrary Python objects --- anything that the :mod:`pickle` "
"module can handle. This includes most class instances, recursive data types, "
"and objects containing lots of shared  sub-objects.  The keys are ordinary "
"strings."
msgstr ""
"\"Полиця\" — це постійний об’єкт, схожий на словник. Різниця з базами даних "
"\"dbm\" полягає в тому, що значення (не ключі!) на полиці можуть бути по "
"суті довільними об’єктами Python --- будь-чим, що може обробити модуль :mod:"
"`pickle`. Це включає більшість екземплярів класів, рекурсивних типів даних "
"та об’єктів, що містять багато спільних підоб’єктів. Ключі - звичайні струни."

msgid ""
"Open a persistent dictionary.  The filename specified is the base filename "
"for the underlying database.  As a side-effect, an extension may be added to "
"the filename and more than one file may be created.  By default, the "
"underlying database file is opened for reading and writing.  The optional "
"*flag* parameter has the same interpretation as the *flag* parameter of :"
"func:`dbm.open`."
msgstr ""
"Відкрийте постійний словник. Вказана назва файлу є базовою назвою файлу "
"базової бази даних. Як побічний ефект до назви файлу може бути додано "
"розширення та може бути створено більше одного файлу. За замовчуванням "
"базовий файл бази даних відкрито для читання та запису. Необов’язковий "
"параметр *flag* має таку саму інтерпретацію, що й параметр *flag* :func:`dbm."
"open`."

msgid ""
"By default, pickles created with :data:`pickle.DEFAULT_PROTOCOL` are used to "
"serialize values.  The version of the pickle protocol can be specified with "
"the *protocol* parameter."
msgstr ""
"За замовчуванням піклі, створені за допомогою :data:`pickle."
"DEFAULT_PROTOCOL`, використовуються для серіалізації значень. Версію "
"протоколу pickle можна вказати за допомогою параметра *protocol*."

msgid ""
"Because of Python semantics, a shelf cannot know when a mutable persistent-"
"dictionary entry is modified.  By default modified objects are written "
"*only* when assigned to the shelf (see :ref:`shelve-example`).  If the "
"optional *writeback* parameter is set to ``True``, all entries accessed are "
"also cached in memory, and written back on :meth:`~Shelf.sync` and :meth:"
"`~Shelf.close`; this can make it handier to mutate mutable entries in the "
"persistent dictionary, but, if many entries are accessed, it can consume "
"vast amounts of memory for the cache, and it can make the close operation "
"very slow since all accessed entries are written back (there is no way to "
"determine which accessed entries are mutable, nor which ones were actually "
"mutated)."
msgstr ""
"Через семантику Python полиця не може знати, коли змінено запис постійного "
"словника. За замовчуванням змінені об’єкти записуються *тільки*, коли вони "
"призначені на полицю (див. :ref:`shelve-example`). Якщо необов’язковий "
"параметр *writeback* має значення ``True``, усі записи, до яких здійснюється "
"доступ, також кешуються в пам’яті та записуються назад у :meth:`~Shelf.sync` "
"і :meth:`~Shelf.close`; це може зробити зручнішим мутацію змінних записів у "
"постійному словнику, але, якщо здійснюється доступ до багатьох записів, це "
"може споживати величезні обсяги пам’яті для кешу, і це може зробити операцію "
"закриття дуже повільною, оскільки всі доступні записи записуються назад "
"( немає способу визначити, які записи є змінними, а також які з них були "
"змінені)."

msgid ""
":data:`pickle.DEFAULT_PROTOCOL` is now used as the default pickle protocol."
msgstr ""
":data:`pickle.DEFAULT_PROTOCOL` тепер використовується як стандартний "
"протокол pickle."

msgid "Accepts :term:`path-like object` for filename."
msgstr ""

msgid ""
"Do not rely on the shelf being closed automatically; always call :meth:"
"`~Shelf.close` explicitly when you don't need it any more, or use :func:"
"`shelve.open` as a context manager::"
msgstr ""
"Не покладайтеся на автоматичне закриття полиці; завжди викликайте :meth:"
"`~Shelf.close` явно, коли він вам більше не потрібен, або використовуйте :"
"func:`shelve.open` як контекстний менеджер::"

msgid ""
"Because the :mod:`shelve` module is backed by :mod:`pickle`, it is insecure "
"to load a shelf from an untrusted source.  Like with pickle, loading a shelf "
"can execute arbitrary code."
msgstr ""
"Оскільки модуль :mod:`shelve` підтримується :mod:`pickle`, небезпечно "
"завантажувати полицю з ненадійного джерела. Як і з pickle, завантаження "
"полиці може виконувати довільний код."

msgid ""
"Shelf objects support most of methods and operations supported by "
"dictionaries (except copying, constructors and operators ``|`` and ``|=``).  "
"This eases the transition from dictionary based scripts to those requiring "
"persistent storage."
msgstr ""
"Об'єкти полиці підтримують більшість методів і операцій, які підтримуються "
"словниками (крім копіювання, конструкторів і операторів ``|`` і ``|=``). Це "
"спрощує перехід від сценаріїв на основі словників до сценаріїв, які "
"потребують постійного зберігання."

msgid "Two additional methods are supported:"
msgstr "Підтримуються два додаткові методи:"

msgid ""
"Write back all entries in the cache if the shelf was opened with *writeback* "
"set to :const:`True`.  Also empty the cache and synchronize the persistent "
"dictionary on disk, if feasible.  This is called automatically when the "
"shelf is closed with :meth:`close`."
msgstr ""
"Записати всі записи в кеші, якщо полицю було відкрито з *writeback*, "
"встановленим на :const:`True`. Також очистіть кеш і синхронізуйте постійний "
"словник на диску, якщо це можливо. Це викликається автоматично, коли полиця "
"закривається за допомогою :meth:`close`."

msgid ""
"Synchronize and close the persistent *dict* object.  Operations on a closed "
"shelf will fail with a :exc:`ValueError`."
msgstr ""
"Синхронізуйте та закрийте постійний об’єкт *dict*. Операції на закритій "
"полиці завершаться помилкою з :exc:`ValueError`."

msgid ""
"`Persistent dictionary recipe <https://code.activestate.com/recipes/576642/"
">`_ with widely supported storage formats and having the speed of native "
"dictionaries."
msgstr ""
"`Persistent dictionary recipe <https://code.activestate.com/recipes/576642/"
">`_ із широкою підтримкою форматів зберігання та швидкістю власних словників."

msgid "Restrictions"
msgstr "Обмеження"

msgid ""
"The choice of which database package will be used (such as :mod:`dbm.ndbm` "
"or :mod:`dbm.gnu`) depends on which interface is available.  Therefore it is "
"not safe to open the database directly using :mod:`dbm`.  The database is "
"also (unfortunately) subject to the limitations of :mod:`dbm`, if it is used "
"--- this means that (the pickled representation of) the objects stored in "
"the database should be fairly small, and in rare cases key collisions may "
"cause the database to refuse updates."
msgstr ""
"Вибір того, який пакет бази даних використовуватиметься (наприклад, :mod:"
"`dbm.ndbm` або :mod:`dbm.gnu`) залежить від доступного інтерфейсу. Тому "
"небезпечно відкривати базу даних безпосередньо за допомогою :mod:`dbm`. База "
"даних також (на жаль) підлягає обмеженням :mod:`dbm`, якщо вона "
"використовується --- це означає, що (вибране представлення) об’єктів, які "
"зберігаються в базі даних, мають бути досить малими, і в окремих випадках "
"колізії ключів можуть призвести до відмови бази даних в оновленнях."

msgid ""
"The :mod:`shelve` module does not support *concurrent* read/write access to "
"shelved objects.  (Multiple simultaneous read accesses are safe.)  When a "
"program has a shelf open for writing, no other program should have it open "
"for reading or writing.  Unix file locking can be used to solve this, but "
"this differs across Unix versions and requires knowledge about the database "
"implementation used."
msgstr ""
"Модуль :mod:`shelve` не підтримує *одночасний* доступ для читання/запису до "
"відкладених об’єктів. (Кілька одночасних доступів для читання є безпечними.) "
"Якщо в програмі є полиця, відкрита для запису, жодна інша програма не "
"повинна мати її відкритою для читання чи запису. Щоб вирішити цю проблему, "
"можна використовувати блокування файлів Unix, але це відрізняється в різних "
"версіях Unix і вимагає знання про використовувану реалізацію бази даних."

msgid ""
"A subclass of :class:`collections.abc.MutableMapping` which stores pickled "
"values in the *dict* object."
msgstr ""
"Підклас :class:`collections.abc.MutableMapping`, який зберігає обрані "
"значення в об’єкті *dict*."

msgid ""
"By default, pickles created with :data:`pickle.DEFAULT_PROTOCOL` are used to "
"serialize values.  The version of the pickle protocol can be specified with "
"the *protocol* parameter.  See the :mod:`pickle` documentation for a "
"discussion of the pickle protocols."
msgstr ""
"За замовчуванням піклі, створені за допомогою :data:`pickle."
"DEFAULT_PROTOCOL`, використовуються для серіалізації значень. Версію "
"протоколу pickle можна вказати за допомогою параметра *protocol*. "
"Перегляньте документацію :mod:`pickle` для обговорення протоколів pickle."

msgid ""
"If the *writeback* parameter is ``True``, the object will hold a cache of "
"all entries accessed and write them back to the *dict* at sync and close "
"times. This allows natural operations on mutable entries, but can consume "
"much more memory and make sync and close take a long time."
msgstr ""
"Якщо параметр *writeback* має значення ``True``, об’єкт зберігатиме кеш усіх "
"записів, до яких отримав доступ, і записуватиме їх назад у *dict* під час "
"синхронізації та закриття. Це дозволяє виконувати природні операції над "
"змінними записами, але може споживати набагато більше пам’яті, а "
"синхронізація та закриття триватимуть довго."

msgid ""
"The *keyencoding* parameter is the encoding used to encode keys before they "
"are used with the underlying dict."
msgstr ""
"Параметр *keyencoding* — це кодування, яке використовується для кодування "
"ключів перед їх використанням із базовим dict."

msgid ""
"A :class:`Shelf` object can also be used as a context manager, in which case "
"it will be automatically closed when the :keyword:`with` block ends."
msgstr ""
"Об’єкт :class:`Shelf` також можна використовувати як менеджер контексту, і в "
"цьому випадку він буде автоматично закритий, коли блок :keyword:`with` "
"завершиться."

msgid ""
"Added the *keyencoding* parameter; previously, keys were always encoded in "
"UTF-8."
msgstr "Додано параметр *keyencoding*; раніше ключі завжди кодувалися в UTF-8."

msgid "Added context manager support."
msgstr "Додано підтримку менеджера контексту."

msgid ""
"A subclass of :class:`Shelf` which exposes :meth:`first`, :meth:`!next`, :"
"meth:`previous`, :meth:`last` and :meth:`set_location` which are available "
"in the third-party :mod:`bsddb` module from `pybsddb <https://www.jcea.es/"
"programacion/pybsddb.htm>`_ but not in other database modules.  The *dict* "
"object passed to the constructor must support those methods.  This is "
"generally accomplished by calling one of :func:`bsddb.hashopen`, :func:"
"`bsddb.btopen` or :func:`bsddb.rnopen`.  The optional *protocol*, "
"*writeback*, and *keyencoding* parameters have the same interpretation as "
"for the :class:`Shelf` class."
msgstr ""
"Підклас :class:`Shelf`, який відкриває :meth:`first`, :meth:`!next`, :meth:"
"`previous`, :meth:`last` і :meth:`set_location`, які доступні в сторонній "
"модуль :mod:`bsddb` з `pybsddb <https://www.jcea.es/programacion/pybsddb."
"htm>`_, але не в інших модулях бази даних. Об’єкт *dict*, переданий "
"конструктору, повинен підтримувати ці методи. Зазвичай це досягається "
"викликом одного з :func:`bsddb.hashopen`, :func:`bsddb.btopen` або :func:"
"`bsddb.rnopen`. Додаткові параметри *protocol*, *writeback* і *keyencoding* "
"мають таку саму інтерпретацію, що й для класу :class:`Shelf`."

msgid ""
"A subclass of :class:`Shelf` which accepts a *filename* instead of a dict-"
"like object.  The underlying file will be opened using :func:`dbm.open`.  By "
"default, the file will be created and opened for both read and write.  The "
"optional *flag* parameter has the same interpretation as for the :func:`."
"open` function.  The optional *protocol* and *writeback* parameters have the "
"same interpretation as for the :class:`Shelf` class."
msgstr ""
"Підклас :class:`Shelf`, який приймає *ім’я файлу* замість dict-подібного "
"об’єкта. Основний файл буде відкрито за допомогою :func:`dbm.open`. За "
"замовчуванням файл буде створено та відкрито для читання та запису. "
"Необов’язковий параметр *flag* має таку саму інтерпретацію, що й функція :"
"func:`.open`. Необов’язкові параметри *protocol* і *writeback* мають таку "
"саму інтерпретацію, що й для класу :class:`Shelf`."

msgid "Example"
msgstr "приклад"

msgid ""
"To summarize the interface (``key`` is a string, ``data`` is an arbitrary "
"object)::"
msgstr ""
"Підсумовуючи інтерфейс (``key`` — це рядок, ``data`` — це довільний об’єкт):"

msgid "Module :mod:`dbm`"
msgstr "Модуль :mod:`dbm`"

msgid "Generic interface to ``dbm``-style databases."
msgstr "Загальний інтерфейс до баз даних у стилі ``dbm``."

msgid "Module :mod:`pickle`"
msgstr "Модуль :mod:`pickle`"

msgid "Object serialization used by :mod:`shelve`."
msgstr "Серіалізація об’єктів, яку використовує :mod:`shelve`."
