# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 01:50+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "Virtual Environments and Packages"
msgstr "Віртуальні середовища та пакети"

msgid "Introduction"
msgstr "вступ"

msgid ""
"Python applications will often use packages and modules that don't come as "
"part of the standard library.  Applications will sometimes need a specific "
"version of a library, because the application may require that a particular "
"bug has been fixed or the application may be written using an obsolete "
"version of the library's interface."
msgstr ""
"Програми Python часто використовують пакети та модулі, які не є частиною "
"стандартної бібліотеки. Програмам іноді потрібна конкретна версія "
"бібліотеки, тому що програма може вимагати виправлення певної помилки або "
"програма може бути написана з використанням застарілої версії інтерфейсу "
"бібліотеки."

msgid ""
"This means it may not be possible for one Python installation to meet the "
"requirements of every application.  If application A needs version 1.0 of a "
"particular module but application B needs version 2.0, then the requirements "
"are in conflict and installing either version 1.0 or 2.0 will leave one "
"application unable to run."
msgstr ""
"Це означає, що одна установка Python може не відповідати вимогам кожної "
"програми. Якщо програмі A потрібна версія 1.0 певного модуля, а програмі B "
"потрібна версія 2.0, тоді вимоги суперечать, і встановлення версії 1.0 або "
"2.0 призведе до того, що одна програма не зможе працювати."

msgid ""
"The solution for this problem is to create a :term:`virtual environment`, a "
"self-contained directory tree that contains a Python installation for a "
"particular version of Python, plus a number of additional packages."
msgstr ""
"Рішенням цієї проблеми є створення :term:`virtual environment`, самостійного "
"дерева каталогів, яке містить інсталяцію Python для певної версії Python, а "
"також низку додаткових пакетів."

msgid ""
"Different applications can then use different virtual environments. To "
"resolve the earlier example of conflicting requirements, application A can "
"have its own virtual environment with version 1.0 installed while "
"application B has another virtual environment with version 2.0. If "
"application B requires a library be upgraded to version 3.0, this will not "
"affect application A's environment."
msgstr ""
"Тоді різні програми можуть використовувати різні віртуальні середовища. Щоб "
"вирішити попередній приклад суперечливих вимог, програма A може мати власне "
"віртуальне середовище з версією 1.0, а програма B має інше віртуальне "
"середовище з версією 2.0. Якщо програма B потребує оновлення бібліотеки до "
"версії 3.0, це не вплине на середовище програми A."

msgid "Creating Virtual Environments"
msgstr "Створення віртуальних середовищ"

msgid ""
"The module used to create and manage virtual environments is called :mod:"
"`venv`.  :mod:`venv` will usually install the most recent version of Python "
"that you have available. If you have multiple versions of Python on your "
"system, you can select a specific Python version by running ``python3`` or "
"whichever version you want."
msgstr ""
"Модуль, який використовується для створення та керування віртуальними "
"середовищами, називається :mod:`venv`. :mod:`venv` зазвичай встановлює "
"останню доступну версію Python. Якщо у вас є кілька версій Python у вашій "
"системі, ви можете вибрати конкретну версію Python, запустивши ``python3`` "
"або будь-яку іншу версію."

msgid ""
"To create a virtual environment, decide upon a directory where you want to "
"place it, and run the :mod:`venv` module as a script with the directory "
"path::"
msgstr ""
"Щоб створити віртуальне середовище, виберіть каталог, куди ви хочете його "
"розмістити, і запустіть модуль :mod:`venv` як сценарій із шляхом до "
"каталогу::"

msgid ""
"This will create the ``tutorial-env`` directory if it doesn't exist, and "
"also create directories inside it containing a copy of the Python "
"interpreter and various supporting files."
msgstr ""
"Це створить каталог ``tutorial-env``, якщо він не існує, а також створить "
"каталоги всередині нього, що містять копію інтерпретатора Python і різні "
"допоміжні файли."

msgid ""
"A common directory location for a virtual environment is ``.venv``. This "
"name keeps the directory typically hidden in your shell and thus out of the "
"way while giving it a name that explains why the directory exists. It also "
"prevents clashing with ``.env`` environment variable definition files that "
"some tooling supports."
msgstr ""
"Загальним розташуванням каталогу для віртуального середовища є ``.venv``. Ця "
"назва зберігає каталог, як правило, прихованим у вашій оболонці і, таким "
"чином, не заважаючи, водночас надаючи йому назву, яка пояснює, чому каталог "
"існує. Це також запобігає зіткненню з файлами визначення змінних середовища "
"``.env``, які підтримують деякі інструменти."

msgid "Once you've created a virtual environment, you may activate it."
msgstr "Створивши віртуальне середовище, ви можете його активувати."

msgid "On Windows, run::"
msgstr "У Windows запустіть::"

msgid "On Unix or MacOS, run::"
msgstr "В Unix або MacOS запустіть:"

msgid ""
"(This script is written for the bash shell.  If you use the :program:`csh` "
"or :program:`fish` shells, there are alternate ``activate.csh`` and "
"``activate.fish`` scripts you should use instead.)"
msgstr ""
"(Цей сценарій написаний для оболонки bash. Якщо ви використовуєте оболонки :"
"program:`csh` або :program:`fish`, існують альтернативні сценарії ``activate."
"csh`` і ``activate.fish``, які вам слід використовувати замість цього.)"

msgid ""
"Activating the virtual environment will change your shell's prompt to show "
"what virtual environment you're using, and modify the environment so that "
"running ``python`` will get you that particular version and installation of "
"Python. For example:"
msgstr ""
"Активація віртуального середовища змінить підказку вашої оболонки, щоб "
"показати, яке віртуальне середовище ви використовуєте, і змінить середовище "
"таким чином, що запуск ``python`` дасть вам цю конкретну версію та "
"інсталяцію Python. Наприклад:"

msgid "To deactivate a virtual environment, type::"
msgstr ""

msgid "into the terminal."
msgstr ""

msgid "Managing Packages with pip"
msgstr "Керування пакетами за допомогою pip"

msgid ""
"You can install, upgrade, and remove packages using a program called :"
"program:`pip`.  By default ``pip`` will install packages from the Python "
"Package Index, <https://pypi.org>.  You can browse the Python Package Index "
"by going to it in your web browser."
msgstr ""
"Ви можете встановлювати, оновлювати та видаляти пакунки за допомогою "
"програми під назвою :program:`pip`. За замовчуванням ``pip`` встановить "
"пакунки з індексу пакетів Python, <https://pypi.org>. Ви можете переглянути "
"індекс пакетів Python, перейшовши до нього у своєму веб-браузері."

msgid ""
"``pip`` has a number of subcommands: \"install\", \"uninstall\", \"freeze\", "
"etc.  (Consult the :ref:`installing-index` guide for complete documentation "
"for ``pip``.)"
msgstr ""
"``pip`` має низку підкоманд: \"встановити\", \"видалити\", \"заморозити\" "
"тощо. (Зверніться до посібника :ref:`installing-index`, щоб отримати повну "
"документацію для ``pip``.)"

msgid ""
"You can install the latest version of a package by specifying a package's "
"name:"
msgstr "Ви можете встановити останню версію пакета, вказавши назву пакета:"

msgid ""
"You can also install a specific version of a package by giving the package "
"name  followed by ``==`` and the version number:"
msgstr ""
"Ви також можете встановити певну версію пакета, вказавши ім’я пакета, а "
"потім ``==`` і номер версії:"

msgid ""
"If you re-run this command, ``pip`` will notice that the requested version "
"is already installed and do nothing.  You can supply a different version "
"number to get that version, or you can run ``python -m pip install --"
"upgrade`` to upgrade the package to the latest version:"
msgstr ""

msgid ""
"``python -m pip uninstall`` followed by one or more package names will "
"remove the packages from the virtual environment."
msgstr ""

msgid ""
"``python -m pip show`` will display information about a particular package:"
msgstr ""

msgid ""
"``python -m pip list`` will display all of the packages installed in the "
"virtual environment:"
msgstr ""

msgid ""
"``python -m pip freeze`` will produce a similar list of the installed "
"packages, but the output uses the format that ``python -m pip install`` "
"expects. A common convention is to put this list in a ``requirements.txt`` "
"file:"
msgstr ""

msgid ""
"The ``requirements.txt`` can then be committed to version control and "
"shipped as part of an application.  Users can then install all the necessary "
"packages with ``install -r``:"
msgstr ""
"Після цього ``requirements.txt`` можна закріпити для контролю версій і "
"відправити як частину програми. Потім користувачі можуть інсталювати всі "
"необхідні пакети за допомогою ``install -r``:"

msgid ""
"``pip`` has many more options.  Consult the :ref:`installing-index` guide "
"for complete documentation for ``pip``.  When you've written a package and "
"want to make it available on the Python Package Index, consult the :ref:"
"`distributing-index` guide."
msgstr ""
"``pip`` має багато інших параметрів. Зверніться до посібника :ref:"
"`installing-index`, щоб отримати повну документацію для ``pip``. Якщо ви "
"написали пакунок і хочете зробити його доступним в індексі пакетів Python, "
"зверніться до посібника :ref:`distributing-index`."
