# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
# Olga Tomakhina, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 01:49+0000\n"
"Last-Translator: Olga Tomakhina, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "Appendix"
msgstr "Додаток"

msgid "Interactive Mode"
msgstr "Інтерактивний режим"

msgid "Error Handling"
msgstr "Обробка помилок"

msgid ""
"When an error occurs, the interpreter prints an error message and a stack "
"trace. In interactive mode, it then returns to the primary prompt; when "
"input came from a file, it exits with a nonzero exit status after printing "
"the stack trace. (Exceptions handled by an :keyword:`except` clause in a :"
"keyword:`try` statement are not errors in this context.)  Some errors are "
"unconditionally fatal and cause an exit with a nonzero exit; this applies to "
"internal inconsistencies and some cases of running out of memory.  All error "
"messages are written to the standard error stream; normal output from "
"executed commands is written to standard output."
msgstr ""
"Коли виникає помилка, інтерпретатор друкує повідомлення про помилку та "
"трасування стека. В інтерактивному режимі він повертається до основного "
"вікна відладки; коли введення даних йшло з файлу, він виходить із ненульовим "
"статусом виходу після друку трасування стека. (Винятки, які обробляються "
"ключовими словами :keyword:`except` в операторі :keyword:`try`, не є "
"помилками в цьому контексті.) Деякі помилки є безумовно фатальними та "
"викликають вихід із ненульовим результатом; це стосується внутрішніх "
"невідповідностей і деяких випадків нестачі пам'яті. Усі повідомлення про "
"помилки записуються в стандартний потік помилок; звичайний вивід виконаних "
"команд записується в стандартний вивід."

msgid ""
"Typing the interrupt character (usually :kbd:`Control-C` or :kbd:`Delete`) "
"to the primary or secondary prompt cancels the input and returns to the "
"primary prompt. [#]_ Typing an interrupt while a command is executing raises "
"the :exc:`KeyboardInterrupt` exception, which may be handled by a :keyword:"
"`try` statement."
msgstr ""
"Введення символу переривання (зазвичай :kbd:`Control-C` або :kbd:`Delete`) у "
"основному чи додатковому командному рядку скасовує введення та повертає до "
"основного командного рядка. [#]_ Введення переривання під час виконання "
"команди викликає виключення :exc:`KeyboardInterrupt`, яке може бути "
"оброблено оператором :keyword:`try`."

msgid "Executable Python Scripts"
msgstr "Виконувані скрипти Python"

msgid ""
"On BSD'ish Unix systems, Python scripts can be made directly executable, "
"like shell scripts, by putting the line ::"
msgstr ""
"У BSD Unix системах скрипти Python можна зробити безпосередньо виконуваними, "
"як скрипти оболонки, додавши рядок ::"

msgid ""
"(assuming that the interpreter is on the user's :envvar:`PATH`) at the "
"beginning of the script and giving the file an executable mode.  The ``#!`` "
"must be the first two characters of the file.  On some platforms, this first "
"line must end with a Unix-style line ending (``'\\n'``), not a Windows "
"(``'\\r\\n'``) line ending.  Note that the hash, or pound, character, "
"``'#'``, is used to start a comment in Python."
msgstr ""
"(за умови, що інтерпретатор знаходиться в змінній середовища користувача :"
"envvar:`PATH`) на початку сценарію та надає файлу режим виконання. ``#!`` "
"має бути першими двома символами файлу. На деяких платформах цей перший "
"рядок має закінчуватися закінченням рядка в стилі Unix (``'\\n'``), а не "
"закінченням рядка Windows (``'\\r\\n'``). Зауважте, що для початку коментаря "
"в Python використовується хеш або символ фунта, ``'#'``."

msgid ""
"The script can be given an executable mode, or permission, using the :"
"program:`chmod` command."
msgstr ""
"Скрипту можна надати режим виконання або дозвіл за допомогою команди :"
"program:`chmod`."

msgid ""
"On Windows systems, there is no notion of an \"executable mode\".  The "
"Python installer automatically associates ``.py`` files with ``python.exe`` "
"so that a double-click on a Python file will run it as a script.  The "
"extension can also be ``.pyw``, in that case, the console window that "
"normally appears is suppressed."
msgstr ""
"У системах Windows немає поняття \"виконуваний режим\". Програма "
"встановлення Python автоматично пов’язує файли ``.py`` з ``python.exe``, щоб "
"подвійне клацання файлу Python запускало його як програму. Розширення також "
"може бути ``.pyw``, у цьому випадку вікно консолі, яке в іншому випадку б "
"з’явилось, приховується."

msgid "The Interactive Startup File"
msgstr "Інтерактивний файл запуску"

msgid ""
"When you use Python interactively, it is frequently handy to have some "
"standard commands executed every time the interpreter is started.  You can "
"do this by setting an environment variable named :envvar:`PYTHONSTARTUP` to "
"the name of a file containing your start-up commands.  This is similar to "
"the :file:`.profile` feature of the Unix shells."
msgstr ""
"Коли ви використовуєте Python в інтерактивному режимі, часто зручно мати "
"деякі стандартні команди, які виконуються щоразу, коли запускається "
"інтерпретатор. Ви можете зробити це, встановивши змінну середовища з назвою :"
"envvar:`PYTHONSTARTUP` на назву файлу, що містить ваші команди запуску. Це "
"схоже на функцію :file:`.profile` оболонок Unix."

msgid ""
"This file is only read in interactive sessions, not when Python reads "
"commands from a script, and not when :file:`/dev/tty` is given as the "
"explicit source of commands (which otherwise behaves like an interactive "
"session).  It is executed in the same namespace where interactive commands "
"are executed, so that objects that it defines or imports can be used without "
"qualification in the interactive session. You can also change the prompts "
"``sys.ps1`` and ``sys.ps2`` in this file."
msgstr ""
"Цей файл читається лише під час інтерактивних сеансів, а не тоді, коли "
"Python читає команди зі сценарію, і не коли :file:`/dev/tty` вказано як явне "
"джерело команд (що інакше поводиться як інтерактивний сеанс). Він "
"виконується в тому самому просторі імен, де виконуються інтерактивні "
"команди, тому об’єкти, які він визначає або імпортує, можна використовувати "
"без застережень в інтерактивному сеансі. Ви також можете змінити підказки "
"``sys.ps1`` і ``sys.ps2`` у цьому файлі."

msgid ""
"If you want to read an additional start-up file from the current directory, "
"you can program this in the global start-up file using code like ``if os."
"path.isfile('.pythonrc.py'): exec(open('.pythonrc.py').read())``. If you "
"want to use the startup file in a script, you must do this explicitly in the "
"script::"
msgstr ""
"Якщо ви хочете прочитати додатковий файл запуску з поточного каталогу, ви "
"можете запрограмувати це в глобальному файлі запуску за допомогою коду на "
"кшталт ``if os.path.isfile('.pythonrc.py'): exec(open ('.pythonrc.py')."
"read())``. Якщо ви хочете використовувати файл запуску в сценарії, ви "
"повинні зробити це явно в сценарії::"

msgid "The Customization Modules"
msgstr "Модулі налаштування"

msgid ""
"Python provides two hooks to let you customize it: :mod:`sitecustomize` and :"
"mod:`usercustomize`.  To see how it works, you need first to find the "
"location of your user site-packages directory.  Start Python and run this "
"code::"
msgstr ""
"Python надає два хуки, які дозволяють налаштувати його: :mod:`sitecustomize` "
"і :mod:`usercustomize`. Щоб побачити, як це працює, вам потрібно спочатку "
"знайти розташування вашого каталогу пакетів сайту користувача. Запустіть "
"Python і виконайте цей код:"

msgid ""
"Now you can create a file named :file:`usercustomize.py` in that directory "
"and put anything you want in it.  It will affect every invocation of Python, "
"unless it is started with the :option:`-s` option to disable the automatic "
"import."
msgstr ""
"Тепер ви можете створити файл із назвою :file:`usercustomize.py` у цьому "
"каталозі та помістити в нього все, що завгодно. Це впливатиме на кожен "
"виклик Python, якщо його не запущено з параметром :option:`-s` для вимкнення "
"автоматичного імпорту."

msgid ""
":mod:`sitecustomize` works in the same way, but is typically created by an "
"administrator of the computer in the global site-packages directory, and is "
"imported before :mod:`usercustomize`.  See the documentation of the :mod:"
"`site` module for more details."
msgstr ""
":mod:`sitecustomize` працює так само, але зазвичай створюється "
"адміністратором комп’ютера в глобальному каталозі пакетів сайту та "
"імпортується перед :mod:`usercustomize`. Перегляньте документацію модуля :"
"mod:`site` для отримання додаткової інформації."

msgid "Footnotes"
msgstr "Виноски"

msgid "A problem with the GNU Readline package may prevent this."
msgstr "Проблема з пакетом GNU Readline може запобігти цьому."
