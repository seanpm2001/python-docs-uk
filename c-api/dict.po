# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 00:48+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "Dictionary Objects"
msgstr "Об’єкти словника"

msgid ""
"This subtype of :c:type:`PyObject` represents a Python dictionary object."
msgstr "Цей підтип :c:type:`PyObject` представляє об’єкт словника Python."

msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python dictionary "
"type.  This is the same object as :class:`dict` in the Python layer."
msgstr ""
"Цей екземпляр :c:type:`PyTypeObject` представляє тип словника Python. Це той "
"самий об’єкт, що й :class:`dict` на рівні Python."

msgid ""
"Return true if *p* is a dict object or an instance of a subtype of the dict "
"type.  This function always succeeds."
msgstr ""
"Повертає true, якщо *p* є об’єктом dict або екземпляром підтипу типу dict. "
"Ця функція завжди успішна."

msgid ""
"Return true if *p* is a dict object, but not an instance of a subtype of the "
"dict type.  This function always succeeds."
msgstr ""
"Повертає true, якщо *p* є об’єктом dict, але не екземпляром підтипу типу "
"dict. Ця функція завжди успішна."

msgid "Return a new empty dictionary, or ``NULL`` on failure."
msgstr "Повертає новий порожній словник або ``NULL`` у разі помилки."

msgid ""
"Return a :class:`types.MappingProxyType` object for a mapping which enforces "
"read-only behavior.  This is normally used to create a view to prevent "
"modification of the dictionary for non-dynamic class types."
msgstr ""
"Повертає об’єкт :class:`types.MappingProxyType` для зіставлення, яке "
"забезпечує поведінку лише для читання. Зазвичай це використовується для "
"створення представлення для запобігання модифікації словника для "
"нединамічних типів класів."

msgid "Empty an existing dictionary of all key-value pairs."
msgstr "Очистити існуючий словник від усіх пар ключ-значення."

msgid ""
"Determine if dictionary *p* contains *key*.  If an item in *p* is matches "
"*key*, return ``1``, otherwise return ``0``.  On error, return ``-1``. This "
"is equivalent to the Python expression ``key in p``."
msgstr ""
"Визначте, чи словник *p* містить *ключ*. Якщо елемент у *p* відповідає "
"*ключу*, поверніть ``1``, інакше поверніть ``0``. У разі помилки повертає "
"``-1``. Це еквівалентно виразу Python ``key in p``."

msgid "Return a new dictionary that contains the same key-value pairs as *p*."
msgstr ""
"Повертає новий словник, який містить ті самі пари ключ-значення, що й *p*."

msgid ""
"Insert *val* into the dictionary *p* with a key of *key*.  *key* must be :"
"term:`hashable`; if it isn't, :exc:`TypeError` will be raised. Return ``0`` "
"on success or ``-1`` on failure.  This function *does not* steal a reference "
"to *val*."
msgstr ""
"Вставте *val* у словник *p* з ключем *key*. *ключ* має бути :term:"
"`hashable`; якщо це не так, буде викликано :exc:`TypeError`. Повертає ``0`` "
"у разі успіху або ``-1`` у разі невдачі. Ця функція *не* викрадає посилання "
"на *val*."

msgid ""
"Insert *val* into the dictionary *p* using *key* as a key. *key* should be "
"a :c:expr:`const char*`.  The key object is created using "
"``PyUnicode_FromString(key)``.  Return ``0`` on success or ``-1`` on "
"failure.  This function *does not* steal a reference to *val*."
msgstr ""

msgid ""
"Remove the entry in dictionary *p* with key *key*. *key* must be hashable; "
"if it isn't, :exc:`TypeError` is raised. If *key* is not in the dictionary, :"
"exc:`KeyError` is raised. Return ``0`` on success or ``-1`` on failure."
msgstr ""
"Видаліть запис у словнику *p* за допомогою ключа *key*. *ключ* має бути "
"хешованим; якщо ні, виникає :exc:`TypeError`. Якщо *key* немає в словнику, "
"виникає :exc:`KeyError`. Повертає ``0`` у разі успіху або ``-1`` у разі "
"невдачі."

msgid ""
"Remove the entry in dictionary *p* which has a key specified by the string "
"*key*. If *key* is not in the dictionary, :exc:`KeyError` is raised. Return "
"``0`` on success or ``-1`` on failure."
msgstr ""
"Видаліть запис у словнику *p*, який має ключ, визначений рядком *key*. Якщо "
"*key* немає в словнику, виникає :exc:`KeyError`. Повертає ``0`` у разі "
"успіху або ``-1`` у разі невдачі."

msgid ""
"Return the object from dictionary *p* which has a key *key*.  Return "
"``NULL`` if the key *key* is not present, but *without* setting an exception."
msgstr ""
"Повертає об’єкт зі словника *p*, який має ключ *key*. Повертає ``NULL``, "
"якщо ключ *key* відсутній, але *без* встановлення винятку."

msgid ""
"Note that exceptions which occur while calling :meth:`__hash__` and :meth:"
"`__eq__` methods will get suppressed. To get error reporting use :c:func:"
"`PyDict_GetItemWithError()` instead."
msgstr ""
"Зверніть увагу, що винятки, які виникають під час виклику методів :meth:"
"`__hash__` і :meth:`__eq__`, будуть придушені. Щоб отримати звіт про "
"помилку, замість цього використовуйте :c:func:`PyDict_GetItemWithError()`."

msgid ""
"Calling this API without :term:`GIL` held had been allowed for historical "
"reason. It is no longer allowed."
msgstr ""
"Виклик цього API без утримання :term:`GIL` був дозволений з історичних "
"причин. Це більше не дозволено."

msgid ""
"Variant of :c:func:`PyDict_GetItem` that does not suppress exceptions. "
"Return ``NULL`` **with** an exception set if an exception occurred.  Return "
"``NULL`` **without** an exception set if the key wasn't present."
msgstr ""
"Варіант :c:func:`PyDict_GetItem`, який не пригнічує винятки. Повертає "
"``NULL`` **з** встановленим винятком, якщо виняток стався. Повертає ``NULL`` "
"**без** набору винятків, якщо ключ відсутній."

msgid ""
"This is the same as :c:func:`PyDict_GetItem`, but *key* is specified as a :c:"
"expr:`const char*`, rather than a :c:expr:`PyObject*`."
msgstr ""

msgid ""
"Note that exceptions which occur while calling :meth:`__hash__` and :meth:"
"`__eq__` methods and creating a temporary string object will get suppressed. "
"To get error reporting use :c:func:`PyDict_GetItemWithError()` instead."
msgstr ""
"Зауважте, що винятки, які виникають під час виклику методів :meth:`__hash__` "
"і :meth:`__eq__` і створення тимчасового рядкового об’єкта, будуть "
"придушені. Щоб отримати звіт про помилку, замість цього використовуйте :c:"
"func:`PyDict_GetItemWithError()`."

msgid ""
"This is the same as the Python-level :meth:`dict.setdefault`.  If present, "
"it returns the value corresponding to *key* from the dictionary *p*.  If the "
"key is not in the dict, it is inserted with value *defaultobj* and "
"*defaultobj* is returned.  This function evaluates the hash function of "
"*key* only once, instead of evaluating it independently for the lookup and "
"the insertion."
msgstr ""
"Це те саме, що на рівні Python :meth:`dict.setdefault`. Якщо він присутній, "
"він повертає значення, що відповідає *key* зі словника *p*. Якщо ключа немає "
"в dict, він вставляється зі значенням *defaultobj* і повертається "
"*defaultobj*. Ця функція обчислює хеш-функцію *key* лише один раз, замість "
"того, щоб оцінювати її незалежно для пошуку та вставки."

msgid ""
"Return a :c:type:`PyListObject` containing all the items from the dictionary."
msgstr "Повертає :c:type:`PyListObject`, що містить усі елементи зі словника."

msgid ""
"Return a :c:type:`PyListObject` containing all the keys from the dictionary."
msgstr "Повертає :c:type:`PyListObject`, що містить усі ключі зі словника."

msgid ""
"Return a :c:type:`PyListObject` containing all the values from the "
"dictionary *p*."
msgstr ""
"Повертає :c:type:`PyListObject`, що містить усі значення зі словника *p*."

msgid ""
"Return the number of items in the dictionary.  This is equivalent to "
"``len(p)`` on a dictionary."
msgstr ""
"Повернути кількість елементів у словнику. Це еквівалентно ``len(p)`` у "
"словнику."

msgid ""
"Iterate over all key-value pairs in the dictionary *p*.  The :c:type:"
"`Py_ssize_t` referred to by *ppos* must be initialized to ``0`` prior to the "
"first call to this function to start the iteration; the function returns "
"true for each pair in the dictionary, and false once all pairs have been "
"reported.  The parameters *pkey* and *pvalue* should either point to :c:expr:"
"`PyObject*` variables that will be filled in with each key and value, "
"respectively, or may be ``NULL``.  Any references returned through them are "
"borrowed.  *ppos* should not be altered during iteration. Its value "
"represents offsets within the internal dictionary structure, and since the "
"structure is sparse, the offsets are not consecutive."
msgstr ""

msgid "For example::"
msgstr "Наприклад::"

msgid ""
"The dictionary *p* should not be mutated during iteration.  It is safe to "
"modify the values of the keys as you iterate over the dictionary, but only "
"so long as the set of keys does not change.  For example::"
msgstr ""
"Словник *p* не повинен змінюватися під час ітерації. Безпечно змінювати "
"значення ключів під час перегляду словника, але лише до тих пір, поки набір "
"ключів не зміниться. Наприклад::"

msgid ""
"Iterate over mapping object *b* adding key-value pairs to dictionary *a*. "
"*b* may be a dictionary, or any object supporting :c:func:`PyMapping_Keys` "
"and :c:func:`PyObject_GetItem`. If *override* is true, existing pairs in *a* "
"will be replaced if a matching key is found in *b*, otherwise pairs will "
"only be added if there is not a matching key in *a*. Return ``0`` on success "
"or ``-1`` if an exception was raised."
msgstr ""
"Ітерація об’єкта відображення *b*, додавання пар ключ-значення до словника "
"*a*. *b* може бути словником або будь-яким об’єктом, що підтримує :c:func:"
"`PyMapping_Keys` і :c:func:`PyObject_GetItem`. Якщо *override* має значення "
"true, існуючі пари в *a* буде замінено, якщо відповідний ключ буде знайдено "
"в *b*, інакше пари будуть додані, лише якщо в *a* немає відповідного ключа. "
"Повертає ``0`` у разі успіху або ``-1``, якщо було викликано виключення."

msgid ""
"This is the same as ``PyDict_Merge(a, b, 1)`` in C, and is similar to ``a."
"update(b)`` in Python except that :c:func:`PyDict_Update` doesn't fall back "
"to the iterating over a sequence of key value pairs if the second argument "
"has no \"keys\" attribute.  Return ``0`` on success or ``-1`` if an "
"exception was raised."
msgstr ""
"Це те саме, що ``PyDict_Merge(a, b, 1)`` у C, і схоже на ``a.update(b)`` у "
"Python, за винятком того, що :c:func:`PyDict_Update` не падає повернутися до "
"повторення послідовності пар ключ-значення, якщо другий аргумент не має "
"атрибута \"ключі\". Повертає ``0`` у разі успіху або ``-1``, якщо було "
"викликано виключення."

msgid ""
"Update or merge into dictionary *a*, from the key-value pairs in *seq2*. "
"*seq2* must be an iterable object producing iterable objects of length 2, "
"viewed as key-value pairs.  In case of duplicate keys, the last wins if "
"*override* is true, else the first wins. Return ``0`` on success or ``-1`` "
"if an exception was raised. Equivalent Python (except for the return value)::"
msgstr ""
"Оновіть або об’єднайте в словник *a* з пар ключ-значення в *seq2*. *seq2* "
"має бути повторюваним об’єктом, що створює ітеровані об’єкти довжини 2, які "
"розглядаються як пари ключ-значення. У випадку дублікатів ключів, останній "
"виграє, якщо *override* має значення true, інакше виграє перший. Повертає "
"``0`` в разі успіху або ``-1``, якщо було викликано виключення. "
"Еквівалентний Python (за винятком значення, що повертається)::"
