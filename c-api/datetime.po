# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 00:48+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "DateTime Objects"
msgstr "Об’єкти DateTime"

msgid ""
"Various date and time objects are supplied by the :mod:`datetime` module. "
"Before using any of these functions, the header file :file:`datetime.h` must "
"be included in your source (note that this is not included by :file:`Python."
"h`), and the macro :c:macro:`PyDateTime_IMPORT` must be invoked, usually as "
"part of the module initialisation function.  The macro puts a pointer to a C "
"structure into a static variable, :c:data:`PyDateTimeAPI`, that is used by "
"the following macros."
msgstr ""
"Модуль :mod:`datetime` надає різні об’єкти дати й часу. Перш ніж "
"використовувати будь-яку з цих функцій, файл заголовка :file:`datetime.h` "
"має бути включений у ваш джерело (зверніть увагу, що це не включено :file:"
"`Python.h`), а макрос :c:macro:`PyDateTime_IMPORT` Необхідно викликати, як "
"правило, як частину функції ініціалізації модуля. Макрос поміщає вказівник "
"на структуру C у статичну змінну, :c:data:`PyDateTimeAPI`, яка "
"використовується наступними макросами."

msgid "Macro for access to the UTC singleton:"
msgstr "Макрос для доступу до синглтону UTC:"

msgid ""
"Returns the time zone singleton representing UTC, the same object as :attr:"
"`datetime.timezone.utc`."
msgstr ""
"Повертає синглтон часового поясу, який представляє UTC, той самий об’єкт, що "
"й :attr:`datetime.timezone.utc`."

msgid "Type-check macros:"
msgstr "Макроси перевірки типу:"

msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType` or a subtype "
"of :c:data:`PyDateTime_DateType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""
"Повертає true, якщо *ob* має тип :c:data:`PyDateTime_DateType` або підтип :c:"
"data:`PyDateTime_DateType`. *ob* не має бути ``NULL``. Ця функція завжди "
"успішна."

msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Повертає true, якщо *ob* має тип :c:data:`PyDateTime_DateType`. *ob* не має "
"бути ``NULL``. Ця функція завжди успішна."

msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType` or a "
"subtype of :c:data:`PyDateTime_DateTimeType`.  *ob* must not be ``NULL``.  "
"This function always succeeds."
msgstr ""
"Повертає true, якщо *ob* має тип :c:data:`PyDateTime_DateTimeType` або "
"підтип :c:data:`PyDateTime_DateTimeType`. *ob* не має бути ``NULL``. Ця "
"функція завжди успішна."

msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"Повертає true, якщо *ob* має тип :c:data:`PyDateTime_DateTimeType`. *ob* не "
"має бути ``NULL``. Ця функція завжди успішна."

msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType` or a subtype "
"of :c:data:`PyDateTime_TimeType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""
"Повертає true, якщо *ob* має тип :c:data:`PyDateTime_TimeType` або підтип :c:"
"data:`PyDateTime_TimeType`. *ob* не має бути ``NULL``. Ця функція завжди "
"успішна."

msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Повертає true, якщо *ob* має тип :c:data:`PyDateTime_TimeType`. *ob* не має "
"бути ``NULL``. Ця функція завжди успішна."

msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType` or a subtype "
"of :c:data:`PyDateTime_DeltaType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Повертає true, якщо *ob* має тип :c:data:`PyDateTime_DeltaType` або підтип :"
"c:data:`PyDateTime_DeltaType`. *ob* не має бути ``NULL``. Ця функція завжди "
"успішна."

msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Повертає true, якщо *ob* має тип :c:data:`PyDateTime_DeltaType`. *ob* не має "
"бути ``NULL``. Ця функція завжди успішна."

msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType` or a subtype "
"of :c:data:`PyDateTime_TZInfoType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Повертає true, якщо *ob* має тип :c:data:`PyDateTime_TZInfoType` або підтип :"
"c:data:`PyDateTime_TZInfoType`. *ob* не має бути ``NULL``. Ця функція завжди "
"успішна."

msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"Повертає true, якщо *ob* має тип :c:data:`PyDateTime_TZInfoType`. *ob* не "
"має бути ``NULL``. Ця функція завжди успішна."

msgid "Macros to create objects:"
msgstr "Макроси для створення об'єктів:"

msgid ""
"Return a :class:`datetime.date` object with the specified year, month and "
"day."
msgstr ""
"Повертає об’єкт :class:`datetime.date` із зазначеним роком, місяцем і днем."

msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second and microsecond."
msgstr ""
"Повертає об’єкт :class:`datetime.datetime` із вказаним роком, місяцем, днем, "
"годиною, хвилиною, секундою та мікросекундою."

msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second, microsecond and fold."
msgstr ""
"Повертає об’єкт :class:`datetime.datetime` із вказаним роком, місяцем, днем, "
"годиною, хвилиною, секундою, мікросекундою та кратністю."

msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second and microsecond."
msgstr ""
"Повертає об’єкт :class:`datetime.time` із вказаною годиною, хвилиною, "
"секундою та мікросекундою."

msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second, microsecond and fold."
msgstr ""
"Повертає об’єкт :class:`datetime.time` із вказаною годиною, хвилиною, "
"секундою, мікросекундою та кратністю."

msgid ""
"Return a :class:`datetime.timedelta` object representing the given number of "
"days, seconds and microseconds.  Normalization is performed so that the "
"resulting number of microseconds and seconds lie in the ranges documented "
"for :class:`datetime.timedelta` objects."
msgstr ""
"Повертає об’єкт :class:`datetime.timedelta`, що представляє задану кількість "
"днів, секунд і мікросекунд. Нормалізація виконується таким чином, щоб "
"результуюча кількість мікросекунд і секунд лежала в діапазонах, "
"задокументованих для об’єктів :class:`datetime.timedelta`."

msgid ""
"Return a :class:`datetime.timezone` object with an unnamed fixed offset "
"represented by the *offset* argument."
msgstr ""
"Повертає об’єкт :class:`datetime.timezone` із фіксованим зсувом без назви, "
"представленим аргументом *offset*."

msgid ""
"Return a :class:`datetime.timezone` object with a fixed offset represented "
"by the *offset* argument and with tzname *name*."
msgstr ""
"Повертає об’єкт :class:`datetime.timezone` із фіксованим зсувом, "
"представленим аргументом *offset*, і з tzname *name*."

msgid ""
"Macros to extract fields from date objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Date`, including subclasses (such as :c:data:"
"`PyDateTime_DateTime`).  The argument must not be ``NULL``, and the type is "
"not checked:"
msgstr ""
"Макроси для вилучення полів з об’єктів дати. Аргумент має бути екземпляром :"
"c:data:`PyDateTime_Date`, включаючи підкласи (наприклад, :c:data:"
"`PyDateTime_DateTime`). Аргумент не має бути ``NULL``, а тип не "
"перевіряється:"

msgid "Return the year, as a positive int."
msgstr "Повернути рік, як позитивне внутр."

msgid "Return the month, as an int from 1 through 12."
msgstr "Повертає місяць як int від 1 до 12."

msgid "Return the day, as an int from 1 through 31."
msgstr "Повертає день як int від 1 до 31."

msgid ""
"Macros to extract fields from datetime objects.  The argument must be an "
"instance of :c:data:`PyDateTime_DateTime`, including subclasses. The "
"argument must not be ``NULL``, and the type is not checked:"
msgstr ""
"Макроси для вилучення полів з об’єктів datetime. Аргумент має бути "
"екземпляром :c:data:`PyDateTime_DateTime`, включаючи підкласи. Аргумент не "
"має бути ``NULL``, а тип не перевіряється:"

msgid "Return the hour, as an int from 0 through 23."
msgstr "Повертає годину як int від 0 до 23."

msgid "Return the minute, as an int from 0 through 59."
msgstr "Повертає хвилини як int від 0 до 59."

msgid "Return the second, as an int from 0 through 59."
msgstr "Повертає секунду як int від 0 до 59."

msgid "Return the microsecond, as an int from 0 through 999999."
msgstr "Повертає мікросекунду як int від 0 до 999999."

msgid "Return the fold, as an int from 0 through 1."
msgstr ""

msgid "Return the tzinfo (which may be ``None``)."
msgstr "Повертає tzinfo (яка може бути ``None``)."

msgid ""
"Macros to extract fields from time objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Time`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"Макроси для вилучення полів з об’єктів часу. Аргумент має бути екземпляром :"
"c:data:`PyDateTime_Time`, включаючи підкласи. Аргумент не має бути ``NULL``, "
"а тип не перевіряється:"

msgid ""
"Macros to extract fields from time delta objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Delta`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"Макроси для вилучення полів з об’єктів дельта часу. Аргумент має бути "
"екземпляром :c:data:`PyDateTime_Delta`, включаючи підкласи. Аргумент не має "
"бути ``NULL``, а тип не перевіряється:"

msgid "Return the number of days, as an int from -999999999 to 999999999."
msgstr "Повертає кількість днів у вигляді int від -999999999 до 999999999."

msgid "Return the number of seconds, as an int from 0 through 86399."
msgstr "Повертає кількість секунд у вигляді цілого типу від 0 до 86399."

msgid "Return the number of microseconds, as an int from 0 through 999999."
msgstr ""
"Повертає кількість мікросекунд у вигляді цілого значення від 0 до 999999."

msgid "Macros for the convenience of modules implementing the DB API:"
msgstr "Макроси для зручності модулів, що реалізують API БД:"

msgid ""
"Create and return a new :class:`datetime.datetime` object given an argument "
"tuple suitable for passing to :meth:`datetime.datetime.fromtimestamp()`."
msgstr ""
"Створіть і поверніть новий об’єкт :class:`datetime.datetime` із кортежем "
"аргументів, придатним для передачі в :meth:`datetime.datetime."
"fromtimestamp()`."

msgid ""
"Create and return a new :class:`datetime.date` object given an argument "
"tuple suitable for passing to :meth:`datetime.date.fromtimestamp()`."
msgstr ""
"Створіть і поверніть новий об’єкт :class:`datetime.date` із кортежем "
"аргументів, придатним для передачі в :meth:`datetime.date.fromtimestamp()`."
