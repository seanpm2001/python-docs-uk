# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 00:47+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "Allocating Objects on the Heap"
msgstr "Розміщення об'єктів у купі"

msgid ""
"Initialize a newly allocated object *op* with its type and initial "
"reference.  Returns the initialized object.  If *type* indicates that the "
"object participates in the cyclic garbage detector, it is added to the "
"detector's set of observed objects. Other fields of the object are not "
"affected."
msgstr ""

msgid ""
"This does everything :c:func:`PyObject_Init` does, and also initializes the "
"length information for a variable-size object."
msgstr ""
"Це робить все, що робить :c:func:`PyObject_Init`, а також ініціалізує "
"інформацію про довжину для об’єкта змінного розміру."

msgid ""
"Allocate a new Python object using the C structure type *TYPE* and the "
"Python type object *type*.  Fields not defined by the Python object header "
"are not initialized; the object's reference count will be one.  The size of "
"the memory allocation is determined from the :c:member:`~PyTypeObject."
"tp_basicsize` field of the type object."
msgstr ""
"Виділіть новий об’єкт Python за допомогою типу структури C *TYPE* і об’єкта "
"типу Python *type*. Поля, не визначені заголовком об’єкта Python, не "
"ініціалізуються; кількість посилань об'єкта буде одиницею. Розмір виділеної "
"пам’яті визначається з поля :c:member:`~PyTypeObject.tp_basicsize` об’єкта "
"типу."

msgid ""
"Allocate a new Python object using the C structure type *TYPE* and the "
"Python type object *type*.  Fields not defined by the Python object header "
"are not initialized.  The allocated memory allows for the *TYPE* structure "
"plus *size* fields of the size given by the :c:member:`~PyTypeObject."
"tp_itemsize` field of *type*.  This is useful for implementing objects like "
"tuples, which are able to determine their size at construction time.  "
"Embedding the array of fields into the same allocation decreases the number "
"of allocations, improving the memory management efficiency."
msgstr ""
"Виділіть новий об’єкт Python за допомогою типу структури C *TYPE* і об’єкта "
"типу Python *type*. Поля, не визначені заголовком об’єкта Python, не "
"ініціалізуються. Виділена пам’ять дозволяє структуру *TYPE* плюс поля *size* "
"розміру, заданого полем :c:member:`~PyTypeObject.tp_itemsize` *type*. Це "
"корисно для реалізації таких об’єктів, як кортежі, які можуть визначати свій "
"розмір під час створення. Вбудовування масиву полів у те саме виділення "
"зменшує кількість виділень, підвищуючи ефективність керування пам’яттю."

msgid ""
"Releases memory allocated to an object using :c:func:`PyObject_New` or :c:"
"func:`PyObject_NewVar`.  This is normally called from the :c:member:"
"`~PyTypeObject.tp_dealloc` handler specified in the object's type.  The "
"fields of the object should not be accessed after this call as the memory is "
"no longer a valid Python object."
msgstr ""
"Звільняє пам’ять, виділену об’єкту за допомогою :c:func:`PyObject_New` або :"
"c:func:`PyObject_NewVar`. Зазвичай це викликається з обробника :c:member:"
"`~PyTypeObject.tp_dealloc`, указаного в типі об’єкта. Після цього виклику "
"доступ до полів об’єкта не має здійснюватися, оскільки пам’ять більше не є "
"дійсним об’єктом Python."

msgid ""
"Object which is visible in Python as ``None``.  This should only be accessed "
"using the :c:macro:`Py_None` macro, which evaluates to a pointer to this "
"object."
msgstr ""
"Об’єкт, видимий у Python як ``None``. Доступ до нього можна отримати лише за "
"допомогою макросу :c:macro:`Py_None`, який обчислює вказівник на цей об’єкт."

msgid ":c:func:`PyModule_Create`"
msgstr ":c:func:`PyModule_Create`"

msgid "To allocate and create extension modules."
msgstr "Для розміщення та створення модулів розширення."
