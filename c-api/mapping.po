# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 00:49+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "Mapping Protocol"
msgstr "Протокол відображення"

msgid ""
"See also :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` and :c:func:"
"`PyObject_DelItem`."
msgstr ""
"Дивіться також :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` і :c:"
"func:`PyObject_DelItem`."

msgid ""
"Return ``1`` if the object provides the mapping protocol or supports "
"slicing, and ``0`` otherwise.  Note that it returns ``1`` for Python classes "
"with a :meth:`__getitem__` method, since in general it is impossible to "
"determine what type of keys the class supports. This function always "
"succeeds."
msgstr ""
"Повертає ``1``, якщо об’єкт забезпечує протокол відображення або підтримує "
"нарізку, і ``0`` в іншому випадку. Зверніть увагу, що він повертає ``1`` для "
"класів Python за допомогою методу :meth:`__getitem__`, оскільки загалом "
"неможливо визначити, який тип ключів підтримує клас. Ця функція завжди "
"успішна."

msgid ""
"Returns the number of keys in object *o* on success, and ``-1`` on failure. "
"This is equivalent to the Python expression ``len(o)``."
msgstr ""
"Повертає кількість ключів в об’єкті *o* в разі успіху та ``-1`` у разі "
"невдачі. Це еквівалентно виразу Python ``len(o)``."

msgid ""
"Return element of *o* corresponding to the string *key* or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o[key]``. See "
"also :c:func:`PyObject_GetItem`."
msgstr ""
"Повертає елемент *o*, що відповідає рядку *key* або ``NULL`` у разі помилки. "
"Це еквівалент виразу Python ``o[key]``. Дивіться також :c:func:"
"`PyObject_GetItem`."

msgid ""
"Map the string *key* to the value *v* in object *o*.  Returns ``-1`` on "
"failure.  This is the equivalent of the Python statement ``o[key] = v``. See "
"also :c:func:`PyObject_SetItem`.  This function *does not* steal a reference "
"to *v*."
msgstr ""
"Зіставте рядок *key* зі значенням *v* в об’єкті *o*. Повертає ``-1`` у разі "
"помилки. Це еквівалент оператора Python ``o[key] = v``. Дивіться також :c:"
"func:`PyObject_SetItem`. Ця функція *не* викрадає посилання на *v*."

msgid ""
"Remove the mapping for the object *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``. This "
"is an alias of :c:func:`PyObject_DelItem`."
msgstr ""
"Видаліть зіставлення для об’єкта *key* з об’єкта *o*. Повернути ``-1`` у "
"разі помилки. Це еквівалентно оператору Python ``del o[key]``. Це псевдонім :"
"c:func:`PyObject_DelItem`."

msgid ""
"Remove the mapping for the string *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``."
msgstr ""
"Видаліть зіставлення для рядка *key* з об’єкта *o*. Повернути ``-1`` у разі "
"помилки. Це еквівалентно оператору Python ``del o[key]``."

msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. This function "
"always succeeds."
msgstr ""
"Повертає ``1``, якщо об’єкт зіставлення має ключ *key*, і ``0`` інакше. Це "
"еквівалентно виразу Python ``key in o``. Ця функція завжди успішна."

msgid ""
"Note that exceptions which occur while calling the :meth:`__getitem__` "
"method will get suppressed. To get error reporting use :c:func:"
"`PyObject_GetItem()` instead."
msgstr ""
"Зауважте, що винятки, які виникають під час виклику методу :meth:"
"`__getitem__`, будуть придушені. Щоб отримати повідомлення про помилки, "
"замість цього використовуйте :c:func:`PyObject_GetItem()`."

msgid ""
"Note that exceptions which occur while calling the :meth:`__getitem__` "
"method and creating a temporary string object will get suppressed. To get "
"error reporting use :c:func:`PyMapping_GetItemString()` instead."
msgstr ""
"Зауважте, що винятки, які виникають під час виклику методу :meth:"
"`__getitem__` і створення тимчасового рядкового об’єкта, будуть придушені. "
"Щоб отримати звіт про помилку, замість цього використовуйте :c:func:"
"`PyMapping_GetItemString()`."

msgid ""
"On success, return a list of the keys in object *o*.  On failure, return "
"``NULL``."
msgstr ""
"У разі успіху повертає список ключів в об’єкті *o*. У разі помилки поверніть "
"``NULL``."

msgid "Previously, the function returned a list or a tuple."
msgstr "Раніше функція повертала список або кортеж."

msgid ""
"On success, return a list of the values in object *o*.  On failure, return "
"``NULL``."
msgstr ""
"У разі успіху повертає список значень в об’єкті *o*. У разі помилки "
"поверніть ``NULL``."

msgid ""
"On success, return a list of the items in object *o*, where each item is a "
"tuple containing a key-value pair.  On failure, return ``NULL``."
msgstr ""
"У разі успіху повертає список елементів в об’єкті *o*, де кожен елемент є "
"кортежем, що містить пару ключ-значення. У разі помилки поверніть ``NULL``."
