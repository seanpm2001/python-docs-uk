# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 00:49+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "List Objects"
msgstr "Список об’єктів"

msgid "This subtype of :c:type:`PyObject` represents a Python list object."
msgstr "Цей підтип :c:type:`PyObject` представляє об’єкт списку Python."

msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python list type. "
"This is the same object as :class:`list` in the Python layer."
msgstr ""
"Цей екземпляр :c:type:`PyTypeObject` представляє тип списку Python. Це той "
"самий об’єкт, що й :class:`list` на рівні Python."

msgid ""
"Return true if *p* is a list object or an instance of a subtype of the list "
"type.  This function always succeeds."
msgstr ""
"Повертає true, якщо *p* є об’єктом списку або екземпляром підтипу типу "
"списку. Ця функція завжди успішна."

msgid ""
"Return true if *p* is a list object, but not an instance of a subtype of the "
"list type.  This function always succeeds."
msgstr ""
"Повертає true, якщо *p* є об’єктом списку, але не екземпляром підтипу типу "
"списку. Ця функція завжди успішна."

msgid "Return a new list of length *len* on success, or ``NULL`` on failure."
msgstr ""
"Повертає новий список довжиною *len* у разі успіху або ``NULL`` у разі "
"помилки."

msgid ""
"If *len* is greater than zero, the returned list object's items are set to "
"``NULL``.  Thus you cannot use abstract API functions such as :c:func:"
"`PySequence_SetItem`  or expose the object to Python code before setting all "
"items to a real object with :c:func:`PyList_SetItem`."
msgstr ""
"Якщо *len* більше нуля, для поверненого об’єкта списку встановлено значення "
"``NULL``. Таким чином, ви не можете використовувати абстрактні функції API, "
"такі як :c:func:`PySequence_SetItem`, або надавати об’єкт коду Python до "
"встановлення всіх елементів на реальний об’єкт за допомогою :c:func:"
"`PyList_SetItem`."

msgid ""
"Return the length of the list object in *list*; this is equivalent to "
"``len(list)`` on a list object."
msgstr ""
"Повертає довжину об’єкта списку в *list*; це еквівалентно ``len(list)`` для "
"об'єкта списку."

msgid "Similar to :c:func:`PyList_Size`, but without error checking."
msgstr ""

msgid ""
"Return the object at position *index* in the list pointed to by *list*.  The "
"position must be non-negative; indexing from the end of the list is not "
"supported.  If *index* is out of bounds (<0 or >=len(list)), return ``NULL`` "
"and set an :exc:`IndexError` exception."
msgstr ""
"Повертає об’єкт у позицію *index* у списку, на який вказує *list*. Позиція "
"повинна бути невід’ємною; індексація з кінця списку не підтримується. Якщо "
"*index* виходить за межі ( <0 or > =len(list)), поверніть ``NULL`` і "
"встановіть виняток :exc:`IndexError`."

msgid "Similar to :c:func:`PyList_GetItem`, but without error checking."
msgstr ""

msgid ""
"Set the item at index *index* in list to *item*.  Return ``0`` on success. "
"If *index* is out of bounds, return ``-1`` and set an :exc:`IndexError` "
"exception."
msgstr ""
"Установіть для елемента з індексом *index* у списку значення *item*. У разі "
"успіху повертає ``0``. Якщо *index* виходить за межі, поверніть ``-1`` і "
"встановіть виняток :exc:`IndexError`."

msgid ""
"This function \"steals\" a reference to *item* and discards a reference to "
"an item already in the list at the affected position."
msgstr ""
"Ця функція \"викрадає\" посилання на *елемент* і відкидає посилання на "
"елемент, який уже є у списку в ураженій позиції."

msgid ""
"Macro form of :c:func:`PyList_SetItem` without error checking. This is "
"normally only used to fill in new lists where there is no previous content."
msgstr ""
"Макроформа :c:func:`PyList_SetItem` без перевірки помилок. Зазвичай це "
"використовується лише для заповнення нових списків, де немає попереднього "
"вмісту."

msgid ""
"This macro \"steals\" a reference to *item*, and, unlike :c:func:"
"`PyList_SetItem`, does *not* discard a reference to any item that is being "
"replaced; any reference in *list* at position *i* will be leaked."
msgstr ""
"Цей макрос \"викрадає\" посилання на *item* і, на відміну від :c:func:"
"`PyList_SetItem`, *не* відкидає посилання на будь-який елемент, який "
"замінюється; будь-яке посилання в *списку* в позиції *i* буде витік."

msgid ""
"Insert the item *item* into list *list* in front of index *index*.  Return "
"``0`` if successful; return ``-1`` and set an exception if unsuccessful. "
"Analogous to ``list.insert(index, item)``."
msgstr ""
"Вставте елемент *item* у список *list* перед індексом *index*. Повернути "
"``0`` у разі успіху; повертає ``-1`` і встановлює виняток у разі невдачі. "
"Аналогічно ``list.insert(index, item)``."

msgid ""
"Append the object *item* at the end of list *list*. Return ``0`` if "
"successful; return ``-1`` and set an exception if unsuccessful.  Analogous "
"to ``list.append(item)``."
msgstr ""
"Додайте об’єкт *item* у кінець списку *list*. Повернути ``0`` у разі успіху; "
"повертає ``-1`` і встановлює виняток у разі невдачі. Аналогічно ``list."
"append(item)``."

msgid ""
"Return a list of the objects in *list* containing the objects *between* "
"*low* and *high*.  Return ``NULL`` and set an exception if unsuccessful.  "
"Analogous to ``list[low:high]``.  Indexing from the end of the list is not "
"supported."
msgstr ""
"Повертає список об’єктів у *списку*, що містить об’єкти *між* *низьким* і "
"*високим*. Повертає ``NULL`` і встановлює виняток у разі невдачі. Аналогічно "
"``list[low:high]``. Індексація з кінця списку не підтримується."

msgid ""
"Set the slice of *list* between *low* and *high* to the contents of "
"*itemlist*.  Analogous to ``list[low:high] = itemlist``. The *itemlist* may "
"be ``NULL``, indicating the assignment of an empty list (slice deletion). "
"Return ``0`` on success, ``-1`` on failure.  Indexing from the end of the "
"list is not supported."
msgstr ""
"Встановіть фрагмент *списку* між *низьким* і *високим* вмістом *itemlist*. "
"Аналогічно ``list[low:high] = itemlist``. *itemlist* може бути ``NULL``, що "
"вказує на призначення порожнього списку (видалення фрагмента). Повертає "
"``0`` в разі успіху, ``-1`` у випадку невдачі. Індексація з кінця списку не "
"підтримується."

msgid ""
"Sort the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is equivalent to ``list.sort()``."
msgstr ""
"Розсортуйте елементи *списку* за місцем. Повертає ``0`` в разі успіху, "
"``-1`` у випадку невдачі. Це еквівалентно ``list.sort()``."

msgid ""
"Reverse the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is the equivalent of ``list.reverse()``."
msgstr ""
"Переверніть елементи *списку* на місця. Повертає ``0`` в разі успіху, ``-1`` "
"у випадку невдачі. Це еквівалент ``list.reverse()``."

msgid ""
"Return a new tuple object containing the contents of *list*; equivalent to "
"``tuple(list)``."
msgstr ""
"Повертає новий об’єкт кортежу, що містить вміст *list*; еквівалент "
"``tuple(list)``."
