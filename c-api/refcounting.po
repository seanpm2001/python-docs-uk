# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 00:50+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "Reference Counting"
msgstr "Підрахунок посилань"

msgid ""
"The macros in this section are used for managing reference counts of Python "
"objects."
msgstr ""
"Макроси в цьому розділі використовуються для керування кількістю посилань на "
"об’єкти Python."

msgid "Increment the reference count for object *o*."
msgstr "Збільшити кількість посилань для об’єкта *o*."

msgid ""
"This function is usually used to convert a :term:`borrowed reference` to a :"
"term:`strong reference` in-place. The :c:func:`Py_NewRef` function can be "
"used to create a new :term:`strong reference`."
msgstr ""
"Ця функція зазвичай використовується для перетворення :term:`borrowed "
"reference` на :term:`strong reference` на місці. Функцію :c:func:`Py_NewRef` "
"можна використати для створення нового :term:`strong reference`."

msgid ""
"The object must not be ``NULL``; if you aren't sure that it isn't ``NULL``, "
"use :c:func:`Py_XINCREF`."
msgstr ""
"Об’єкт не має бути ``NULL``; якщо ви не впевнені, що це не ``NULL``, "
"використовуйте :c:func:`Py_XINCREF`."

msgid ""
"Increment the reference count for object *o*.  The object may be ``NULL``, "
"in which case the macro has no effect."
msgstr ""
"Збільшити кількість посилань для об’єкта *o*. Об’єкт може бути ``NULL``, і в "
"цьому випадку макрос не матиме ефекту."

msgid "See also :c:func:`Py_XNewRef`."
msgstr "Дивіться також :c:func:`Py_XNewRef`."

msgid ""
"Create a new :term:`strong reference` to an object: increment the reference "
"count of the object *o* and return the object *o*."
msgstr ""
"Створіть нове :term:`strong reference` на об’єкт: збільште кількість "
"посилань на об’єкт *o* і поверніть об’єкт *o*."

msgid ""
"When the :term:`strong reference` is no longer needed, :c:func:`Py_DECREF` "
"should be called on it to decrement the object reference count."
msgstr ""
"Коли :term:`strong reference` більше не потрібне, :c:func:`Py_DECREF` слід "
"викликати на ньому, щоб зменшити кількість посилань на об’єкт."

msgid ""
"The object *o* must not be ``NULL``; use :c:func:`Py_XNewRef` if *o* can be "
"``NULL``."
msgstr ""
"Об’єкт *o* не має бути ``NULL``; використовуйте :c:func:`Py_XNewRef`, якщо "
"*o* може бути ``NULL``."

msgid "For example::"
msgstr "Наприклад::"

msgid "can be written as::"
msgstr "можна записати як::"

msgid "See also :c:func:`Py_INCREF`."
msgstr "Дивіться також :c:func:`Py_INCREF`."

msgid "Similar to :c:func:`Py_NewRef`, but the object *o* can be NULL."
msgstr ""
"Подібно до :c:func:`Py_NewRef`, але об’єкт *o* може мати значення NULL."

msgid "If the object *o* is ``NULL``, the function just returns ``NULL``."
msgstr ""
"Якщо об’єкт *o* має значення ``NULL``, функція просто повертає ``NULL``."

msgid "Decrement the reference count for object *o*."
msgstr "Зменшити кількість посилань для об’єкта *o*."

msgid ""
"If the reference count reaches zero, the object's type's deallocation "
"function (which must not be ``NULL``) is invoked."
msgstr ""
"Якщо кількість посилань досягає нуля, викликається функція звільнення типу "
"об’єкта (яка не має бути ``NULL``)."

msgid ""
"This function is usually used to delete a :term:`strong reference` before "
"exiting its scope."
msgstr ""
"Ця функція зазвичай використовується для видалення :term:`strong reference` "
"перед виходом з його області."

msgid ""
"The object must not be ``NULL``; if you aren't sure that it isn't ``NULL``, "
"use :c:func:`Py_XDECREF`."
msgstr ""
"Об’єкт не має бути ``NULL``; якщо ви не впевнені, що це не ``NULL``, "
"використовуйте :c:func:`Py_XDECREF`."

msgid ""
"The deallocation function can cause arbitrary Python code to be invoked (e."
"g. when a class instance with a :meth:`__del__` method is deallocated).  "
"While exceptions in such code are not propagated, the executed code has free "
"access to all Python global variables.  This means that any object that is "
"reachable from a global variable should be in a consistent state before :c:"
"func:`Py_DECREF` is invoked.  For example, code to delete an object from a "
"list should copy a reference to the deleted object in a temporary variable, "
"update the list data structure, and then call :c:func:`Py_DECREF` for the "
"temporary variable."
msgstr ""
"Функція звільнення може викликати довільний код Python (наприклад, коли "
"звільняється екземпляр класу з методом :meth:`__del__`). Хоча винятки в "
"такому коді не поширюються, виконаний код має вільний доступ до всіх "
"глобальних змінних Python. Це означає, що будь-який об’єкт, доступний із "
"глобальної змінної, має перебувати в узгодженому стані перед викликом :c:"
"func:`Py_DECREF`. Наприклад, код для видалення об’єкта зі списку має "
"скопіювати посилання на видалений об’єкт у тимчасовій змінній, оновити "
"структуру даних списку, а потім викликати :c:func:`Py_DECREF` для тимчасової "
"змінної."

msgid ""
"Decrement the reference count for object *o*.  The object may be ``NULL``, "
"in which case the macro has no effect; otherwise the effect is the same as "
"for :c:func:`Py_DECREF`, and the same warning applies."
msgstr ""
"Зменшити кількість посилань для об’єкта *o*. Об’єкт може бути ``NULL``, у "
"цьому випадку макрос не має ефекту; інакше ефект такий самий, як і для :c:"
"func:`Py_DECREF`, і застосовується те саме попередження."

msgid ""
"Decrement the reference count for object *o*.  The object may be ``NULL``, "
"in which case the macro has no effect; otherwise the effect is the same as "
"for :c:func:`Py_DECREF`, except that the argument is also set to ``NULL``.  "
"The warning for :c:func:`Py_DECREF` does not apply with respect to the "
"object passed because the macro carefully uses a temporary variable and sets "
"the argument to ``NULL`` before decrementing its reference count."
msgstr ""
"Зменшити кількість посилань для об’єкта *o*. Об’єкт може бути ``NULL``, у "
"цьому випадку макрос не має ефекту; інакше ефект такий самий, як і для :c:"
"func:`Py_DECREF`, за винятком того, що аргумент також має значення ``NULL``. "
"Попередження для :c:func:`Py_DECREF` не застосовується до переданого "
"об’єкта, тому що макрос обережно використовує тимчасову змінну та встановлює "
"для аргументу значення ``NULL`` перед зменшенням кількості посилань."

msgid ""
"It is a good idea to use this macro whenever decrementing the reference "
"count of an object that might be traversed during garbage collection."
msgstr ""
"Доцільно використовувати цей макрос щоразу, коли зменшується кількість "
"посилань на об’єкт, який може бути об’їдений під час збирання сміття."

msgid ""
"Increment the reference count for object *o*. A function version of :c:func:"
"`Py_XINCREF`. It can be used for runtime dynamic embedding of Python."
msgstr ""
"Збільшити кількість посилань для об’єкта *o*. Версія функції :c:func:"
"`Py_XINCREF`. Його можна використовувати для динамічного вбудовування Python "
"під час виконання."

msgid ""
"Decrement the reference count for object *o*. A function version of :c:func:"
"`Py_XDECREF`. It can be used for runtime dynamic embedding of Python."
msgstr ""
"Зменшити кількість посилань для об’єкта *o*. Версія функції :c:func:"
"`Py_XDECREF`. Його можна використовувати для динамічного вбудовування Python "
"під час виконання."

msgid ""
"The following functions or macros are only for use within the interpreter "
"core: :c:func:`_Py_Dealloc`, :c:func:`_Py_ForgetReference`, :c:func:"
"`_Py_NewReference`, as well as the global variable :c:data:`_Py_RefTotal`."
msgstr ""
"Наступні функції або макроси призначені лише для використання в ядрі "
"інтерпретатора: :c:func:`_Py_Dealloc`, :c:func:`_Py_ForgetReference`, :c:"
"func:`_Py_NewReference`, а також глобальна змінна :c:data:`_Py_RefTotal`."
